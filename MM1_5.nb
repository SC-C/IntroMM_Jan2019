(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    403043,       7801]
NotebookOptionsPosition[    380320,       7477]
NotebookOutlinePosition[    380945,       7500]
CellTagsIndexPosition[    380902,       7497]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Introduction to Mathematica:", "Title",
 CellChangeTimes->{{3.718082499004747*^9, 3.718082516055922*^9}, {
  3.721644969214284*^9, 3.7216449729183855`*^9}, {3.722755238605301*^9, 
  3.722755251017521*^9}, {3.746356493825716*^9, 
  3.746356496073647*^9}},ExpressionUUID->"f3b14f4e-23b5-4c29-b96b-\
6a8aab961d06"],

Cell[CellGroupData[{

Cell["Part 1: What is Mathematica?", "Chapter",
 CellChangeTimes->{
  3.7215537255756817`*^9, {3.730522525226214*^9, 3.73052252994022*^9}, {
   3.7305227292290497`*^9, 3.730522730581027*^9}},
 TextAlignment->Center,ExpressionUUID->"68e26b18-7bc5-4be6-a4f6-2853e43ab424"],

Cell[TextData[{
 StyleBox["1. ", "Section",
  FontColor->GrayLevel[0]],
 StyleBox["Mathematica is a mathematical symbolic computation (computer \
algebra) program, used initially in many scientific fields.  It uses the \
Wolfram Language for writing procedures. ",
  FontColor->GrayLevel[0]],
 StyleBox["\nNow Mathematica provides functions performing operations on \
diverse input data in a multiple number of different academic disciplinary \
areas.", "Section",
  FontColor->GrayLevel[0]]
}], "Subchapter",
 CellChangeTimes->{
  3.72155375106839*^9, {3.721555221466957*^9, 3.721555223730629*^9}, 
   3.722144752361573*^9, {3.725706223191505*^9, 3.725706238984282*^9}, {
   3.727083208327173*^9, 3.727083302459572*^9}, 3.728129286110388*^9, {
   3.730523028126668*^9, 3.7305230348245773`*^9}, 
   3.741503025793874*^9},ExpressionUUID->"549c1dc4-1f28-4beb-a1bb-\
22ac8a9a80ef"],

Cell[TextData[{
 "2. See <http://reference.wolfram.com/language> for the academic \
disciplinary areas Mathematica applies to. \n   ",
 ButtonBox["\n        ",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/"], None},
  ButtonNote->"http://reference.wolfram.com/language/"],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsvXlwFGUe/59wiHivq4T1PjceaMCDeAdBjagYBSH4V+r7rd/XgFdcjcYL
DwSicsQoEMlWOaKsg+vG4OISWQKhrKKw8I8pC6tCbVUqFlY5CZPp7pnJZJKZ
ZOb3fJ6nu6d7rkySSXpI3lOvoiZ99zCfed79eT7H5f+3YvFTk3Jycl46lf2z
+P9U3fvii//ntSXnsD+WPv/SyvLn/9//t/D5yv9X/v9evO3/TmYLb2bbrmFv
6P3DeOGFF1544YUXXnjhhRdeeOGFF1544YUXXnjhhRdeeOGFF1544YXX2L7c
T+UAACwBBgiAVcD6ALAQaFEAsgQYIABWAesDwEKgRQHIEmCAAFgFrA8AC4EW
BSBLgAECYBWwPgAsBFoUgCwBBgiAVcD6ALAQaFEAsgQYIABWAesDwEKgRQHI
EmCAAFgFrA8AC4EWBSBLgAECYBWwPgAsBFoUgCwBBgiAVcD6ALAQaFEAsgQY
IABWAesDwEKgRQHIEmCAAFgFrA8AC4EWBSBLgAECYBWwPgAsBFoUgCwBBgiA
VcD6ALAQaFEAsgQYIABWAesDwEKgRQHIEmCAAFgFrA8AC4EWBSBLgAECYBWw
PgAsBFoUgCwBBgiAVcD6ALAQaFEAsgQYIABWAesDwEKgRQHIEmCAAFgFrA8A
C4EWBSBLgAECYBWwPgAsBFoUgCwBBgiAVcD6ALAQaFEAsgQYIABWAesDwEKg
RQHIEmCAAFgFrA8AC4EWBSBLgAECYBWwPgAsBFoUgCwBBgiAVcD6ALAQaFEA
sgQYIABWAesDIG1yM35MaFEAsgQYIABWAesDII5cd3nuaCjPeKBFAcgSYIAA
ZBQxkqa1MawPTFRy07KU8knulae4nztTenmm/PoVcuWMzF4GtCgAWQIMMAH1
jQORSPhYlTTSQ9WEIpEBR+nQdyzoOR6IRNp7t1j9UYDRBNYHxjvpeThXTHY/
PU2qOFuuulhela+8e4Nn7c2e92/3rL/Hs/Fez4Yiz7pb2BvvlhLPh3exbczH
H/7ljY4WzfcdbOn3sx9weoWVw4H6/NH8hIc9ygCQRWTCAEv7lEj0FZT72+z+
DXlp7t596HBfU/GwztjeW2tevrqun67AERjhHW2x9QcDA0crxlCLlve2NfVE
byfPf0wO+x0BaNGTDTZQKm9d6145NZ2NoUXBRCLXvWKK9Ox0+aUZ8utXMDMh
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
+eBObctctory5Vfli+l486lzxfjoqS5kSpXqJb56ScwUv5HR1aJNh+mbERPA
CYBFCOcnsy9mU+Sx1Gbn6SHumekEW6K/0URmUpheFXlPz51BaYnsT/7wKA4o
Zi7iZvxNZEaL/uJgY1bfL3mxy3kgaPTlb5TVha3+3epc+cDvZWJOXFdrJP/k
uq49VYGEk+n2It/vsb/8Yt+unxpDveoA2t9ZJzfEX6ouC/Pc/2uN9DYpg91a
Ii2a5/6ZnUhMeTqD/yvn7t9Cv0ylMxQ1MoH/6bVLCT8BMDYwLXpgWVzA53Dg
uUjLO+0z9SXuvcXSfx8S7zu+PEv3oHL9mSu2t84v2ug/0h5VhjRB7+y1iTrb
YrOCwPEAZfvuLPXWlgUo2TZamyVZj2auRQPhoBw6WMb26nUGjHvFaVG2Jdex
tcW+Q7ydtKg+zWSGjRIK1NxV3lp64FhF3JRlUi2adPfVNaFgoP8YLffa6kL+
aCkbNWFBcYZdjX62dkOBesHsCv0i47gqSBWzWwOrE9xOyhvnxWoizlBzGU9b
Zu+ZBtbKGwLRTemdWZ6N8yl3vr5Uq2CfQz3lN92nvn/lIq2aaK6Yo6eu9KsL
Yo6mpT7lxkz2ibl7NlYyjcpGvfghjwpJVZzNlC3NHr55tX5hMWR58iAAmWTl
KUIiklG8fkUau/DgGcHKqULH0vsVU9SF2pZUeI0M7a/iT6rx+/cnE+fjG8iM
FrVX9YVINPb9r9xtNy4vcO+10SjwRxVNcO8pIElJ8izQ7w8MdNUpe0u5+zRO
i4YC4ZDc11rm3sskK/3y9x4Sx+ST7BFn369l7paKni765e/5sdi9K8+5q446
2Mp2T0ux/JOtz98e+DFOG3+Wo/wusxHK/ztNlCTcIIZ4Ldr1Ky/z+3uNsrdY
aXXQvGcrbxnZbGdjfX9bCXvfSY5iue+nvMSfABgbmBZtKeWKMa0WSGZyDeSc
+Ndfyc/J6zUJhSlKPzk/n8bed+w4lyvVv/AdRU2nq63Voj7Sn3qL6nYKH41J
Ka3MM3j2uFQThayT92jmc/TOPt3ZWMu/8FqSVJwWpQNqpzDWEizpNRUq1Cou
xrpGk2nRVLtLlVEFyEt8y3028SfdYERpMvpmuRY1lCWkwtfROpCxWjTpjVdH
Pzrt09OajIMctU3Sqnxvzf0kPjcviubtVt+mrLlJ35JXGb1Lff/+HZ5NC9Td
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
6xMAJxuTxMRE59cXs5FLPBJSiq7a+yyHKUwyW/Y1+O5mihpVw0T5qm+uFHKU
aVdKpuD59ezR78S/rnbvmcfELXly/vswzXE0zdey75OSYS3KhVbqxy7SWn5n
f6g98HOpu7nI9VkBU01hb0vPT+wTKPN3McuSew8ZNuZ2R2tbKnqYvmKG87Mw
XlJx4ZBM4qqlWP65hQxNrnPxHcnPGWHmWcaO2f17a39XTQLH7K66EDtamy0Y
ioQTbqCjyk4+0Mt1XaaFYhuh/dp7+Rn5XTANwKRmgXuvjY3hA39UUduCPQWd
qlqoVo/88+FwKBCO2n5VX4gJbP6rYi+jLUOt9EHRvbNjBoK/Fib5GI1aNE+h
987Aj+KDKu9lP0r+w90/Frt/rOmVnfpBQCpoPuJRbWZhUjrDGaNz50X6k+NQ
GR0tyr5dTFjWKMwQOp0kC2Vn2NvEvgxKKwXP6KEp9P3pdQToC1zq/a09bHhi
ktra2Y6htgqZHeQPdhC57+di92562uri8yD9v7PjqwcMtfJvFxlXJCzbPcw2
f7L1+du1byOYqAxS6/7UE99c5fp2Fhvg9Eoy6dNp/0u0InfLchU1HeO0MfOL
epmQE/6NZIhfdXVEqwp4A5HeFo+d38KPpBXDYjj7yRbsjejOBKf4wQ8FBviO
8k/2ELMuf2t/SA7+r0IWxzHIxcRWmWAwylFdOn72m0DnlfYUOA81DdAgq19z
gV+ODqxgfJHb9f2dpBW1IjDMBoUR8Zx6WuJuWuDaNUfIVC05Nzq6UauXfYso
NJQKQ82hgjNqSdI7Ou0X0GjYXNK1u9CC3CX+5BX8NdU2XF46e40Dkz0v6rTk
fsKB38uiG4dUU+VryYGp2QXXogYN6TU80Jm8i8mwU/AMH2SjqVWdzVX+1gp3
zJaa7Oxk0lEXwwYt2vkLWy73/aTfVElPdCokNpbA80eAbkp7H/6jiT+Z8rU/
st8B1fUqtTlNbtjPCuk3obdJSfIx6lqU/6YFDIKTLiD4K5TAEPn8FGZT7ClP
84suTrN9ofuH+2JnK9JjdLQo++5pUwnCCe+1u1WD4k541T1iNkPtOJ2x73PE
dzv8RwXfpZo9OhkDV+hLKw5Ip5Z7f7T6PxFkD+nlEA0DkdsbVaGGBKgx1qIm
g0oE/1XnbgqxhFsQ/3EmszLtu5ue5vRHRT4UHtYn/rizhY1E+erGNHBoI28K
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
YlrUPiltxChE0Frsd/PboACv+Aol4eFub7osukMDXwSj4aYA2w6/X/miljnQ
WMvm2suS01Iue1iHktYCxs64uKfO3QfnjSlAl0o99tlRhjWLl4GNBcGMPcjf
FDvF9Ofqf4qiN/OiMab6BCdh4qsSPx+ZuDWvvxSKiTGmVF2h5gXys2t2hRfA
xaGCxy5OYW/SAwJ7a9y/yq9Z1jnzRQsKX0tdu82xd+3+XP6JoZ5UzNHH/VMS
/ZcFLeorlK7wghv+79JDR8Zw7/vuWP0jYw2PZYv6R+AUaV2SEVo0Ou5aJ0jK
epSC0SmL6PDMkzVedwpuwolSk9hP0em+MCi6BK5RhRatz69g2lXoqr54RKlj
K0a84lmUftH6PJnWZRUAAiZhi9OhmPFP3Ce7TkmXxl0bkcO8Y7l5X/vvQFJ+
3LTsvcO3V/W8+VHj0vg2qi1F9XkHu9dD+4+bHoRjoYd3am/ReUbSogShAss3
iS5QT/kPz5v+HrVo/aOoRYUBTnCWnt/9D+d3/2OmzpsxLcpntNvRNXrF97bc
qcU8e4LuQuQqBXVpdLpP3tt69E/y6FPcywUnpsZMf754yi8IntEzZyWZGtdh
TFIi7U08AQeVrajBOHFaVBbbif2cvVgnnFoWGwAski5DjjqPnoUBBA6luCqN
z0dSp5p7E3cl+D/9ByebF8WulslLhXKu3BYW32mc2lRIygTxtAt9TesnHOaQ
H4MWRM9nUi2a/L8cd2x2am3dAHLRXfpv6MDc8dUMe0RZh9A5nCIt76ghWlSc
N79R0nsajTFXCFrKsp+aS32JIzbVefR8ur+V7XWAOAw4e2XtT3aGBXGoES9a
1Ly6xlHa7+ocn5ZduUqLJu7T6gtFlZqZtOg1wdaam0BGVts3FNUv4Vv2tv2m
8sQfmRc02YGf2B4uti3nv8Ox0AP0s1VfuSfSogShgqcpoQu05Mvwi/fgjbDR
b30SfhfL3Qtj3Ojh+8fqHszUeTOnRV1B5l7z4Uyx/1J7TPwk06Kf2+Oye1hv
Uyz9nMWIovcM5RN6KXl8o1ceLKrRYfzLMVWuIfmUnkyco7/iL/GXX+euXBOS
riGmtJU6c2iN6nOQ5dGvuOiPKubxE1+Vxuez/brxIX80kVJN2pWnqTDoY3Gt
GBGxRJorj3sJE/FpatEFY59jSOeV0NnpIfPUGbteLZr8vzw7WrTkK+kKxfRB
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
UhEzBGnRucP8WwO0qNc6idNyzgHnprKOtTXOFl8kGvRsNlxmxHD0haOOLl2N
156aik66Nhh/zcSsUGxbfsj+lqn1+YPd64uPLr/a3o4uh36gN+gTek7emLQo
Mf9AR+X53f/oZ4vOi1v4xv/pb8x378X6YLxq6Pldfyto0arbcc16NmjCL3xJ
Jve+78oPZ6WfHtXvCFWRGQMEMSnGXY8P+ZPJRWgZcoRD0ctfrHfLN+rTonzV
+Gz8g0iLziGuh8e9FB5RGezZcIbmo8AoLVq/5RzcoyFrjdwR2ro6t/yiTkdU
rxbdMBAiLTqPeMdyc0X3uuqeN9+tvS0jHUI/0Bv0mbJgKWlRYp7CRivmAr1O
Mfyx2XbYMtbwOODa8VWeeg8607XzGzyhCTb6qu/kOVDKbm+4Gq9OZgywD8Xk
BPxSvv5SKBp2LErYksnOKVmNX2mjqAMXjLaWXLrgl4JqLjbzKr6oCWUv1j6u
eIUirgb3OqYOrbro90exyNsqV/mKyUFpoc9g5Iu3pbUqZqBFFaFBYX/4zCq3
vDf/Np9lY5CdOhpV7HWZl0wMnb2seDv8FHE16BS14xJ9Mvxi3g5d8Cu7FA+U
LYJ8+ULthGVB/HuZa+z8OsrRxnwZT/NJB+XGfBSiO7+emZMapEWLUOaFzp3M
S9imfrXN5QwK0/feEee6InFXtcsbnSg1dZtGQmzhwMiw8+TKgvp1XWNedl8H
fK4tJfLGU5aakxa30Bj3msS9XQHUw9XSSXvQVet2irtkL7ZxebXTKvQD1hPq
bG+NHRV78Q5lXSV/O6yl097KGnAjn7DU5JQmJ7TYZr2/2v7Wx03LMtIb9FON
K9ffn7IlaVFi/lLypSR7sTrTkYdAXvKio96DN8LQxhOaXGKW03nT32fwejJj
gFhWInjpTMl0OHrFV+hL0lKQnUx0ScuWybVoZeF0GFQiLq072rwNl9YVql4s
9NVtBKEb9ZdghYG6xbi2WmotGoxMBS/7to3XrRg9xCRiyB78fNVo3QpehViS
zelr0UWTvuCVC00X21eM1q2awqRIf6j1ulhv4eCVsP+SA84FYjgo28vTHl2X
4DIwmxJ+B1W5dLRyQQotmvCTAXG7EZeBm2qbbF7qbzdP45JwJeN1S7xmMXkz
ZMfrbNoYvBCMhpoC5vi3OReBZzSJnd/Ap7yd31BszMjUfOx0xmhR21goGumz
JWywsisA90pgZHBTWcemLs8w3B2Trk1cv6G8jITCEe8556ayXlCkKEd9odC4
x1TTsckeABEZcPYLXWFjrledrCsf/jk+IoTkJdGixa1rbT7Y7ezvWFvWsdZk
43sDbhecZW21wzoOZjxRiqK3Pt/cUQlGHPQVQsuytvyiGpUWTfZ2WEt4O6Hg
WCn0XDPkhL25FatAJMDUuhJTjRqWsD8TVqdPCh4FPeCM/7Hn9BxCWpQgNBmr
e3CsbpmLrWLPcuf/i6fM4zC6/TpP+Q9xRXvBiZoZMmOAZlbINxoMn4ktv+tu
2DjlWD+qainKTrewou4C+UbhQLPM3Ye7/KFm/mecVEutRZXa2Lwg5pwUe+Nb
ZjJHL+/NjM3Q9RrrzRWS/JZ1LJ72zFL259vylnw1YVESJ/eLJv5k+uSf0nXu
PvhsHVMsIpcVtXNMSdlkZp5iOQ9coypKvsyEYkbFp/oUxmhRtQhUUnS6LxwN
uZ1SAcY8K5OF9mb8k8nL4YFuwafKXKwgL1cL0q7e5I7Gpst54/5WqfOV9gkw
v5Y6zctQOjPZsfI5+rwimbtS2CtsUZxU1VXyt8NbTnpEacpCT6NTljKjhRaR
kq2WRfvaf1dt3yBlvhfblutJZfrE9ogUF1pUvwR6gH6SrLUkh7QoQWiCpUFZ
4CgPePMcwHIQvKw9NtjxVZ56n0EyYICC5+1sJAyaTZqJXjDhDkb927yqxjHZ
uXjSFxR0o0a86EJf0/oJhznkd8lK/s5Ei8aXtnBXLhnv2nZxsCkSijWecbyo
59CKQN+2i0MOnPoXry2uN3knbys7RJemKFNTaNGEn0yfshnq/LMX664TFvsQ
9TZj0ZR/Xoa/cqG446tZPAULrck1LYpe06ijXb7xZGdYlHZqiaiaDa+J16KK
mE+2RdCBaWpRRn2+ubfQPmQ9NwUHewd6NE6q6ir524m7/hQfDpFTvGO5eV/7
bw+xyfr3Dt9+sHs9z4hXtVFt+XPDfdAS2sNRcCz0kDJMVIK0KEEkhxfA5ynz
uB597c+ydKKrNkA24xy2Tx66zttnvxINhh2PofI5xGbt++L8b3LZybLvw47F
qnjRsc/bQNddCZ2dHjJPnbFnUoseWs8COIMRf1NwYNulC1elRd0NhZem4L37
I77aiw42M65Li/JPzHGxaaHLvGh8CD2oFxsSvEFlvGjCT4bN0V/xl/jLQWmv
CaEvyDwmdRj3SlboYK7CtSguupS9s9xg2By9Sp7J0BBj3HnI5tavUosyP6qg
IdPUoiutLKQzHHKec1XafcM6tWjyt0Na9Nrnpl3HngNJWXnidVPrStWud2tv
Le96ma1cr3B7QktoL07NpzG/T1qUIBKDOU2+6jtYTdH/62J+0VHLkiyd7qoN
ENc4E2ecF4ziymXByJmN6PO8wOWQEqXsDHzhxwR82UY2d++61LVEcOUp9ORV
atHHLl4AwWYGwRbfOG0tyuRf5IuN4opvimtLqkWvc7Mpe/Hln+bqXfMNyrRo
0k9mweiZs7KMD/tUA38KYH5RIcJWRuX8m6MHoVj/KJbhBa2446v4M4OwDt2l
/8YqWqQhdzOiRUsGnfAvHzmtnbukEU3a2xLMkF+0xhOQ5tbT0qIVI8PRiPNU
z3KhsUzTpvaLJn47pEXnBtus95d3vQLacm/bqj833CefcJeXDIXtsBfaiKvS
p05WUkFalCASI1RqwpR5VsEedKmqpmgGuWoDFLKQxLl4Lkej8kQeBarpeK7o
fHCIsJGlF4kpOeqldbmyks37K+IwMVqAuQQTadFCtpKFJMMW4nLAM9ai2Hks
RNNlXoM5wbq0KL4LrPZfvniUpxfFmrE3eMEsBtku4F5TrkWTfTJ1JRHmXPUc
WjpqWSSbkWfxosxrnaX75xrCve+7Y/WP8BXNskL9I2K9Nb1kqKZT4UgkrqaT
bbPtJLqVdMSLzlSL8lpSU5Vl7E+VSjQ5HWFZV2UgPqWoTi4RAyYp/70Y5bSk
RfHthH1bCrSuSk+8KGnROcBWy6Ji2/KK7ldBZ1adeGNf+293tDy9vfnJyhOv
lzQ/Cb/DFtgOe6ENtJzZKqKkRQkiMUyLVvyI1bf/TrZPd/UGOMY8cpfdmN+N
K/BizniQVTryh4feHlOlbMeFhvrYOrzSxtGBsywHar2/btWFM22XlUvrYvFS
9A2uGG1eM465OUwB4gq/q8a7zNMhzJpPrEXXy5LN4TpZcSSFFj17sW5h3Btk
SUlfbFT4FQ8tZPIPvazwruHUl0KshIxuLXrFfxDT4YUOF0sJX+wNBsODG8eb
N170+a9Mua6IWjTZJ4OaHI6CXbIr5H2KiyCHsHoAu1TfwfmSR6/BDRn2iMpJ
PwAgM1o0Vuveccqxqaxjg3UQa91Hp601uDdVHn16WjQanmixn9xQ1mtyToVQ
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
qNT4e3WllQXGhEPOc65Ku284mRaVOyp1a1F940KqOfok1xn3aRR1mzBAKBIY
D7ScGmSTOKRFswkYGo8XBQ50vQwPieoGtbcc6PoDb5Ar8aJKitoKB6bECbUk
cxayXV0BLQOdKGXjaba0qD5rSsOoYx1qvOtUWrQmj4fkYeI/m0JVX2qCzyf+
XSTUogmeNAuSmvm1pUXBHKp63pA0ISjS0vYX+Lw835JWWScYK3kwTOWJ1z9u
WpakZVH9EjZBv4HXYdt+9HF+oLg+xdpE2UyzM0ef0Hx0D3DJtGji4TUtuy5I
Q4uyOfqIs79nOQz3dR70oJ7SKNSWao6+Jq/CiWG04elht8diH3Ek06I49YPX
NznROTBUem7qWrKLXGNv26rtQsUJwS7+3HBfRdere47/OpF3RTNZHhrvOf4r
sDiZfxs7hM7NonZNzuzkLuGNLfOL8jBI9ZOjfK5BQO7Dz2M1YcQXViaU3rL6
Xq2AlhHnKWl2Uv7NHz82qQM40/CLtqf4NDRsvM4TkGoYJrtO1WjFvqkmfYVi
EJ3mYyaRGd6rvZ2XDOWTfZIb50+y5zv4vaxjjbTXxMLePj36eKIsJz1kXIsi
wu2dll+009ahtNDW5axldv2iya0pLaOOma3Gu06pRdmE5nTfyIQwXRLnF9X+
fOLfRQq/6Om4t5nUzK8tLQqSDz4ZrgBhMOJOlU9sj1SdeINL07SKf/JiUNzW
QGrKdimE5V8afsbCRNfAcAmilIfWwKmlUsBw9kTPjAZrUd0DXEq/qObwmpZd
F6ShRW8sYiYmTX+6B9dpTZdrDFisWpow4hfhlXvPOcTyOwqLVl0ehsSHJyxS
PPy1ZRc5BZjGga6X5eUK/2L9OdjXNuv9smYKEytpeWqvWlvGGvylAQ+Hn9IW
MHOwvpS1LwqyUNOJhV+G3E5F6FdMi7J4Ellkl4zk8aIdlePsgau4Nb5cm9qU
+OmkNsV4SYmGrTwrplQM93do7k1okiz8Rv0244ir6cTSKKR49WTXyZT5uZNi
VyxxIzb5Ur9ZHmlDZJD3Dt8OT4X7O9cUyOqLihPxb5V2/B6GRfh5SLaR1RdF
mQqDYEX3q9DDzE6dAQNsLbafVpZTw0k6/oXPIieVUWEC6nhRWWyYguSDKXPs
+LZodhvXOG1rSseo5WbLLEX+dGyLn7XnyErH8HjOSF97vealan8+wth6WtqV
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
Zo/Kmmk3sTn611SBamCA0BsPttFf1okM8FqHTF4OL7XEq0+Ud72iXLNMyM/V
PPDD+p9Wnni9WhCWL4p5ENpj4gdH7oLHQ94tWCKo0H1svQn56bBqd6pHQrK+
TMPW/Yx02q6FylTzlncst4BtfsqW6YTHNz5bwevbm9tWlzTn6+kEmvHkX34g
dPIJq8sN3ULnSUJx5GRFi7YWnxNWe/eeO70yeeOitsJTAW9YXCTX58qxomod
xc6xyjp9jeuG+pynYzFORY7OYCTgHqSBKdeBh8Hdrc+XdvweBs2yjjVSsdA/
HbkbRsyUh0ObPx25RypJCj3w9WJMrc9Dz/ovIxMGGLfu81ga5f5UN7B+TLFV
1DvbW5M3zjM7sCAhX8M6PO0ccKwuSv+M2aPsdMvI0GZ9jTf3j7W0d8S2kMmL
4JBU0vwUjx/jkrLYtpwXQBOTcOMz/oT0W167Hsvgs+JpSQpu/7nhvmpcJPSV
bY0PQOeyOcGbSjtegB6qet7k5fRTThdmTovm1Yw4g+z2Dk5YalIMZ8urBzvH
heXjwXz6YsvH5wZpfCeox8p1/ROhcKjFmlMDOqFkR0u+lIcLz3HCevRMUoLJ
gGXtOvas3P2iWo8edkEDaMbtix/I1qNfwRuAoIVT6LmSLGjRdaemotFQp61n
g83njU63JBFyRb1YeT4K45FzE67a4GzxRaJBj86BYFZw9IWjji5djdfCG590
bTD+mok0KW1/gefRf1h/785jz+zvfIlXV8O5v54Ne47/Cp77io8++temhz9u
evDjxqXwE36HLbB99/FfwkhX0b1OWKqp8yXo4UM2ib+9+cnSdl3FujkZ06IT
lWBNbPWWznGUiN6BXj1ydKY3MFt7ZdJXWN1TeC6U3H7zalxeNkZbu3rxCrs8
znA04Ow3/h6QsI2FogGTrsYd8Ma9A7TETAI+qLuLzzjAE5lUvPfd2ttgLPuo
8QEwLvYQd7fqKBjd4DlOtcwZPN99evQx0K4gVv/a9BAYHSjbT2yPYOmnjt9r
+lfBPKXD9ZhhprRoEQ4ZId/QprJeCwxnvsEkA/HKrgCYa2jSV4nLLfVs6R8L
RKNOe5vx/zuRdL4T0hgriVzhgKz6BFiWKoobLGvP8V+Xd70MFldUf+9WyyIQ
rrtbn4ftYH2wEVQoNFAt9Amd8IVEC9jcIktCTJ1ImAUtanJLq+j2tgST3Jxs
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
2TWdbBOtPASrR5q1pKZT5fGiWbLKHXPeJMV0vKieDOFFzQYRsmPo/V8CHzmG
38/yoimPeuzLHu5Fq6pflMiT3ppZ2gbrO/y1GZ/Su7eiWtZUa4txL+q0DFEb
HAvP5DhDvRDM7WVqmo/WV84erqmaIKn7BXW8qJ5a6cAG3rWbrwHqCSbqnZd3
KasulEz9T/4juWu/vfkXnRw98ZDXgp+c6nmMb0l2ci34MX+6PXl/ceBN7m+J
+bzoSz9RtGP4/3iXqd1/mBydeFfNKU4KZvSiw13pqYW0WDe7bTTiRfnNjjK7
cNIhbUT5EG71oT0RssPlsNTUMdo8tsSfUJNxEpJwZstufIFa9x335+nk5TCd
qecN3+OlMJQ5iawvSJqg05OPd/BRprF7wXHWwjVWBgpetNLoeFHZK979lKwl
cC/K35OF+h5S87NZPrbkOU1lC7DWsxRlvSuBqRCdcOqZ9dETNXV26c+jz6cd
teIMa8fCenticyGNKQNyrXs2YZ/vh04QXqBjXViuIbm+4vCMk+Xz8cyah7we
lFcef54lK7KERcyENB1qIteNxS06az6/F9WTIfvK81PDtcJPY8ChXnRY24vy
5VeG3q/KflGWUKOCypleod/Pn9Kyjz8wgoSkxYVmIzPvVF70gZYJz/pW6mmk
6sPphuBeepFZngs1dowfd/ZrfGWtaeySxL4j2dtc1OPRniKk40V1gybr+VmP
tJLg2zt+KKcBbFxQYp41gPyhQpsxj9Ndmg2oYogPvBr4iNvRoqa3c4jJJM6T
va85563luf7T7qfUmX3uOfl7sopIsoXl69sHjzqGPihYm9SMXtRpaZ8JpCqV
hSYmatXFdQtNerJ0SoFV/fqi3uNTqdqktCwbFbUyUq6R9h1pDJzLeQZopKtX
XULcXTcUkYukrUe7er32jFptI6zKE/2gNDb4gG2CV35LJrfmpZk6p/riACqE
vhelXnGsMdeLkoX6HjLrs91ZPlbtUYvP+1dCgBl1btmJ6lAXd1IVM9SoL6qp
nQzFGdWOxUsv9fmmKcnPAJXzklvzc1JqLq3zcFpHK/ZOt02tozZW0TdduSJT
VnTJuKIsaXrycEbYzYnsejIcda3jDtEE0Hqhbstp9z4ipSu8X3Qox4sOVbMX
JarZyBlOucI6PPXHnGTUF6WBcio1QqwIL6om43B6IbjF3yxtyHVNpUmNr6xX
3jOxvBhOpf6LGS+qGzQPe5bm5fqlS80aDfA3T0WXs584XIoNqG6s7v3doyTA
Nf468m/NTL0ORFw/+Y/oPKfpZM/DRIM/Dx4lppfXuud1R7/ufYLo8TvPMwXn
1FfciwJgBvS9KB/nmfafal+q6yGzPpvtYzM9qggvaiI8kRgeNwZKhtcL/dH3
xoX+V0govDL03tU8/aJXM7woy9ELq+lUHHJd+vSSWpZx3m0uCJiEi743eNfo
5TvvFvtZYl+Jscy39oTzd63XH+edn6d6Hs11rQXr3sOLgl1JAS+q059ZqF/0
N5Z/1/axao8qpl/ULNgmfOvJefVzBgFQoeMV5SrcvF4o8ZY278Evex66ku7/
fPC0e9+Zmxn9pVn9omR5wRpQWYhQH+0JVEpnc+x0mMr81LDwfxDYhbBM/T+5
Hf3+1nPC26MGXhTsSox40dxxnoa8qKpfNMvHdhvO9WuyewTodSyyLLn4loCq
hejoQt/LrJ9T9qIkjF4Zeo94zgv9r1zM6C/9Z9qL+l6j27se0qwBpYMI9fFh
1dHFcKtzOD12Or5ia9v2Q4M9itW9nxjR7tHGrrv/OdXzqPD2KMCLgl1JYS+q
Nf89X40m9TbqeUm5PtbgHChNIECw6yHh75z3ALGRmqUOT11/9OxtupZEzBZW
QIaoWPGicv9nz0M2r2Z/qdIvypcfy60BpYMY9bkbgspj3/nY6dnG3TRlBpiQ
H32HiB1l0qhMZeyKAC8KdiVGxotqeNE8uXW159Ss15S1TxPVFwXANHxz48nO
kQaeIiS0sZm5J1w1fKrRNzf+pF57vu9l2jXa/wrLuSv9otn9nzrLc+fd6wD1
gT0C8aIkWvEaTQU52fPwT/4jl++8Uz52Wk4q74AZeFGwK8n1ogVz8Tq5e7X/
1PSZOj7WOBAg2N20D9ax/OAXrBgFNZzq2RBXho6RJb+xOhXy2htPfHvzzxf6
X4UXBaAinLlpKWqw6AnXg+e8L57z1paJjfy8fQBeFOw1sryoTl1QBZ2xoEZq
PZX/PFAIEOxuiGnkJpP/JOHp1HWesn/V6rbQXtPgJ/+TN6B2lATBr3r/0Ea8
aA+8KADlcrLn4a67n9m1yt0LB14U7EpyvWhuXdBcL5qxTbG1nuBFAdDl58F/
8J5P8vPSwFunrj92LfgvJSl/9vaBb278iTtVIj3ee3PavQ9eFICK0D54tHOk
oWB5JSHAi4JdSa4Xza4Lmu/ZnVrPYzJY6wleFAAdiLdMdXv+l9jOy3felVP2
SlK+9wnuVwl8nu8574HzfS8zL6o9Xx5eFAAjnPO++D+mO+Et0QReFOxKNLyo
gZpLGWNKc2raF671hPGiAOTnhLNGHhR69/OvbzxxNfBRd6pTNJWUP2BjEZPN
XTpIrOmlgTdtfVrz5eFFATAMkRKfD5hvg+9v/fXr3icFthBedPtomwnFk8nV
+w3CW7IH0fSiRT13Pvs5oYVy9KU9g16NaQTIHsaXSD2o2jSHgKB2AWdvH+BW
0+q2/HTn70o6nv/8zvMsMZM8j996/fFT1x87e/uF1Dx69IuKBxqsTmquBT9x
DH+Qb4OTPQ+TAHfa/ZTOTs7ctPBKa/p81fvHEp5337JNXtRvm+PPyU0sz80U
qHdtHWylz4pNyI/PjiykHlZrEoZt0kpXr7GNe+/fk2bq018tFNhMRBdnIVsB
5POiBmsuZeXrjcxd0qz1VBSVEqA9/SzpwJA//5ZSKM/TBhsm1mLxmM+zjUo0
dIiyBcUcr/JKRFdXXN5BjbKWRo4OyuTLnod+uP2C8tiXC30vn7n5tDJYlCXl
Pz11/dGrgY/4r8SpEr9K1PdV7x9O9jxCvGi19IsiqAFTcWngLRbLtGPTCefv
Lt95l2ygs4eve5/8efAosawtbGY90WP+Z9PX2P2HS7Cj2+BFG6Y2kslYwDva
6I0sJ7d8Oue8ddyzTtS6JU1LTR3D9U7JF0kkN5eOC//fpQndiydDQUMb15Mv
jgdwmwRtL1pMDr1gTdF825dMZQQ44lpNJtcjrd2jrXMxXTXl9aImoXxBMS+6
1kWuLR3DTd5wYJXag+XpcSN2FHKuJF/3/lE9TUlO09PRoUf5kFE+rf6H28/z
h8Iom5H/HTGxLLn/Hqtdfyyn1v0x3eU7XeseQQ2Yim9v/oXp6MO2/tcuDrx5
0ZfBpYG3iUwKPqG+fbBOsZenb+wjxlVnMj65eSR3lMUW0t8GL2pfTMbCIfZ+
3Lepc867m+e2iGv1ONX3jP46c91C0nhtULY08EG2JkG/X7RYyveZRqiMAMkZ
m7jnZe+dS9Fk1K63pam9aPmCYl5U/RfwHpfIkq2AgS5fyLmSKNOUlIJOxJoS
LyqbT1azovX647a+g+SmLz2ClJnS830vtbB6UPyZnid7HlaeAUrekyXkI5rL
BTwDFEENmInW67/noiuIzlBS4i2vBT9Rz77vuvvZOe+LOsd1DH9Q7PPut8GL
2haTycUZ8qbWE4km1xz5Hq1rpYqIzU3m76Nw13kXJPn5aInlsNRgVVaNkntP
aczfEFxZjtPVsdWlZrvT0ind49nJzTWPp1+98fzUeDPNm7CN6dpU7jIYpZeO
7ow9Jxel1CrViy20tE90zW1E4/Ij26Qp3sfCPpV+8R2qdsWwtIc8kS2eNYyt
r9g70xcoauDnJmu7Z+8Zyq6CQmjPoy9vbtF2UxkBztBAM0TeeGlYjMweyrtl
fi+qFkX3wjJRsX2wdXqN6yEaCTelleis7b0fWk9kKIXbPx1lZa21jtjDMVkX
RJs0jV6KoBzd3qwvkuNFybFm7sXpTizyHozL2dsYXFC+aWw9YrOLPmGqBSLD
zuAncol7FhlJ4DvZ8wgxoleDHyvR8PKdd87cfJostw+8LRe9Z7QPHSM7IRuf
vX3gh1vPk72ddu+zui3kJ3lPluRbfs57gHxKp7y2moqor5ygJgtN0UJiXpo8
TB8SKse4aGShuU298YbLOelalDema5UTssigVtsteeT9qEOPEQ0WjtFsgyQP
yi6nqTz5HsDq3v/z4FFyJ1jooUjv6kxcOnv7BfVYU3ILSW4Sictlv2qLy+4/
cnHgzaKaug1e9NDYWjK+4pqIxpKJUDC/ofKuxJQOHC0OB6M0kIRnmzqGm4JL
80SP6wupIEjP81g8QSKC3UnWrixTO7q2HN/wBcfrnbMhcvKn0yKypohfJRvX
O6UA/XXD1cnW6sjW5q/3EjudlCZojq/eTiJdv30xEVuNdHlG6zvGHYvkFpgP
QnAfah/uipCDRlppQnDwkNWZLVu7REd9b644WBt8NF2Yvn0mXjQZT0RpIB6t
7w6xFua38aAg2vVFy5tbtN1URoD9jkgyFg53LSaS8ahdzy8Z96IJojVZiRNr
VJXShLxlZ3iebBoJN3cTGUaIDKNzofoOf21LEV70uES7ku4R5XaM26W15UXp
cBGCirq84/Xdk12LsdBY9lhQDS/a4qZa21xqYn+rIuRM/w5bIZZ4bfQu0MuR
ns8HKk72PKzugSGB79T1R6+pXKgaEvXI9krRe25KDfZtlkNF1FdOUEsJbXmO
nGPjxJFSOxqJ8bDVNBaNqnVHN+Z+VWK7otJLroblYZzFBTW6Nrq4QINjd8hD
AxMPPYU1aChGyyHvvhRPmmysAjDG+b6X+P0g5+ztv3WONHzV+0ciZKLiUz2P
En7yHyF3f2wD6k4v+t7gSf9vbjypPyVKYRu8qKWDhqdkfM2V7qZwN3hnHZ7h
jC2z9ZIJ676ILUrK1d7iYQoa472dTBGrC6m7MBZfiL1MpUIsGTvnG99Pz6Ky
z0qKrvUjJpN8RjqD3Hen39NoHpXG+a+0DRnpDPWu3LYw8waKvbROBjbT4Yx5
UZVzKHRNAwXQfu5SeXOLtpsKZQnpEC/mDxttqYXWkdax2eaOrC2Ne9HksqSM
sRym41FXw3w6g2z2Up0hDVOxZDzSnLsTSl4vSk/+VEelmsKCov1Ien8NLS/q
bKLWN7WwCDm7LdacPVv1jg5kiAxJOLvQ/8qFvlfIz696f28fOJyqLJp2oTxT
z4re/83q3t/W/yr9CHse/QljfZvlUBH1lRPUmNDmp0fkE5KdjURodeoYp5yQ
fOOJdFfP4bG1pDI7o8igZrGquivltapOknwaNBKj15eUHAq7Lm24OkSfjaBY
bN7aK0PvKb9eHHjz17uffn/ruTM3/0zUyixozZWh94lg2QZUqpcG3vrJ/3f6
2b6DqeUFqLQXtTjpmRxdjcXUY2bYSZs6RVPoy5aaMZ5qVJgMxBVBZWfrsoNO
rhdVbSwv4T6wWC/KqLWPNg/NuqS15XST9ENniGUGZ9Q7aZ5LKG3O/mye4wKj
6DyP3rRUQIDuJiqErfn1hKqDwmkZImrK7WYvwouqT0X1ucp1Z0utouEmvtKa
uxNKXi/KelcSy3P3mzsykuwGBKXhYNVoelG17jjG5Myw9tc5Q46JhcDqlt7l
C+hzLfivVMq+UQ3Py+tPo9gmdsCL6ge1bKFlh61cL5oRINgSOciWEtTch9rH
W8fue+Y2oqrLgp4Gi4zRBf44YHuoOdnzcOv1x8vZCfGcVwMfKb/+EqhvHzza
wsaRsuJstNATcZ4XVF7058Gj/Ffy81vPM8S48jn4OlTWi1pD/EbpcEu/jaYI
1xxsSORhlrW3ZfUhaJzJKjTOW36fxdMQZXpR1T1msbeQfEhqfGt+cck1Fg4Z
9aIacZ+1OcaHCsCLVphcL2p+yhaghXWn04ExrAxgLDLLEgd+lrWfybFtFfCi
PEe/PBeqszprO2bpQZUDGR8v2uKu673P3F3GsM9iBZVLoRx9UXL2N7MRs7H1
tcD0fcfcBgJrUZAIVXPCVcODo/40iq67/2HKrVGx7S2sWI6+1KBWphe1qhRR
ZFA77GFDOuMxaW6haywyb9CLFhmj4UUFQLTmGPqg4M0dcZvn+17KV6bphOvB
a8GP+dovXQ/9dvdzPqeefKRzpIHL8/Kddy6k+z9rrgb++XXvE3z5pYG3UoNL
9aisF/VEYsktn5O9tw7aqR3dcHnpsK75qZHsjdtoolwrRDI0ktR0Vn6F+kXl
XVmyt8zZOEu2zGzzyJu7ccFunFR5ARl1rhBetMLsSS9Ke/wUl9VOdRdbDbfS
XsfU6OgMKuFFW7yt4fTEJT6FUGMnFB0vKmNpG++KKMPVik405KLhReXLDlNi
MXKmperU444QWEsmnbLPw84k5bOoiBctJ6iV6UVp0YxUbr2ooEZvJxPS1Git
vHHGZaFQv2gRMRqSEUP7YF1b/2s6G5zzvki2sbr3Xwv+K58dJZIklrIl9fwm
sjExpVcDHxETyzcgdlfJxZ+9/QKv+HSq59H2waNk59/cKPxEp8p6UXWaoCVl
R5P5Riy7WRTLKn/hPe6dpAM7jYxFKdWL8l3NT7Dxq1mC4hMilI3Z2Nf0N2Lz
F2SzTRs5oZKek34dZbBc9nENjBeFF60gJN796NtrXpSX01Ry8dyOJtVTHjKo
hBclt5805UGnObB5EKqd6CtLdQit4Wr0vSFBFTde1M+uSKlhdcXIOWtQay0d
nofAuouo0Gjt0oNaWV6U15La6OpgvxYV1KgSVSOfbdROK5cFPQ0WGaPhRcXQ
OdLwzY0/EQ9JvCKry1STlXG4FvyEF2jqGP7woi/v5PeLvjdO39hH9uAY/oA4
zPP0WRXy9fBUz2NkCTGrJ1wPkvfkDc/If9375HeeZ9nYbz0zzKnweFFWZzu5
dW9isrFjtHlsiU6di7OiK5trvqGR7LvFVFng0FSIzk71zNKywMktD4sOBefo
FedFya2fNMtm+2buit3JJtdXHJ5x0uD5eGw5Y88sPNHK4cNNveOHOu6nZw17
w/d4LYvUxrSAADnKBJ3Ve7wjp5EF59HDi1YQ5kVfJ4rgD04Si8E2ly9AljEn
5xidGN496ZDonPcYO0ujkSVbZ1ZBFTZVh057H07D/aRxL0qjHp8CL++hri11
FH1lKYew0YgWDYdb6TTeSZeqX7SAoOQvG0192Y0oHR2U8QcpUOu+GDmzUabs
m7I/LCsDhcBaOjWF2OkmVWjqbulBrXgvmoyv+cZIqB23Sxsx9YldVFCj2czk
clhq4iF7k2tE9qL6GiwqRsOLCoBY0GvBj8/cfJo+A6LvILGFP/mPXBp42+4/
zMsuEev4293PeS3Qy3feVc+Xz4VszN+c7HlELVJiUClsOgaLuaXMy6j4PHrb
qCOcrlRG9FhnpWUAXYsxEvU0tpcfl8Y/kIiuRlRVN911Q0vz+WuXFedFIwup
hmWWYiOCGorIdUdZzU9WHzW958MeJjHWu9tMm6RsHO3q9drVG1tHWFkY5nvH
BrXKIc74VvPWF4UXrSS8X5TYUfKzrV8MvAEXyN3ozlXbTpeoZacoe+Slu84b
Dq1vBbLLMrCJulmv3JFgBXL0o+z2M+MVDcueUE9ZqkOQNgfSuqCykrcpKKhO
SfXBfPVFlRe9vHT1qus+FSNn24Qrwn/dmpdm6ugkTQTWXUSlvGhLqUGteC8q
TSv1qLek6Un1jVgxQc17fCpVOnh1ydZOvXQ6XVJAg0XEaHhRAfxw6/lf7356
LfhJykbS0doKX7oeInSPfmHQi24r21DTyXzkjhcFewDh3aE73y+641CzF5lV
BUEvq9yCiAOqjepSHzorgBEuDbx9+c47V4be41lyq3u/nfaLvsW7Ri8OvEm8
KHGqNm9tC83R/59Ojn67gRcFwCRUnwBZlexUQU4Oq3OIKoKg2qgu9cGLAiMQ
n/md51leCPTs7b+dcD2o7hdlqXZePvT90+6nlMnyQoAXBcAkVJ8A+UwNeWhc
eoRqeAYPJAJVRnWpD14UGOHs7Rf4NKJz3lqdp3x+63nmfN9LvAqTKOBFATAJ
1ShA64hdeZ47nSe1ERhTisMAUD1Ul/rgRcEuY094UQCqAQgQAFFAfQAIBF4U
AJMAAQIgCqgPAIHAiwJgEiBAAEQB9QEgEHhRAEwCBAiAKKA+AAQCLwqASYAA
ARAF1AeAQOBFATAJECAAooD6ABAIvCgAJgECBEAUUB8AAoEXBcAkQIAAiALq
A0Ag8KIAmAQIEABRQH0ACAReFACTAAECIAqoDwCBwIsCYBIgQABEAfUBIBB4
UQBMAgQIgCigPgAEAi8KgEmAAAEQBdQHgEDgRQEwCRAgAKKA+gAQCLwoACYB
AgRAFFAfAAKBFwXAJECAAIgC6gNAIPCiAJgECBAAUUB9AAgEXhQAkwABAiAK
qA8AgcCLAmASIEAARAH1ASAQeFEATAIECIAooD4ABAIvCoBJgAABEAXUB4BA
4EUBMAkQIACigPoAEAi3oP8Pv1K5WQ==
     "], {{0, 563}, {900, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{900, 563},
   PlotRange->{{0, 900}, {0, 563}}]], "Input",ExpressionUUID->
  "56ff45fc-4f85-4f44-a669-2151145ab645"],
 "\n    "
}], "Subchapter",
 CellChangeTimes->{
  3.721550335521845*^9, {3.7215505034952574`*^9, 3.721550559095681*^9}, {
   3.7215506127789516`*^9, 3.721550639633833*^9}, {3.7215515262853813`*^9, 
   3.7215515511890955`*^9}, {3.721551688294024*^9, 3.721551724931155*^9}, 
   3.721551805698022*^9, {3.7215518518321996`*^9, 3.721551866558627*^9}, 
   3.721551946247611*^9, {3.7215520026363926`*^9, 3.7215520449873*^9}, {
   3.7215524526242127`*^9, 3.721552491720085*^9}, {3.7215533333756905`*^9, 
   3.721553346635456*^9}, {3.7215535374818883`*^9, 3.7215535432751665`*^9}, {
   3.7215537748105774`*^9, 3.7215537870576477`*^9}, 3.722144751074666*^9, {
   3.7246718984962673`*^9, 3.7246719178003397`*^9}, {3.7247412471020403`*^9, 
   3.7247413072777977`*^9}},ExpressionUUID->"74867c12-3854-4938-b25f-\
b3e99e40e5c3"],

Cell[CellGroupData[{

Cell["\<\
3. Kernel (text-based interface which allows users to evaluate Wolfram \
Language commands) and Mathematica Notebook (graphical interface which allows \
users to evaluate Wolfram Language commands):\[LineSeparator]\
\>", "Subchapter",
 CellChangeTimes->{{3.7215538029951477`*^9, 3.721553852474468*^9}, 
   3.722144746690363*^9, {3.724670250579933*^9, 3.724670251219768*^9}, {
   3.727083345563752*^9, 3.7270833812199173`*^9}, {3.7270834534042463`*^9, 
   3.72708348204434*^9}, 
   3.75004973886173*^9},ExpressionUUID->"612563a9-e924-4d93-a6a2-\
d6357b5f5dd2"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["       i. Mathematica Kernels: How to start a Kernel:",
 FontColor->RGBColor[0.5, 0, 0.5]]], "Section",
 CellChangeTimes->{{3.724670830663599*^9, 3.724670848047435*^9}, {
  3.72467130916395*^9, 3.724671317252297*^9}, {3.724671365451911*^9, 
  3.7246713659877357`*^9}, {3.724671941263629*^9, 3.7246719443438187`*^9}, {
  3.7270834900765*^9, 
  3.727083492412816*^9}},ExpressionUUID->"3463b99d-daea-4e19-8628-\
80b40bdc1226"],

Cell[TextData[{
 "    For Windows: C:\\Program Files\\Wolfram Research\\Mathematica\\version \
of the Mathematica, go for Mathematica  \n    Kernel or Start - All Programs \
- Wolfram Mathematica - Wolfram Mathematica xx Kernel (xx refers to the \
version \n    number).\n  ",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3QuwXGWBJ/De2dqqXWur1i2trVpry1V3RbdGqsbwKOtWzVaNOmvhjMw6
liKyyENpV5mBFUU2Io9xZ0ER5TIL8jKi+OAVWHXgIhBIkCjvRxIIhEtISEJC
3slNAsiqd79+f+f0eXT37bz6/n71N54+fc53Tp97Q/9zTj/efvLpf139o0ql
8qV/Hv7465PO+rMzzjhp7sfeGG58/LQvff5zp53y2aNO+/IpnzvljPed/E/D
zLf8k0rlc2GiNn344Ydfcskl69atu/K2J0VEREREUlm649Ubl69+//vfHxrj
VbctERERERHJzH3b9tx5551X3b5ERERERKQga9euvXpiqYiIiIhIQV599dVr
7lgmIiIiIlKQ6enpeb98SkRERESkIKE0fv/Op0REREREChJK47V3LRcRERER
KUgojT+8+5nMrPzXlXbWHPbOzWeeOnXdNbtvuzUkTISbYWa8TN44IiIiIgdI
Lr1p8d+cf9Xxp39juAljhpH32SZ+8NMFx//pRz7w5ncMN2HMMHLeoSstjS+8
5Q1bzj5j1/zrN5564poj373qbW8MCRPhZpgZ7goLKI0iIiJyUOSUr4zfef+T
q16eGm7CmGHkfbaJvzrkiLuuvmb3skeHmzBmGDnv0IXSeN2CZzPTaIw7LvvW
tm/+3ap//6+aHfLf/ouQxnSYGe4KCzR6Y944IiIiIgdITvgf3wwF7P6nNgw3
Ycww8j7bxAfe/I5dSx7eeOP3hpswZhg579CF0vjje1dkJvTALWefEWrhyjf9
USiKq//Dm2pzzvny1nPPDBPhZq09vumPwgJhsTAnbxwRERGRAyQnfvGiFzZM
3bdsw3ATxgwj77NNhGo39fiDG3561cvX1/PTZhpzNjQmWtMvJ3J1c62fXt1Z
sTURxgwj5x26UBp/svC5zKw57J275l/fOMe46t/9yz+8+sr2S7+59etzQ7b/
w0XhZpjZON8YFgsLJ1f/3vsrlcpffi815ndOfW+l8t7jf5y9xeTqvSw2s/z4
7HcOtpVvHJN+FN1zMh7I3cf/ccYxGTT75BCJiIiMVk5qNrr1w00YM4zcyyYu
GP/hxz5RzUu4t5dNhGq345HF66+7vJMf1VOfvuKrX2sPGKYz53TnpesuD2OG
kfMOXSiN1y96PjObzzx146knNq9K/5t/tuuW6/csuOOVRQteWXR3mAg3w8zG
vWGxsHBy9XkfqMw55I/nfPonqZlBamZildZd8fRwM8OR7/l0rfh9Mhqke072
5s76y8ohf3PPAfNAREREZmNOOuNbKzdMLVy2YbgJY4aRe9lEqG2/yxfu7WUT
odptf/C+dd8fXzevlrWtiUbCINMtYfq7Z81NzVkbVomWr41THyGMGUbOO3Rh
3RvuW5mZqeuuWXPku0MnnPrJtdsuPHfntVdu+8Z5m7/8hZAwUbt5wTnhrtp7
q498d1g4ufq8D1bmfPAjcw7523s7My86tvKRY8P8E36aucV50V3z8hebYYYy
cvcgecM251/6t3MqH5l34D0QERGR2ZWTv3RxaF/3Ltsw3Dy/YVcYuZdNlJbG
vBXDmO1NhGq3dfE9a6781otX1XPlxa2J2p+Xn3lWGOf3LanpcO+a+sKNP+u5
uDEdxgwj5x26UBpvvH9lZnbfduuqt72x/nk7/3HHdy8JtXDPHb8IXTEkTISb
YWa4q3aF+m1vDAsnV69XmhvCn8fObc6594T3NOaEP2tz5h5daTp6Xn351M05
J3zrnEPqMw457d7msDc051SawyYW++C3Vl562pxKcpXyrdzQ3r3mPWGcrhVX
Zj264jnR/NOOrbznnEvj+VkP5INHz6nfbK3Sy2PP2KKIiIjkpt7odt277OXh
plEa25t4vnam8eXMtEtj6sJ0dKYxe8V4E43SuOryC1dddmH4c/XltT/bE6sv
u/CyL58Zhno9KcwJ85uLXdZZa1VrrUZpzDt0oTTevHhVZuLSuPsX8/csuOOF
t7xh5zWXhYSJcDPMjEtjcvVr/7wy58QbVn316MqfX1yfc8O5h7zn3P/Tmt+9
5M2Ju8J0pVJbftXNF4f6dOxXFycXuPjYQ05b1LVYpT4zXqV0K43pRSe+p7Vu
Ot07nDkzc7HWA6m0DkL3wtEDae1AfZWjr00+kMxVMrcoIiIiufnMl7/94NPr
rvz5o5n50t9dXvCCw3Bv3ophzDByL5sI42ysCxPFMws2Eardiqu/88sPvKcg
X//IX7SHbYwc5hSvEsYMI+cdulAa5/96dWbal6d33XDd6yuW7/75za+/8PyW
uaeHhIndP7vpt88+He5qX55Orl6rNCfduHr+jee+K5S6X68+O7THb0fzwzLf
/lTrXF5jTnRX5nQYqhI5+tryVXrcSm3kT52dOgLpFbMeXdGcaP63w/jRvQM8
kJJVREREpKeE3vXQ8nVX/+KxzMSv/esW7s1bMYwZRk5s4h8fy0wYZE1dqpG2
Z+at+NDyl9qbaJTGu4867K4PH3b3h5t/1nP43UcdHib+10ePbo/ZFuaE+bUF
wor11JavrXJYI43SmHfowhG49YEXM5N6I8z2i/9+/dF/tufO2/bcdXuYCDdT
b4RJrv6D/1I57OSbwsR9Jx962MnfOe9dh553eTz/pvNCT/vaA60FbopXyZnu
rNK9ldJVCrfSPXLGinnbzZuTnP+dUEFbm5jRAyndooiIiOTms2d+++FnXvre
7U9kJtSq5/OFe/NWDGOGkeNNzLv9icyUbiJvxYefWd/eRKh2z827dOHH/nNX
/jT8+b8//rF4K6npcG/WirWEMcPIeYculMafPbgmM6mP3Hnl/oXbL7kwNMY9
d0+EiXAz9ZE7ydV/GCrNZ+bXpy85rlKpvOuLv0rMDzMPPf+KMGf++e9qLhmt
kj0dJtrjFCw2wFZ+9ZlDkyNnrJjz6HLnpOdf8cXDmmMO8EBKVhEREZGecspX
vvP485t+fO+zmQmd6pl84d68FcOYYeR9tolQ7Vb+6MrFn/7w/Z/+i5DFJ3w4
TLcTbyJMX/ipY1NzFrdXOaGecLO+YhgzjJx36EJp/PlD6zKT+eHe2y44JyTz
w72Tq//oQ5XDPntLY3rxZw897rz0/DCzfqX10OM+dGhzyfM+Wp/z0R8lV4+m
bzn/3e1LtAWLDbiVpg+NZ6/YeizRZeJDz78yY07ecahvurFA3w+keBURERHp
KdWvXLJ09bb5v16Vma9d9P2C1zSGe/NWDGOGkffZJkK1W33zDx76wjEPfeGT
rRzTunnMRSec0B4wTIeZXXOOiVY55qHPN8cJY4aR8w5dKI2/eOSlzPT7NYJ5
44iIiIgcIPnc/xxfvnbn0IcNY4aR99kmQrVbd9vNj5/52SHllMZEGDOMnLcD
oTT+46PrM9NsiW95w5azz9g1//qNp5645sh3r3rbG0PCRLgZZoa7Go0xJG8c
ERERkQMk/33upc+u33XHkxuHmzBmGHmfbSJUu5fvuX3peacvPff0Zeedvuzc
2kQz551Wm1+767RlzenTajm3NX1uM+212hNhzDBy3qELpfG2x9ZnplEFG1lz
2Ds3n3nq1HXX7L7t1pAwEW6GmfEyeeOIiIiIHCD54tevuffhZ1ds2D3chDHD
yPtsE//1P71vwdXXbPnNouEmjBlGzjt0oTTe/vgGERERkdmQH9217Itfv/rz
X/2H4SaMGUbeZ5u45trb/+qQIz7w5ncMN2HMMHLeoQul8Y4nXhYRERERKUgo
jb98cqOIiIiISEFCabxzySYRERERkYJklsY//GFaRERERGZteiyNv//DH373
exERERGZjQlVsMfS+Pr/+/0rr/1ORERERGZhQhXssTS+9vrvpva8LiIiIiKz
MKEK9lgaX33td9unfisiIiIiszChCvZYGnftef3lLa905WfHVzoO//tlLz98
0eGV93394cZdjYmZJDH+8Td031vfRGejIiIiIjL8hCrYY2mc2v36S5v2dOX/
/rfK+85/qHt+8V29p3iQ7nuHslERERERSSRUwR5L48Ytrzw1ubUrN368csRZ
C7rnF9/Ve4oH6b53KBsVERERkURCFeynNG7ryk31kpY5J7prwQV/0rzCfMIV
GYMUpHv8zmh/cvYFyW2FP1s+eVM/WxERERGRovReGjdtfXX5yu1duekT0WsO
PzGvMeeIufdmTmxfPu/E957zeNY4eYnHP/Gq1pz6hrb/8pwjKgXbEhEREZEh
JVTBXkvjtlefeWFHV27+ROXIuQsz57QmFl743qhYVo69OWucvHSNH0abc+Gd
edvK2B8RERERmWlCFeyxNG7e9uqKVTu6cvMxlSO/uihzTmtiUSiNJ16TsW4v
6Rp/Ua003pW3rYz9EREREZGZZnPPpXHL9teeW72zK/NDSTv7vsw58UTlvec+
kbV6aTLHrxxzbW367nOPrGRsK7W8iIiIiMw0oQr2WBq37vjt82t2deXWT1aO
/NqvMudEd/3qm3Pal6ePuzVrnLyEQTrmnL+kNvOHJ7VufrN7W/OOG2ArIiIi
IlKUUAV7LI3bdv72hbW7RERERGQWJlTB3kvjqnW7RURERGQWpvfSuH3q9dUv
7RERERGRWZhQBXssjTumXn9x/SsiIiIiMguzo+fSOLHgURERERGZten1TCMA
ALNYj6VxGgCAUfHaa6+tXbt2w4YNW7du3R4J5bDxZ9vOnTunpqY2bUqXQ6UR
AGDkKY0AAJQaVmm8a8mmOEojAMAoGaw0piridFZprNa+nG9sfLK1pYnmjH73
cHJ8LKxXnRjqw+5H2PHoYQx/8ORhKpmfp3GUKj0fqX7Hb6/Sz0YG2pGu35O9
evwHMLPj0F67/pjat6KBBnq89YH6/8s1c+NjXTvbOUCpw1O/o+yQNR9J/gHo
4/hM1vaupyUB6MHQSuPSTXFqZxqTbW+iOjY2Vv4cO561zGTm3KHa+1vIUDtC
YbPh0CSfBPPm56o/j7YnSx9J3+NP783n34F+T/abnOPQx+9P12HP6F2DqI07
81H63Wbqt63+w8w+FLVfuvGejtMAByRv3F7+OgDQowFLY7IiTueVxupE8z/m
8fR04mRN5+mhc7IsfZ6itvZ41qm0eJXGM2ZjTqgdjSWbGxp8u+mFWzojjY13
nuMyxy+VV956LnWJBXtv2H2MnzxAUTmJjl1nq42ZYfDWASzcofzfk36Pf8F2
M/czMT901bLHlX0c8n9/Ch5vYxON/S5+vM1OXc06fRdtuva7Xrj/qUPSfCyt
VfKOQ7HGPz4SDy1n3ebpwd5+OWujTLT3KONvauL3ofj4O9kIMDx5pXHXrl17
9uwJf86wNDaaSePf+1FpnIifzeP/yOedaWw/UUxGpyHiMxKT9efg9tK1UWrP
i7X/7zxT9bnd9sip0tIaOL1vBeMXGXpp7PFZcsZnGtu1pzFa4vJofJV5olp0
KAp+Tzpb7u3452w3bz/jkWvrRQ0q93HN/Exjc4TaKdVqc2K86/6uM8+VTrGM
/omS2P2S/e8qbO2ff95xKNN1Gi+MWK1ml73Ggr2Wxmj1ycxmmv69zR/3QHt1
A8BBLLM0hnIYGuOhhx4a98YBS2P0dNb5D3vy5EAvpTE+3dN5qquktM5WtTpD
e0b6VE5v221vPfmsk38dMH/8IgdpacwvIf0NXvB70tlyb8c/c7tF+5n1+sTi
xzXz0tjY//qg9UfWU2nM+P1PPdL2juXvf+OORstOHsaBXqeZVecqyX/ddY8e
1cH0idv4pGg8buoB9Vka+/nnGwCFuktjozG+9a1vPeKII4477rh2bywujXcv
3RQnKo2d82/t29XkWYgBS2NeecgtjX1vNxqvl9JSNH6RIZTG6GlxL1yebg67
d0tj9+9JvOW9VBoTc0vPyLX3pnuzfb0mNixcrf/IaoNVq6lV915pbJ7NHRuv
/y9nl1NnVgtklsbEJfKu49z75enkI1MaAQ4EqdLYaIxvf/vbjzrqqLlz5158
8cUXXHBBozfGpTFVEadrpXFznERpbOm8bq39zNL1uvnk6wM7JwizSmPOlae8
0tj/dqPx0pdHUxdES8cv0l9pnKh2nw6aHK9GxyRdGfJOHw3h8nQ8QLLLDVAa
O8MOdPzzt5u3n4n50YErely5pTH39ydz4bH234WuV2z2WhqTP+rk5fWc/Z8I
ZbW+evLtRnnHoUzGolFDy+r2vV+eTvxV6uXydN7xd3kaYGhSpTH0w49//ONn
nXXWvHnzbr311jvuuGPhwoUTExNhfldp7FTE6azSmHhpU+e6bbNetS9VNV4D
lfVmg/Ql5fY1zPj1UslL1NWJeOnWh3dMtt6e29d2Cy6fpbbbnls0fpa8N5gU
vPEkrwTG74jI2khibuH4GcrfKZSYnR6+5AWN7Z1I/570e/zzt5vzsoH0L0/G
XhUs39VNeni4nWU7BbXkcm3R73/iqnK187LGvJdJTLa3lqhSucehTNZJvOIP
3Il2vuDgVKKXRqZet5n3A8jbrDfCAAxP5pnGbl1nGjenS+OyzXF8uDeMvgP+
E20O+B0EOJgM9pE7qYoYxlmwbHM7SiPMEkP6kMm9w2lGgKEarDTGFXFBV2lc
oDQCAIwWpREAgFLDKo33LNscR2kEABglg5XGVEUM49zz1OY4SiMAwCgZsDQm
K+K00ggAMNJCaXzkkUfmz59/VdLVV1/d+LPtpptuevzxx/NK471PbY6jNAIA
jJJQGkNjXLdu3SstjQ9m3Lp16+bNWzdt2rxx46b16zesXv3ik08uveWWWxql
MVURp2ulcUucdmnsfOZu/at29+VnpvX4VRDtj/4e1kYzP74477OH+52fJ/kZ
2R3JT1Uv38+et538qOb2rcK9be9M5nYH+v7jGej6RuS9v8lBDPH3s59PXQeA
tFAar7jiinZdnJratWPnzu3bd6xd+9Lq1WtWvrD6uedWLln61P2LH1i27OnL
v3t5qzQmKmIYZ+HTW0LubaVRGuNvvhhuNxuugjbbV89tfuNZ9zfZRd/nG1fZ
+BvS4k8hzpufJxoz/Z168XbT42d9414f33/YtXqPH9mX+TVw++Uj9eI9OZC/
bW64/9rKPv4AUKZRGttf+7Jjx85t27Zv2bJ15crVK1Y8v/yZFcuWLX/woUfv
u+/XTz65tF0aG/1wYSvTrdLYTuZ3T8eiby5rLlSfMzY+Hp+arN/RPD/VvNm+
1R6k/UWB3d882PXkGJ0fG6+2F6jt6XjXKbnJom+NK9LVppJHovOdvPH8+Kk8
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
prpnv+P3SGkEAGjb96WxcSKxWq3mnX8sLoHh3t5KY+MkZGfZyfbJykjBhpRG
AIC2/XKmsd7fmnUu8978LjdRHRtPzeqxNPZLaQQAaNtfpbFT5mo1sLfSGHfN
XpbPWNuZRgCAQRwspbFe+XK7pNc0AgDsVQdFaaxdae66Kl2wfHsll6cBAIZi
33/kTvsyce1Wa4nUO2USJbDruvJgb4Tpl9IIANB2AH6498w/omcolEYAgLYD
szT2/IndPtwbAGBfOABL4wFCaQQAaFMa8yiNAABtSiMAAKWURgAASimNAACU
UhoBACilNAIAUEppBACglNIIAEAppREAgFJKIwAApZRGAABKKY0AAJRSGgEA
KKU0AgBQSmkEAKCU0ggAQCmlEQCAUkojAACllEYAAEopjQAAlFIaAQAopTQC
AFBKaQQAoJTSCABAKaURAIBSSiMAAKWURgAASimNAACUUhoBACilNAIAUEpp
BACglNIIAEAppREAgFJKIwAApZRGAABKKY0AAJRSGgEAKKU0AgBQSmkEAKCU
0ggAQCmlEQCAUkojAACllEYAAEopjQAAlFIaAQAopTQCAFBKaQQAoJTSCABA
KaURAIBSSiMAAKWURgAASimNAACUUhoBACilNAIAUEppBACglNIIAEAppREA
gFJKIwAApZRGAABKKY0AAJRSGgEAKKU0AgBQSmkEAKCU0ggAQCmlEQCAUkoj
AACllEYAAEopjQAAlFIaAQAopTQCAFBKaQQAoJTSCABAKaURAIBSSiMAAKWU
RgAASg2lNP5/PBnnPw==
     "], {{0, 282}, {871, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{871, 282},
   PlotRange->{{0, 871}, {0, 282}}]], "Input",ExpressionUUID->
  "4266dc06-4361-4aa9-8192-31dcfe229f5b"]
}], "Subsection",
 CellChangeTimes->{{3.7215538191332903`*^9, 3.721553824482068*^9}, {
  3.7215538562889214`*^9, 3.7215538658064995`*^9}, {3.7215539931612253`*^9, 
  3.721554050809225*^9}, {3.721554288410162*^9, 3.721554344670434*^9}, {
  3.721554377128543*^9, 3.7215543789024205`*^9}, {3.7215548422714972`*^9, 
  3.721554899278591*^9}, {3.724670140628817*^9, 3.724670141333002*^9}, {
  3.72467133578823*^9, 3.7246713422364264`*^9}, {3.727612391965323*^9, 
  3.727612404212635*^9}},ExpressionUUID->"3a797820-a97a-4046-93ee-\
79176dcc6618"],

Cell["\<\
  For Mac: Finder - Applications - Right click or control click on \
Mathematica icon - Show Package Contents - Contents - 
  MacOS - Double click WolframKernel icon\
\>", "Subsection",
 CellChangeTimes->{{3.7215544258647556`*^9, 3.7215544310766945`*^9}, {
  3.7215544650324306`*^9, 3.721554592471361*^9}, {3.721555122652143*^9, 
  3.721555126704877*^9}, {3.724670144796269*^9, 3.724670145212906*^9}, {
  3.727612409772311*^9, 
  3.7276124189003572`*^9}},ExpressionUUID->"463e0814-37a8-44fd-9ebb-\
44b49999178e"],

Cell["\<\
  For Linux: open a terminal, run the command of \[OpenCurlyQuote]wolfram\
\[CloseCurlyQuote].  \
\>", "Subsection",
 CellChangeTimes->{{3.7215545867840295`*^9, 3.721554597534774*^9}, {
  3.7215546615739546`*^9, 3.721554704008221*^9}, {3.72467014750077*^9, 
  3.724670148084741*^9}, {3.7270835081010523`*^9, 3.727083549821052*^9}, {
  3.727612598036954*^9, 
  3.72761262078922*^9}},ExpressionUUID->"1c848a0e-2600-4a8e-98f2-\
b11a0304bae1"],

Cell[TextData[{
 "  To end a kernel, type ",
 StyleBox["Quit[]",
  FontColor->RGBColor[0, 0, 1]],
 "."
}], "Subsection",
 CellChangeTimes->{{3.727083567665681*^9, 
  3.72708358883703*^9}},ExpressionUUID->"043c048d-48af-47d9-8277-\
d1988c24583d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["      ii. Mathematica Notebook: How to start a Notebook? -> ",
  FontColor->RGBColor[0.5, 0, 0.5]],
 StyleBox["We will use Notebook throughout the course",
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[0.5, 0, 0.5]],
 StyleBox[".",
  FontColor->RGBColor[0.5, 0, 0.5]]
}], "Section",
 CellChangeTimes->{{3.7215547459624915`*^9, 3.721554783112347*^9}, {
   3.7246713687398148`*^9, 3.724671385035742*^9}, {3.724671952527609*^9, 
   3.72467195387956*^9}, {3.727083533351323*^9, 3.72708353555678*^9}, 
   3.727418587389406*^9, {3.727612447572627*^9, 3.727612453876584*^9}, {
   3.73052893240238*^9, 
   3.730528934922304*^9}},ExpressionUUID->"7a601d88-02de-4d0d-b46e-\
46fe071c3f24"],

Cell["\<\
   For Windows: Start - All Programs - Wolfram Mathematica - Wolfram \
Mathematica xx (xx refers to the version  
   number).\
\>", "Subsection",
 CellChangeTimes->{{3.721554790970883*^9, 3.7215548176027184`*^9}, {
  3.721554907577419*^9, 3.7215549265969114`*^9}, {3.724670151276677*^9, 
  3.724670151548595*^9}, {3.727612491876576*^9, 
  3.727612493404508*^9}},ExpressionUUID->"b7b8d228-fe7b-4c3e-87e5-\
90fd20fd8c7c"],

Cell["\<\
   For Mac: Finder - Applications - Double click on Mathematica icon. \
\>", "Subsection",
 CellChangeTimes->{{3.7215549476552095`*^9, 3.7215549541874*^9}, {
  3.7215550192503524`*^9, 3.7215550328372664`*^9}, {3.721555098785932*^9, 
  3.7215551068718696`*^9}, {3.724670153772483*^9, 
  3.724670154028545*^9}},ExpressionUUID->"56d52d8c-3793-4602-93fe-\
731ba5b73b82"],

Cell["\<\
   For Linux: open a terminal, run the command of \
\[OpenCurlyQuote]mathematica\[CloseCurlyQuote] .\
\>", "Subsection",
 CellChangeTimes->{{3.721555138001561*^9, 3.721555166834934*^9}, {
  3.721557584156331*^9, 3.7215575872959795`*^9}, {3.724670157652273*^9, 
  3.724670158068681*^9}, {3.727612585957056*^9, 3.727612595244987*^9}, {
  3.7276126282772503`*^9, 
  3.727612631117166*^9}},ExpressionUUID->"4fdf7665-730f-4b96-8179-\
801a4159a477"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "4. Network Licences and Standalone Licences at the University:",
 "\n",
 StyleBox["For more detail see \
<https://www.applications.itservices.manchester.ac.uk/show_product.php?id=38&\
tab=summary>\n(unlimited network licence, a number of standalone licences for \
both staff members and students). ", "Subsection"]
}], "Subchapter",
 CellChangeTimes->{{3.721555206931801*^9, 3.721555207400551*^9}, {
  3.7215552520484037`*^9, 3.721555388421072*^9}, {3.721555430012869*^9, 
  3.7215554550485077`*^9}, {3.721645350570698*^9, 3.721645360782612*^9}, {
  3.724670172812669*^9, 3.724670190324788*^9}, {3.724670255804118*^9, 
  3.7246702830836573`*^9}, {3.724671964479259*^9, 3.7246719766230507`*^9}, {
  3.7259467936126127`*^9, 3.725946892337064*^9}, {3.727083701269596*^9, 
  3.727083716917985*^9}},ExpressionUUID->"7a6e2176-aba6-4f21-adc8-\
a0e363abf711"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Part 2: Graphic Interface of Mathematica: Mathematica NB (Notebook):\
\>", "Chapter",
 CellChangeTimes->{{3.7180837371127543`*^9, 3.718083744253298*^9}, {
   3.720244462121991*^9, 3.7202444698686314`*^9}, {3.720327687243306*^9, 
   3.720327691228751*^9}, {3.720348267172331*^9, 3.720348269052273*^9}, {
   3.7215501565867043`*^9, 3.7215501620942683`*^9}, {3.7215538813105106`*^9, 
   3.7215538834242945`*^9}, 3.724485984938365*^9, {3.727083736862253*^9, 
   3.727083740093925*^9}},
 TextAlignment->Center,ExpressionUUID->"4ea4ae31-52f1-4163-900b-17b8149da533"],

Cell[TextData[StyleBox["1. A complete interactive document combining text, \
tables, calculations and other elements.", "Section"]], "Subchapter",
 CellChangeTimes->{{3.721555503505975*^9, 3.7215555126251154`*^9}, {
  3.724670288579465*^9, 
  3.724670289131811*^9}},ExpressionUUID->"53a96dbc-325e-48d0-9ea5-\
2e3e774edeaf"],

Cell[TextData[StyleBox["2. Top Menu (about Files)\ni.   File extension name \
is xxx.nb. \nii.  File - New - Notebook.nb --> open a new nb file.\niii. File \
- Open --> open an existing nb file.\niv. Save/Save as --> to save a nb file \
being worked on.\nv.  \[OpenCurlyQuote]Save as\[CloseCurlyQuote] will give us \
a list of file extension options. One of them is .wl <or .wls - depending on \
which version of Mathematica being used>. Files with extension name xxx.wl \
(or xxx.wls) are script files. We will talk about how to create and run a \
script file in the afternoon session.\nvi. \[OpenCurlyQuote]Windows\
\[CloseCurlyQuote] option at the top ribbon--> adjust the size of the screen \
and change between notebooks running in the background.", "Section"]], \
"Subchapter",
 CellChangeTimes->{{3.7215555445066214`*^9, 3.7215555505547075`*^9}, {
   3.721555629985131*^9, 3.721555699674553*^9}, {3.7239668540955772`*^9, 
   3.723966944733604*^9}, {3.723967450233507*^9, 3.723967466347126*^9}, {
   3.724670292203673*^9, 3.724670292643502*^9}, {3.725777437274932*^9, 
   3.7257774393547573`*^9}, {3.72579036801858*^9, 3.7257906719545593`*^9}, {
   3.725947680611104*^9, 3.725947701202479*^9}, {3.7270837601671*^9, 
   3.727083767046074*^9}, {3.727084179519731*^9, 3.727084201192856*^9}, {
   3.7270842425685987`*^9, 3.727084419617607*^9}, 3.727084914731415*^9, {
   3.727089041431489*^9, 3.7270891341598454`*^9}, 3.7270891824799747`*^9, {
   3.727089780562806*^9, 3.7270897987390203`*^9}, {3.7463388787171793`*^9, 
   3.746338881702436*^9}, {3.74651397937645*^9, 3.746513985496982*^9}, {
   3.750142790594154*^9, 
   3.750142794342085*^9}},ExpressionUUID->"bf3a49f6-f950-4eea-b63e-\
7598a2212ce6"],

Cell[TextData[{
 StyleBox["3. Notebook Input",
  FontColor->RGBColor[1, 0, 0]],
 "\n",
 StyleBox["high beam across the top, plus (+) sign to the top left corner. \
Move the cursor to the left hand side of a nb document, a high beam \
horizontal bar will appear. Click once to bring up the plus (+) sign. One \
click on the plus (+) sign will give you the following 6 options ", "Section"],
 "\ni. ",
 StyleBox["Wolfram Language Input --> self-explanatory\nii. Free-form input \
and Wolfram| Alpha query --> we will talk about them in the upcoming section\n\
iii. External Language Input--> Python \niv. Plain text --> for entering text\
\nv. Other stye of text ... --> to making chapter, subchapter, section, \
subsection, convenient for users to divide the notebook they use into \
different parts.", "Section"]
}], "Subchapter",
 CellChangeTimes->{{3.746513904487731*^9, 
  3.746513992985263*^9}},ExpressionUUID->"6023bb8d-c842-493f-91e0-\
fe0827583110"],

Cell[TextData[{
 StyleBox["4. Notebook Evaluation\n", "Section"],
 StyleBox["i. Each cell (see the bracket to the right) containing codes needs \
to be evaluated.  \nii. Leave the current cell --> tapping \
\[OpenCurlyQuote]down arrow\[CloseCurlyQuote]. \niii. Stay in the same cell \
but moving downward for more space --> pressing \[OpenCurlyQuote]return\
\[CloseCurlyQuote]. \niv. Hover the cursor over to the right hand side of the \
bracket to choose a cell to evaluate, the bracket of the chosen cell will \
turn blue, right-click your mouse once to highlight the cell. \nv. ", 
  "Section",
  FontColor->RGBColor[0.5, 0, 0.5]],
 StyleBox["Press Shift+Enter to evaluate a cell", "Section",
  FontWeight->"Bold",
  FontColor->RGBColor[0.5, 0, 0.5]],
 StyleBox[".", "Section",
  FontColor->RGBColor[0.5, 0, 0.5]],
 StyleBox[" ", "Section"]
}], "Subchapter",
 CellChangeTimes->{
  3.7215555795601234`*^9, {3.7246702987316113`*^9, 3.724670453466667*^9}, {
   3.724670559105866*^9, 3.724670715528401*^9}, {3.724670974998802*^9, 
   3.724670977518621*^9}, 3.724671081573818*^9, {3.746514065016708*^9, 
   3.74651407862928*^9}},ExpressionUUID->"cf4ccedb-79e4-4c68-b937-\
e5882a80a0a0"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Part 3: Input, Evaluation, and a Peek into the Wolfram Mathematica Language:\
\>", "Chapter",
 CellChangeTimes->{{3.720251703512602*^9, 3.720251736981352*^9}, {
   3.720254837326778*^9, 3.7202548549039264`*^9}, {3.7202560964351044`*^9, 
   3.720256101742733*^9}, {3.7202610845525255`*^9, 3.7202610961764293`*^9}, {
   3.7203276946579113`*^9, 3.720327697383583*^9}, 3.721550164906666*^9, 
   3.7215501952858505`*^9, {3.72570648526307*^9, 3.725706490255136*^9}},
 TextAlignment->Center,ExpressionUUID->"e7ffba44-80a1-4db8-b8d1-c07639b62cb1"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["1. In-line free-form input (connected to the Wolfram \
Alpha computational knowledge engine): human/natural language query (keyboard \
shortcut:  equal sign, press once), make query, then evaluate (shift+enter). \
After the evaluation, hover the cursor to the grey + sign at the top right \
corner, the color will change to orange.    ", "Section"]], "Subchapter",
 CellChangeTimes->{{3.7202429815963974`*^9, 3.720242986071074*^9}, {
  3.7202445681393423`*^9, 3.7202445704806604`*^9}, {3.7202451806661*^9, 
  3.7202451827526393`*^9}, {3.7202517713738184`*^9, 3.720251773769326*^9}, {
  3.720267445930279*^9, 3.720267455364849*^9}, {3.720347663987816*^9, 
  3.720347673809285*^9}, {3.721557619806467*^9, 3.7215576235265107`*^9}, {
  3.721645373833499*^9, 3.7216453767493677`*^9}, {3.7219880169971113`*^9, 
  3.7219880174852467`*^9}, {3.7246715544105873`*^9, 3.724671562138583*^9}, {
  3.724671652809561*^9, 3.7246716608178377`*^9}, {3.724741586187416*^9, 
  3.724741589906107*^9}, {3.740994877093361*^9, 3.740994925865418*^9}, {
  3.7409949621453743`*^9, 3.7409950683538427`*^9}, {3.74633968149611*^9, 
  3.746339752440488*^9}},ExpressionUUID->"02e7fcca-28f9-426f-b332-\
3f4d1babcaaf"],

Cell[BoxData[""], "Input",ExpressionUUID->"ae1ebe42-5f64-444a-91e7-4e5c2f938e16"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["2. Wolfram| Alpha Query (connected to the Wolfram \
Alpha, the online Wolfram analytical engine): human/natural language query \
(keyboard shortcut: equal sign, press it twice), make query, then evaluate \
(shift+enter) ", "Section"]], "Subchapter",
 CellChangeTimes->{{3.7180893391385503`*^9, 3.7180893725173097`*^9}, {
   3.7180894265729575`*^9, 3.718089435544637*^9}, {3.718099342075014*^9, 
   3.718099342825014*^9}, 3.7202428239599485`*^9, 3.720243361362853*^9, {
   3.7202451851850166`*^9, 3.7202451872131624`*^9}, 3.720251775223428*^9, {
   3.722663162582831*^9, 3.722663166010194*^9}, {3.724671611737863*^9, 
   3.724671635697703*^9}, {3.72467166741757*^9, 3.724671679921712*^9}, {
   3.7246717873207407`*^9, 3.7246718113844137`*^9}, {3.72778262942278*^9, 
   3.72778263143093*^9}, {3.730533087487266*^9, 3.7305331523114862`*^9}, {
   3.740994843016903*^9, 
   3.7409948476807423`*^9}},ExpressionUUID->"587c1502-8b72-4861-9e60-\
7f1df21d0c10"],

Cell["\<\
Sometimes when we make query with Wolfram | Alpha Query, it does not \
necessarily give us what we expect. It is up to how much and what type of \
information associated with the specific phrase we enquire.\
\>", "Text",
 CellChangeTimes->{{3.727092231687393*^9, 3.7270923353601913`*^9}, {
  3.727782642703491*^9, 
  3.7277826495114403`*^9}},ExpressionUUID->"200caa2a-8a2d-42f2-bc13-\
ca5c991ec317"],

Cell[BoxData[""], "Input",ExpressionUUID->"da833ee3-3ede-4380-8a7f-e36fa6ee75da"],

Cell["\<\
But we are guaranteed with the correct outcome such as enquiring about Newton \
and gravity.\
\>", "Text",
 CellChangeTimes->{{3.727092418640367*^9, 3.7270924727287292`*^9}, {
   3.7270929360670137`*^9, 3.7270929698191347`*^9}, {3.7270930227008142`*^9, 
   3.7270930227107887`*^9}, 3.727093138755966*^9, {3.7270941982411747`*^9, 
   3.727094229041429*^9}, {3.749970345193473*^9, 
   3.749970392361485*^9}},ExpressionUUID->"0f98e4e3-811f-48e5-b3cc-\
c8f73199b1aa"],

Cell[BoxData[""], "Input",ExpressionUUID->"41e3dbb2-8629-4591-966f-6a578642b695"],

Cell[TextData[StyleBox["Exercise:\n1. Use free-form query to find out 50 \
digits of Pi, and the number of turkeys in Turkey.  \n2. Can we use Wolfram | \
Alpha Query to find out how many crypto currencies are available?", "Section",
 FontColor->RGBColor[1, 0, 1]]], "Subsubsection",
 CellChangeTimes->{{3.7277655910019836`*^9, 3.7277657100709467`*^9}, {
  3.72777912939076*^9, 3.727779158087056*^9}, {3.727780629968272*^9, 
  3.7277806944225073`*^9}, {3.7277816695469723`*^9, 3.727781669786992*^9}, {
  3.727782518758256*^9, 3.7277825440303507`*^9}, {3.7277826142867327`*^9, 
  3.727782617886792*^9}, {3.727782690551633*^9, 3.727782702079755*^9}, {
  3.7277828797365723`*^9, 
  3.727782896208706*^9}},ExpressionUUID->"d6b960ea-6b33-4844-bd1d-\
5a6287d29bba"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Answers:", "Subsection"]], "Subsubsection",
 CellChangeTimes->{{3.7281162892860737`*^9, 
  3.7281162995901127`*^9}},ExpressionUUID->"d2a56fcb-f41f-420c-ad3b-\
7decf126626b"],

Cell[BoxData[""], "Input",ExpressionUUID->"677b3d60-1017-4ff9-8f08-0d0526d13e05"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["3. User Input: ", "Section"],
 StyleBox[" ", "Subsection"]
}], "Subchapter",
 CellChangeTimes->{{3.718090610324828*^9, 3.718090620847289*^9}, {
   3.718090665145174*^9, 3.718090675134432*^9}, {3.718099346121889*^9, 
   3.7180993465984516`*^9}, {3.7202441788383594`*^9, 3.720244195153129*^9}, {
   3.7202442349144*^9, 3.720244267628439*^9}, {3.720245189616501*^9, 
   3.7202451932707977`*^9}, {3.7202464179899044`*^9, 
   3.7202464334713497`*^9}, {3.720247294441991*^9, 3.7202473704158497`*^9}, {
   3.72025022129529*^9, 3.7202502237720647`*^9}, {3.7202503159708133`*^9, 
   3.7202503251839*^9}, {3.7202505493377714`*^9, 3.720250559115312*^9}, {
   3.7202517765652246`*^9, 3.720251778369912*^9}, {3.720253834538752*^9, 
   3.720253873912409*^9}, 3.7202560875013413`*^9, {3.720260260931741*^9, 
   3.7202602695788603`*^9}, {3.7202603016241093`*^9, 
   3.7202603039141483`*^9}, {3.7202609160689683`*^9, 3.7202609238921432`*^9}, 
   3.720261109068387*^9, {3.721635358380807*^9, 3.7216354695619636`*^9}, {
   3.7216355467800875`*^9, 3.7216355720985246`*^9}, {3.722663183610529*^9, 
   3.7226631856430073`*^9}, {3.722771876554604*^9, 3.7227718835627527`*^9}, 
   3.722772030568421*^9, 3.722772331928838*^9, 3.722772367022541*^9, {
   3.722772408054181*^9, 3.72277241056625*^9}, 3.722772693668001*^9, {
   3.746244312676906*^9, 
   3.7462443455888853`*^9}},ExpressionUUID->"3d82e4dc-4717-4a54-be80-\
18e92af2d3bf"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox[" ", "Subsection"],
 StyleBox[" i. Mathematica accepts user input to be used as a calculator/data \
generator. Color is an important and useful indicator: ", "Subsection",
  FontColor->RGBColor[0.5, 0, 0.5]],
 StyleBox[" ", "Subsection"],
 StyleBox["Black? ", "Subsection",
  FontColor->GrayLevel[0]],
 StyleBox["Blue? ", "Subsection",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Red? ", "Subsection",
  FontColor->RGBColor[1, 0, 0]]
}], "Section",
 CellChangeTimes->{{3.72277242857903*^9, 3.722772437534717*^9}, {
  3.724485293087658*^9, 3.724485293984145*^9}, {3.7244859540826063`*^9, 
  3.724485954587146*^9}, {3.724993040881925*^9, 3.724993042328989*^9}, {
  3.7259481221355743`*^9, 3.7259481227665157`*^9}, {3.7422804173059607`*^9, 
  3.742280419593965*^9}, {3.7463401430920877`*^9, 
  3.746340159043202*^9}},ExpressionUUID->"a109d6c4-e055-4c9f-b257-\
ac95c081d1a4"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["<1>. Arithmetic operation and symbolic calculation:",
 FontSize->16]], "Subsection",
 CellChangeTimes->{
  3.722083066084214*^9, {3.722083484432207*^9, 3.72208349902672*^9}, {
   3.722772047273264*^9, 3.722772051496729*^9}, {3.723973663526026*^9, 
   3.723973671674139*^9}, {3.723975052765429*^9, 3.723975074310895*^9}, {
   3.7239751070277567`*^9, 3.7239751102884502`*^9}, 3.7239757625120087`*^9, 
   3.7244853878304663`*^9, {3.740997166741831*^9, 
   3.7409971739019003`*^9}},ExpressionUUID->"675d60f3-2613-4ea1-a049-\
314a983bd81a"],

Cell[TextData[{
 StyleBox["Rule of Computational Precedence \[Rule] ",
  FontSize->16],
 StyleBox["PEMDAS",
  FontSize->16,
  FontColor->RGBColor[0, 1, 0]]
}], "Text",
 CellChangeTimes->{
  3.7239751254377193`*^9, {3.723975166048539*^9, 3.723975176349757*^9}, 
   3.723975766028953*^9, 3.724485314199127*^9, {3.724666581430565*^9, 
   3.724666583574686*^9}, {3.72570975174533*^9, 3.725709780450183*^9}, {
   3.725948057295939*^9, 3.72594805879897*^9}, {3.7277657505346117`*^9, 
   3.727765753469965*^9}, {3.7409971476457663`*^9, 
   3.740997178070106*^9}},ExpressionUUID->"bedfdb9f-2c67-4bd2-85ed-\
909a90f7d8ac"],

Cell[TextData[Cell[BoxData[GridBox[{
   {
    StyleBox[
     RowBox[{"    ", 
      RowBox[{"Name", " ", "of", " ", 
       RowBox[{"Operator", " ", "[", 
        RowBox[{"Symbol", " ", "of", " ", "Operator"}], "]"}], 
       "           "}]}], "Text"], 
    RowBox[{"Keyboard", " ", "Shortcuts"}]},
   {
    RowBox[{
     StyleBox[
      RowBox[{
       StyleBox["P",
        FontColor->RGBColor[0, 1, 0]], "arenthesis"}]], " ", "[", " ", 
     RowBox[{"(", ")"}], " ", "]"}], 
    RowBox[{"n", "/", "a"}]},
   {
    RowBox[{
     StyleBox[
      RowBox[{
       StyleBox["E",
        FontColor->RGBColor[0, 1, 0]], "xponentiation"}]], "[", "^", "]"}], 
    RowBox[{" ", 
     RowBox[{
      RowBox[{"Press", " ", "[", 
       RowBox[{"Ctrl", " ", "+", " ", 
        RowBox[{"'", 
         RowBox[{"6", "'"}]}]}], "]"}], " ", "together", " ", "to", " ", 
      "get", " ", "the", " ", "typesetting", " ", "of", " ", 
      SuperscriptBox["X", "y"]}]}]},
   {
    RowBox[{
     RowBox[{"Root", " ", "[", 
      SqrtBox["\[Placeholder]"], "]"}], 
     RowBox[{"(", 
      RowBox[{
      "the", " ", "inverse", " ", "operation", " ", "of", " ", 
       "exponentiation"}], ")"}]}], 
    RowBox[{
     RowBox[{
      RowBox[{"Press", " ", "[", 
       RowBox[{"Ctrl", "+", 
        RowBox[{"'", 
         RowBox[{"2", "'"}]}]}], "]"}], " ", "to", " ", "get", " ", "the", 
      " ", "typsetting", " ", "of", " ", 
      SqrtBox["y"]}], ",", " ", 
     RowBox[{
      RowBox[{"Press", " ", "[", 
       RowBox[{"Ctrl", "+", 
        RowBox[{"'", 
         RowBox[{"2", "'"}], " ", "then", " ", "Ctrl"}], "+", 
        RowBox[{"'", 
         RowBox[{"5", "'"}]}]}], "]"}], " ", "to", " ", "get", " ", "the", 
      " ", "typesetting", " ", "of", " ", 
      RadicalBox["y", "x"]}]}]},
   {
    RowBox[{
     StyleBox[
      RowBox[{
       StyleBox["M",
        FontColor->RGBColor[0, 1, 0]], "ultiplication"}]], " ", "[", "*", 
     "]"}], 
    StyleBox[
     RowBox[{
      RowBox[{
      "There", " ", "is", " ", "no", " ", "need", " ", "to", " ", "always", 
       " ", "use", " ", "*", " ", "to", " ", "multiply", " ", "two", " ", 
       "numbers"}], ",", 
      RowBox[{"'", "2", "*", 
       RowBox[{"3", "'"}], " ", "in", " ", "the", " ", "form", " ", 
       RowBox[{"of", " ", "'"}], "2", 
       RowBox[{"(", "space", ")"}], 
       RowBox[{"3", "'"}], " ", "also", " ", 
       RowBox[{"works", ".", " ", 
        RowBox[{
         StyleBox["Note",
          FontColor->RGBColor[0, 1, 0]], 
         StyleBox[":",
          FontColor->RGBColor[0, 1, 0]], 
         RowBox[{
          StyleBox["be",
           FontColor->RGBColor[0, 1, 0]], 
          StyleBox[" ",
           FontColor->RGBColor[0, 1, 0]], 
          StyleBox["careful",
           FontColor->RGBColor[0, 1, 0]], 
          StyleBox[" ",
           FontColor->RGBColor[0, 1, 0]], 
          StyleBox["that",
           FontColor->RGBColor[0, 1, 0]], 
          StyleBox[" ",
           FontColor->RGBColor[0, 1, 0]], 
          StyleBox["there",
           FontColor->RGBColor[0, 1, 0]], 
          StyleBox[" ",
           FontColor->RGBColor[0, 1, 0]], 
          StyleBox["has",
           FontColor->RGBColor[0, 1, 0]], 
          StyleBox[" ",
           FontColor->RGBColor[0, 1, 0]], 
          StyleBox["to",
           FontColor->RGBColor[0, 1, 0]], 
          StyleBox[" ",
           FontColor->RGBColor[0, 1, 0]], 
          StyleBox["be",
           FontColor->RGBColor[0, 1, 0]], 
          StyleBox[" ",
           FontColor->RGBColor[0, 1, 0]], 
          StyleBox["a",
           FontColor->RGBColor[0, 1, 0]], 
          StyleBox[" ",
           FontColor->RGBColor[0, 1, 0]], 
          StyleBox["space",
           FontColor->RGBColor[0, 1, 0]], 
          StyleBox[" ",
           FontColor->RGBColor[0, 1, 0]], 
          StyleBox["between",
           FontColor->RGBColor[0, 1, 0]], 
          StyleBox[" ",
           FontColor->RGBColor[0, 1, 0]], 
          StyleBox["the",
           FontColor->RGBColor[0, 1, 0]], 
          StyleBox[" ",
           FontColor->RGBColor[0, 1, 0]], 
          StyleBox["two",
           FontColor->RGBColor[0, 1, 0]], 
          StyleBox[" ",
           FontColor->RGBColor[0, 1, 0]], 
          RowBox[{
           StyleBox["numbers",
            FontColor->RGBColor[0, 1, 0]], 
           StyleBox[".",
            FontColor->RGBColor[0, 1, 0]], 
           "                                         "}]}]}]}]}]}], "Text"]},
   {
    RowBox[{
     StyleBox[
      RowBox[{
       StyleBox["D",
        FontColor->RGBColor[0, 1, 0]], 
       StyleBox["ivision", "Text"]}]], 
     StyleBox[" ", "Text"], 
     StyleBox["[", "Text"], 
     StyleBox[" ", "Text"], 
     StyleBox["/", "Text"], 
     StyleBox[" ", "Text"], 
     StyleBox["]", "Text"]}], 
    StyleBox[
     RowBox[{
      StyleBox[
       RowBox[{"Press", " ", "[", 
        RowBox[{"Ctrl", "+", 
         RowBox[{"'", "/", "'"}]}], " ", "]"}],
       FontColor->GrayLevel[0]], 
      StyleBox["to",
       FontColor->GrayLevel[0]], 
      StyleBox[" ",
       FontColor->GrayLevel[0]], 
      StyleBox["get",
       FontColor->GrayLevel[0]], 
      StyleBox[" ",
       FontColor->GrayLevel[0]], 
      StyleBox["the",
       FontColor->GrayLevel[0]], 
      StyleBox[" ",
       FontColor->GrayLevel[0]], 
      StyleBox["tysetting",
       FontColor->GrayLevel[0]], 
      StyleBox[" ",
       FontColor->GrayLevel[0]], 
      StyleBox["of",
       FontColor->GrayLevel[0]], 
      StyleBox[" ",
       FontColor->GrayLevel[0]], 
      FractionBox["a", "b"], "    "}], "Text"]},
   {
    RowBox[{
     StyleBox[
      RowBox[{
       StyleBox["A",
        FontColor->RGBColor[0, 1, 0]], 
       StyleBox["ddition", "Text"]}]], 
     StyleBox[" ", "Text"], 
     StyleBox["[", "Text"], 
     StyleBox[" ", "Text"], 
     StyleBox["+", "Text"], 
     StyleBox[" ", "Text"], 
     StyleBox["]", "Text"]}], 
    RowBox[{"n", "/", "a"}]},
   {
    RowBox[{
     StyleBox[
      RowBox[{
       StyleBox["S",
        FontColor->RGBColor[0, 1, 0]], "ubstration"}]], " ", "[", "-", "]"}], 
    RowBox[{"n", "/", "a"}]}
  },
  GridBoxDividers->{
   "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
    "RowsIndexed" -> \
{}}]],ExpressionUUID->"d64f57b0-f7e4-4e7f-9b9a-99021b548791"]], "Text",
 CellChangeTimes->{
  3.722083083415395*^9, {3.723966738963991*^9, 3.723966741471169*^9}, {
   3.723966783118312*^9, 3.723966792704545*^9}, {3.724742194997641*^9, 
   3.724742251489015*^9}, {3.72474263709302*^9, 3.724742743101569*^9}, {
   3.724742777188159*^9, 3.724742777341206*^9}, {3.7247430341556797`*^9, 
   3.724743071371294*^9}, {3.724743222785656*^9, 3.7247433221476183`*^9}, {
   3.724743384593068*^9, 3.724743398963728*^9}, {3.724743440475816*^9, 
   3.72474348222649*^9}, {3.724743516186186*^9, 3.724743694682571*^9}, {
   3.724745277221362*^9, 3.724745570819303*^9}, {3.724745716588398*^9, 
   3.724745921929963*^9}, {3.724746187588559*^9, 3.72474622419188*^9}, {
   3.724746306636594*^9, 3.724746379789551*^9}, {3.724747250694441*^9, 
   3.724747260999291*^9}, {3.724747312950626*^9, 3.72474736925535*^9}, {
   3.724748457375978*^9, 3.724748568666108*^9}, {3.724753369869665*^9, 
   3.724753376880117*^9}, {3.724753433063991*^9, 3.724753435665554*^9}, {
   3.72475520021931*^9, 3.72475520668703*^9}, {3.725709747836247*^9, 
   3.72570976991057*^9}, {3.725709831962242*^9, 3.725709843077035*^9}, {
   3.725709874612248*^9, 3.7257098746133003`*^9}, {3.727094949184667*^9, 
   3.72709495813596*^9}},ExpressionUUID->"c66b0c46-88ed-43a9-9385-\
638986f9afcf"],

Cell["\<\
(What about remainder? In many other programming language the way to \
calculate remainder is to use [%]. In Mathematica it is not as [%] is used \
for a different purpose. We will get back to this part later).\
\>", "Text",
 CellChangeTimes->{{3.730526852136228*^9, 3.730526888720422*^9}, {
  3.7305269374966516`*^9, 3.730526995697288*^9}, {3.7305272568104258`*^9, 
  3.730527296194798*^9}, {3.730527390851252*^9, 
  3.7305274013391113`*^9}},ExpressionUUID->"2ce8aa28-8b88-4973-901c-\
77c1dc254a37"],

Cell["Types of numbers Mathematica handles:", "Text",
 CellChangeTimes->{
  3.7409972317748947`*^9},ExpressionUUID->"b1182e54-0a78-4234-bb6c-\
3af0eaeed0be"],

Cell[TextData[Cell[BoxData[GridBox[{
   {
    RowBox[{"Number", " ", "Type"}], "Definition", 
    RowBox[{"Examples", "                 "}]},
   {"Integer", 
    RowBox[{
    "Any", " ", "number", " ", "which", " ", "does", " ", "not", " ", 
     "contain", " ", "a", " ", "decimal", " ", "point"}], 
    RowBox[{"123", ",", " ", 
     RowBox[{"-", "56"}]}]},
   {"Rational", 
    RowBox[{
     RowBox[{"A", " ", "quotient", " ", "of", " ", "integers"}], ",", " ", 
     RowBox[{"n", "/", "m"}], ",", " ", 
     RowBox[{"n", "=", "Numerator"}], ",", " ", 
     RowBox[{"m", "=", "Denominator"}]}], 
    RowBox[{
     RowBox[{"5", "/", "6"}], ",", " ", 
     FractionBox["3", "7"]}]},
   {"Real", 
    RowBox[{
    "Any", " ", "number", " ", "which", " ", "contains", " ", "a", " ", 
     "decimal", " ", "point"}], 
    RowBox[{"12.34", ",", " ", "\[Pi]"}]},
   {"Complex", 
    RowBox[{
     RowBox[{
     "A", " ", "sum", " ", "of", " ", "a", " ", "real", " ", "and", " ", 
      "imaginary", " ", "parts"}], ",", " ", 
     RowBox[{"x", "+", "\[Iota]y"}]}], 
    RowBox[{"2", "+", 
     RowBox[{"5", "I"}]}]}
  },
  GridBoxDividers->{
   "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
    "RowsIndexed" -> \
{}}]],ExpressionUUID->"105a24a0-044e-4a87-a5f7-eb1c907997a8"]], "Text",
 CellChangeTimes->{
  3.740997210977256*^9},ExpressionUUID->"c86d3c28-9788-4abd-801b-\
7663fbfcf8c9"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7202459560781307`*^9, 3.720245957742193*^9}, {
   3.7216352740388193`*^9, 3.721635316556753*^9}, {3.724754271454194*^9, 
   3.724754273366025*^9}, {3.737094559016245*^9, 3.737094573782559*^9}, {
   3.740996298520689*^9, 3.740996320880806*^9}, {3.749971017237818*^9, 
   3.749971043284713*^9}, 
   3.750417830611579*^9},ExpressionUUID->"8a75fdaa-c45f-46ec-a299-\
dcf3e28af7f4"],

Cell[TextData[{
 "We can get \[Pi] sign by typing ESC + pi + ESC (in sequence). While the \
evaluation of \[Pi] does not give us more than just the sign, Mathematica\
\[CloseCurlyQuote]s ",
 StyleBox["Suggestion Bar",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " comes in handy. Click the right bracket of the output cell for a grey \
arrow to pop up. If the grey arrow does not pop up, go back to the input cell \
to evaluate again."
}], "Text",
 CellChangeTimes->{
  3.725948210876279*^9, {3.740997773313367*^9, 3.7409978588578176`*^9}, {
   3.746340369564587*^9, 3.746340456109066*^9}, {3.7463405343974857`*^9, 
   3.746340557286035*^9}},ExpressionUUID->"af05bb88-ff72-4ef0-806a-\
0f215816484c"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.720261292261366*^9, {3.724571354096387*^9, 3.72457138059242*^9}, 
   3.724654661806164*^9, {3.724745651767984*^9, 3.724745656543983*^9}, {
   3.7409972650546207`*^9, 3.7409973048648243`*^9}, {3.746340288421547*^9, 
   3.7463402917477627`*^9}, 
   3.750417837132683*^9},ExpressionUUID->"b4152716-ca52-4937-bee3-\
f630e1d5a197"],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s try go back to the example of ((0+1-2)* 3)/4 to get \
a numerical outcome using ",
 StyleBox["Suggestion Bar",
  FontWeight->"Bold",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.724655074178515*^9, 3.7246551022749*^9}, {
  3.7247431081770372`*^9, 3.724743132480689*^9}, {3.724743777612537*^9, 
  3.724743807932222*^9}, {3.7259482998609333`*^9, 3.72594830110223*^9}, {
  3.725948338765276*^9, 3.7259483463258038`*^9}, {3.740997936962349*^9, 
  3.74099795663764*^9}, {3.749971185213937*^9, 
  3.749971266173909*^9}},ExpressionUUID->"0ef14a83-2c14-4740-a747-\
81a2adda787e"],

Cell[TextData[{
 StyleBox["Question: What ",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["Suggestion Bar",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[" can we use to find out the following symbolic computation?",
  FontColor->RGBColor[1, 0, 1]]
}], "Text",
 CellChangeTimes->{{3.7216464116429167`*^9, 3.7216464309479046`*^9}, {
  3.722055917316995*^9, 3.7220559187754*^9}, {3.7220805849193974`*^9, 
  3.7220805907114573`*^9}, {3.725948367598072*^9, 3.725948371013569*^9}, {
  3.727157767533001*^9, 
  3.727157768652587*^9}},ExpressionUUID->"00c41a15-0d1b-4cb8-ad53-\
f210ae57d40f"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"a", "+", "1"}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"b", "-", "1"}], ")"}]}], ")"}], "n"]], "Input",
 CellChangeTimes->{{3.74099889926409*^9, 3.7409989282482767`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"4786ea2a-4370-4a02-9a77-e92748ef7081"],

Cell[TextData[{
 StyleBox["Question: Can we do some more complicated computation? Take a look \
at the ",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["Palettes",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[" (Basic Math Assistant) option at the top ribbon.",
  FontColor->RGBColor[1, 0, 1]]
}], "Text",
 CellChangeTimes->{{3.7220622157350473`*^9, 3.7220622360446177`*^9}, {
   3.7220624954769993`*^9, 3.7220625133542833`*^9}, {3.7246551698822927`*^9, 
   3.724655193578226*^9}, {3.725948408060474*^9, 3.7259484436634912`*^9}, {
   3.728108755050396*^9, 3.7281087743608713`*^9}, 
   3.749971325686595*^9},ExpressionUUID->"a1087864-f676-4a1a-a8cd-\
5880c9d388f8"],

Cell[TextData[{
 " Go to ",
 StyleBox["Palettes -> Basic Math Assistant ->Calculator -> Advanced",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "  to get the algebra of summation notation to define the definite integral \
of a continuous function of one variable on a closed interval,(source: \
https://www.math.ucdavis.edu/~kouba/CalcTwoDIRECTORY/summationdirectory/\
Summation.html, see Problem 2)"
}], "Text",
 CellChangeTimes->{{3.722065991196416*^9, 3.722066049601237*^9}, {
  3.7245724631039753`*^9, 3.724572463344406*^9}, {3.7271579178451357`*^9, 
  3.727157938829397*^9}, {3.7410015351588993`*^9, 3.741001542983021*^9}, {
  3.749971332806088*^9, 
  3.749971347446323*^9}},ExpressionUUID->"32fdd800-cd7b-48a6-bd30-\
2896fdca12ac"],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{
    TagBox[
     FrameBox["index"],
     "Placeholder"], "=", 
    TagBox[
     FrameBox["start"],
     "Placeholder"]}], 
   TagBox[
    FrameBox["end"],
    "Placeholder"]], 
  TagBox[
   FrameBox["expr"],
   "SelectionPlaceholder"]}]], "Input",
 CellChangeTimes->{3.741001503107897*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"819cbc97-8a9d-4ab1-804a-5e8cc1f487c4"],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"i", "=", "1"}], "100"], 
  RowBox[{"(", 
   RowBox[{"4", "+", 
    RowBox[{"3", "i"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.722065914727138*^9, 3.722065932631435*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"febe72b9-0250-4f21-ba0f-7e2ddc08a74f"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["<2>. List (key data structure used in Mathematica to \
group objects and collect things together) creation and operation:",
 FontSize->16]], "Subsubsection",
 CellChangeTimes->{{3.7216461318625994`*^9, 3.721646141474823*^9}, 
   3.721715829625229*^9, {3.7219933453807645`*^9, 3.7219933610963583`*^9}, {
   3.7219942210718966`*^9, 3.7219942378945947`*^9}, {3.7227720612568893`*^9, 
   3.7227720639686337`*^9}, {3.723974872437688*^9, 3.723974873478977*^9}, {
   3.723975618452672*^9, 3.723975623145322*^9}, {3.7244853946385202`*^9, 
   3.724485427438534*^9}, {3.724485714635976*^9, 3.7244857159162683`*^9}, {
   3.724648397387767*^9, 3.724648456299412*^9}, {3.7246666241985903`*^9, 
   3.7246667014301987`*^9}, {3.724753843265088*^9, 3.7247538610654907`*^9}, {
   3.724755646932495*^9, 
   3.724755663476767*^9}},ExpressionUUID->"b2a9dda9-ae50-420c-a88d-\
9a2cd7a393ba"],

Cell["\<\
We can directly input a set of numerical data to create a vector (one \
dimension list of numbers) and a matrix (2-d dimensions).\
\>", "Text",
 CellChangeTimes->{{3.7219946795032873`*^9, 3.7219946997404485`*^9}, {
   3.724485486821458*^9, 3.7244854871089983`*^9}, {3.724572472552042*^9, 
   3.724572473208041*^9}, {3.724648067878462*^9, 3.72464807820617*^9}, {
   3.724754083255363*^9, 3.72475411754288*^9}, {3.724754366373519*^9, 
   3.724754368341186*^9}, {3.7247552924470053`*^9, 3.7247553215109386`*^9}, {
   3.742540015251604*^9, 3.742540035547402*^9}, {3.7425403866216087`*^9, 
   3.7425403964376173`*^9}, 3.742540433109705*^9, {3.749971559815216*^9, 
   3.7499715768391533`*^9}, {3.750072867212936*^9, 
   3.7500728746129293`*^9}},ExpressionUUID->"34144df4-a78e-4c43-9192-\
833693121d0d"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7214800521047573`*^9, 3.72148005558568*^9}, {
   3.7216357609521236`*^9, 3.7216357733857174`*^9}, {3.724650578004107*^9, 
   3.724650580323835*^9}, {3.7410016115285797`*^9, 3.7410016395596867`*^9}, {
   3.741001682233633*^9, 3.741001684752232*^9}, {3.742286925671486*^9, 
   3.7422869354857693`*^9}, 
   3.750417875012557*^9},ExpressionUUID->"74ba2712-a41d-4a29-8751-\
c8ef94448985"],

Cell["Perform calculation on lists (vectors and matrices).", "Text",
 CellChangeTimes->{{3.7220645389404764`*^9, 3.722064539767625*^9}, {
  3.722065034907984*^9, 3.722065057210678*^9}, {3.724485448846464*^9, 
  3.7244854505500097`*^9}, {3.724572481239629*^9, 3.724572483063978*^9}, {
  3.74999628883556*^9, 
  3.7499962967134132`*^9}},ExpressionUUID->"566f4c47-bf95-438e-8873-\
53733d7a7afe"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.7202658910153594`*^9, {3.7410016472968884`*^9, 3.74100165131688*^9}, {
   3.74228694071896*^9, 3.742286945285886*^9}, 
   3.750417879660083*^9},ExpressionUUID->"ea6b8ff3-87f2-4614-ba66-\
6c5b3f2d18d7"],

Cell["\<\
Apart from numbers, we can also have a sequence/collection of characters \
(hereafter \[OpenCurlyDoubleQuote]string\[CloseCurlyDoubleQuote]). Quotes \
\[OpenCurlyDoubleQuote]\[CloseCurlyDoubleQuote] around the expressions we \
enter must be included if we want the Wolfram Language to understand the \
input is a string. \
\>", "Text",
 CellChangeTimes->{{3.724658415138206*^9, 3.724658601449113*^9}, {
  3.724667949190933*^9, 3.7246680438761463`*^9}, {3.724668118619773*^9, 
  3.72466812373146*^9}, {3.724754349597609*^9, 3.724754404277437*^9}, {
  3.7247552601112347`*^9, 3.724755261951576*^9}, {3.7247553347510757`*^9, 
  3.724755357783263*^9}, {3.7259485278352823`*^9, 3.7259485337161293`*^9}, {
  3.727766075168251*^9, 
  3.7277660810798693`*^9}},ExpressionUUID->"2b6db2cd-3662-47ab-8f7e-\
27489efacd56"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7219934323792768`*^9, 3.721993502990014*^9}, {
   3.722755605271188*^9, 3.722755607407284*^9}, {3.7246494342923594`*^9, 
   3.724649441556403*^9}, {3.724658510338373*^9, 3.724658512177722*^9}, {
   3.724658605537353*^9, 3.724658625985326*^9}, {3.724658740184716*^9, 
   3.724658742959852*^9}, {3.724755420486413*^9, 3.7247554298863297`*^9}, {
   3.749971645001439*^9, 3.749971681799798*^9}, 
   3.7504178867557993`*^9},ExpressionUUID->"09d3014a-4cdc-4eff-9fc3-\
27de3ebb6fbe"],

Cell["\<\
If we would like to go back to the previous list of Alice in Wonderland, we \
can type \[OpenCurlyDoubleQuote]%\[CloseCurlyDoubleQuote] to ask the notebook \
to retrieve the last evaluated outcome.\
\>", "Text",
 CellChangeTimes->{{3.7246495573230677`*^9, 3.724649629554908*^9}, {
  3.7246498149777822`*^9, 3.724649826689355*^9}, {3.725948566795106*^9, 
  3.7259485865564413`*^9}, {3.749971698319737*^9, 
  3.74997170043438*^9}},ExpressionUUID->"8b8ae612-ae4d-453e-b134-\
cb8ee1a24840"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.72464965865979*^9, 
  3.750417887885672*^9},ExpressionUUID->"76b0a81c-b069-4385-b85e-\
4cf8a805b171"],

Cell[TextData[StyleBox["Question: now let\[CloseCurlyQuote]s retype the \
string of Alice in Wonderland but without the quotes. What is the evaluation \
outcome?",
 FontColor->RGBColor[1, 0, 1]]], "Text",
 CellChangeTimes->{{3.7247541910459747`*^9, 3.724754224854122*^9}, {
  3.724755445349937*^9, 3.724755467445857*^9}, {3.724755513062069*^9, 
  3.7247555143659983`*^9}, {3.725948608083688*^9, 
  3.725948609467637*^9}},ExpressionUUID->"e8343bbe-c641-437e-82ca-\
295808eab6ad"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.724755522709634*^9, 3.724755562317608*^9}, 
   3.7504178900912533`*^9},ExpressionUUID->"885a8015-c049-4ee9-a32e-\
1f7ddf7160e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["<3>. Value assignments:",
 FontSize->16]], "Subsubsection",
 CellChangeTimes->{{3.7247556788727713`*^9, 
  3.7247556919486227`*^9}},ExpressionUUID->"90b90267-16fe-46d7-b607-\
e9d887f5648d"],

Cell["\<\
Nevertheless, when there are a multiples of input data we would like to go \
back to in the notebook, retyping the data or calling the % function is not \
necessarily the most efficient way. Therefore, it is better if the input data \
is given a \[OpenCurlyDoubleQuote]name\[CloseCurlyDoubleQuote] (hereafter \
\[OpenCurlyDoubleQuote]variable\[CloseCurlyDoubleQuote]) to avoid repetition \
of typing and to go back to the data we need later much easier, such as: \
\>", "Text",
 CellChangeTimes->{{3.7219947066867375`*^9, 3.72199473905616*^9}, {
   3.7244855231324177`*^9, 3.7244855233003597`*^9}, {3.724572490599782*^9, 
   3.72457251121562*^9}, {3.7246496675467253`*^9, 3.724649799225678*^9}, {
   3.724649856105426*^9, 3.7246498662253532`*^9}, {3.724666765581571*^9, 
   3.724666794173273*^9}, 3.724666845133143*^9, {3.7247557056849823`*^9, 
   3.724755785572411*^9}, {3.724755983059537*^9, 3.724755996682555*^9}, {
   3.7259486369062843`*^9, 3.725948662672564*^9}, {3.730532291963579*^9, 
   3.730532296827389*^9}, {3.742287026109865*^9, 
   3.7422870550704947`*^9}},ExpressionUUID->"797fefb1-2869-421a-bfa8-\
109cda022e39"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.724649880928925*^9, 3.724649913392776*^9}, {
   3.724755835132655*^9, 3.7247558361875668`*^9}, {3.7422869833667*^9, 
   3.742286984622142*^9}, {3.749971731129519*^9, 3.74997173713617*^9}, 
   3.7504178936035643`*^9},ExpressionUUID->"ae278ed8-7bd3-450d-ac37-\
0c3202cba0a6"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7246499240327177`*^9, 3.724649949776576*^9}, {
   3.724755801211445*^9, 3.724755840971766*^9}, {3.727157997389744*^9, 
   3.7271580091018133`*^9}, {3.742286987167101*^9, 3.742286989334381*^9}, 
   3.7504178955804367`*^9},ExpressionUUID->"f9002fb5-1ad9-47c1-be15-\
254c3be59673"],

Cell[TextData[{
 "Convention of choosing a variable name:\n\tThe variables we define can have \
almost any name, there is no limit on the length of the names. Nevertheless:\n\
\t<a> a variable name can never start with numbers. For example, ",
 StyleBox["xy1",
  FontWeight->"Bold"],
 " is valid as a variable name but not ",
 StyleBox["1xy",
  FontWeight->"Bold"],
 ". \n\t<b> it is a convention to choose a name which starts with lower case \
as our own variable. Variable starting with an upper case might be a built-in \
function name in Wolfram Mathematica. For example, use  ",
 StyleBox["toString",
  FontColor->RGBColor[0, 1, 0]],
 StyleBox[" instead of ",
  FontColor->GrayLevel[0]],
 StyleBox["ToString ",
  FontColor->RGBColor[0, 1, 0]],
 StyleBox["as a variable.",
  FontColor->GrayLevel[0]],
 StyleBox[" ",
  FontColor->RGBColor[0, 1, 0]],
 "\n\t<c> no space, no special symbol (such as \[OpenCurlyDoubleQuote]:\
\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]-\[OpenCurlyDoubleQuote]), \
no underscore (this is different from many other programming languages and \
software packages) is included in a variable name."
}], "Text",
 CellChangeTimes->{
  3.742287006959257*^9, {3.742287067247218*^9, 3.742287097487599*^9}, {
   3.742287175105277*^9, 3.742287189711343*^9}, {3.746342058422497*^9, 
   3.746342178119788*^9}},ExpressionUUID->"45f96e3f-ff3b-46f8-b241-\
8db0ac98d6c8"],

Cell["\<\
The value we assign to a self-chosen variable is \[OpenCurlyQuote]global\
\[CloseCurlyQuote] throughout the whole Mathematica session. That is, the \
value will stay in the memory unless we modify it or remove it. Thus, it is \
always a good practice to get into the habit of clearing the variable.\
\>", "Text",
 CellChangeTimes->{
  3.742287133719089*^9},ExpressionUUID->"a4677b47-3fee-4115-b484-\
6f32faf8a4c1"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.74228719459166*^9, {3.74228770692435*^9, 3.742287707443091*^9}, {
   3.74997182972209*^9, 3.749971832664701*^9}, 
   3.7504179055885553`*^9},ExpressionUUID->"76f3c2b0-20b9-45d9-9dd8-\
60f9f9f2889b"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.749971838728734*^9, 3.7499718396087*^9}, 
   3.7504179070049257`*^9},ExpressionUUID->"a6e23cb7-06be-4d5b-8b74-\
57b5faa25a4a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["<4>. FYI: The major type of tokens the Wolfram \
Language recognises to convert what a user inputs into valid expressions for \
further computation, operation and interpretation:",
 FontSize->16]], "Subsubsection",
 CellChangeTimes->{{3.7247544579992037`*^9, 3.724754541300528*^9}, {
  3.7247546594994507`*^9, 3.7247547516905317`*^9}, {3.724756062954398*^9, 
  3.724756063178364*^9}, {3.7247561606572523`*^9, 3.724756168305509*^9}, {
  3.725949007288951*^9, 3.725949008817027*^9}, {3.727781761931467*^9, 
  3.727781762795198*^9}, {3.742288215981927*^9, 3.7422882173972893`*^9}, {
  3.746342299823645*^9, 
  3.746342302887493*^9}},ExpressionUUID->"65f42f22-1ff2-445d-9afc-\
79cea85f87d3"],

Cell[TextData[{
 Cell[BoxData[GridBox[{
    {
     RowBox[{"Token", " ", "Type"}], "Examples"},
    {
     RowBox[{"Symbols", " ", 
      RowBox[{"(", 
       RowBox[{
       "a", " ", "combination", " ", "of", " ", "characters", " ", "NOT", " ",
         "beginning", " ", "with", " ", "a", " ", "number"}], ")"}]}], 
     RowBox[{"xyz", ",", " ", "Alice15"}]},
    {
     RowBox[{"Strings", " ", 
      RowBox[{"(", 
       RowBox[{
       "anything", " ", "wrapped", " ", "by", " ", "double", " ", "quotes"}], 
       ")"}]}], 
     RowBox[{"\"\<xyz\>\"", ",", " ", "\"\<Alice+15\>\""}]},
    {
     RowBox[{"Numbers", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"integer", "/", "rational"}], "/", "real"}], "/", 
        "complex"}], ")"}]}], 
     RowBox[{"12.34", ",", " ", 
      SuperscriptBox["3.1416", "3"]}]},
    {"Operators", 
     RowBox[{"+", 
      RowBox[{",", " ", "\[GreaterEqual]"}]}]},
    {
     RowBox[{"(*", "comment", "*)"}], 
     RowBox[{
      RowBox[{"(*", 
       RowBox[{
       "anything", " ", "which", " ", "comes", " ", "between", " ", "the", 
        " ", "comment", " ", "symbols"}], "*)"}], " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Note", ":", " ", 
        RowBox[{
        "We", " ", "can", " ", "get", " ", "the", " ", "comment", " ", 
         "symbol", " ", "by", " ", "going", " ", "to", " ", "the", " ", "top",
          " ", "ribbon", " ", "of", " ", "Edit"}]}], " ", "\[Rule]", " ", 
       RowBox[{
        RowBox[{"Un", "/", "Comment"}], " ", "Section", " "}]}]}]}
   },
   GridBoxDividers->{
    "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
     "RowsIndexed" -> {}}]],ExpressionUUID->
  "77106a4f-334c-4950-bc15-03fbb0084713"],
 "\n"
}], "Text",
 CellChangeTimes->{
  3.724754571833995*^9, {3.7247547654736223`*^9, 3.724754765473748*^9}, {
   3.724754805371463*^9, 3.7247551061299667`*^9}, {3.724755144649846*^9, 
   3.7247551893376017`*^9}, {3.724758321883153*^9, 3.724758353754615*^9}, {
   3.725709573530212*^9, 3.725709660610743*^9}, {3.7259490322503843`*^9, 
   3.725949034722391*^9}, 
   3.750417917875204*^9},ExpressionUUID->"52618a17-4c7a-46a2-853a-\
962281275cf3"],

Cell[TextData[{
 StyleBox["Exercises:\n1. Assign 3 to x, 5 to y. Find out the square root of \
(", "Section",
  FontColor->RGBColor[1, 0, 1]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]],ExpressionUUID->
  "3e4dcea1-0c2c-4b74-b010-2dd3f651b358"],
 StyleBox[" times ", "Section",
  FontColor->RGBColor[1, 0, 1]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["y", "3"], TraditionalForm]],ExpressionUUID->
  "d2dddd0a-7733-43b4-89e1-888a1ddb07ad"],
 " ",
 StyleBox[").\n2. Use ", "Section",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["Suggestion Bar", "Section",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[" to find out the ceiling of the integer part of the previous \
calculation.\n3. Clear the variables.", "Section",
  FontColor->RGBColor[1, 0, 1]]
}], "Text",
 CellChangeTimes->{{3.7277819266862373`*^9, 3.7277819325403967`*^9}, {
  3.72778298424855*^9, 3.727782993664941*^9}, {3.728110599426248*^9, 
  3.728110611154294*^9}, {3.7281144542853203`*^9, 3.728114700591199*^9}, {
  3.728115097944723*^9, 3.728115104888805*^9}, {3.72811517648871*^9, 
  3.7281151870097103`*^9}, {3.728115340649686*^9, 3.728115390314515*^9}, {
  3.7281156038269033`*^9, 3.7281156248751163`*^9}, {3.728115658859293*^9, 
  3.728115695299499*^9}, {3.728115749531642*^9, 3.728115802252035*^9}, {
  3.7305322159391193`*^9, 3.730532229995302*^9}, {3.7370952378269*^9, 
  3.737095251282343*^9}, {3.742288433374449*^9, 3.7422884350708237`*^9}, {
  3.74228846561464*^9, 3.742288469710628*^9}, {3.7463424308570547`*^9, 
  3.746342436880851*^9}, {3.749971858265723*^9, 3.74997192053804*^9}, {
  3.749971973162492*^9, 3.749972111402841*^9}, {3.7499722209711103`*^9, 
  3.749972279171155*^9}},ExpressionUUID->"c1c84e57-17af-4f80-b45a-\
68506c46ffc0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Answers:", "Subsection"]], "Subsubsection",
 CellChangeTimes->{{3.72811511084838*^9, 3.72811514411259*^9}, {
  3.7463425828810053`*^9, 
  3.746342584056847*^9}},ExpressionUUID->"00baefce-22e3-477d-9ced-\
6dd8aa3ebfab"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.74254051707026*^9, 3.742540521062592*^9}, {
   3.7499722849801073`*^9, 3.749972295347042*^9}, 
   3.750417934868661*^9},ExpressionUUID->"fccfce03-ea33-4f72-a655-\
664a927d758e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["ii. Wolfram Mathematica built-in functions (more than \
several thousands built-in functions available. No extra/additional toolbox \
is needed): ",
 FontColor->RGBColor[0.5, 0, 0.5]]], "Section",
 CellChangeTimes->{{3.720257891021624*^9, 3.720257901294085*^9}, {
   3.7202601247124166`*^9, 3.720260136824888*^9}, {3.7202606251833572`*^9, 
   3.7202606334880447`*^9}, {3.7202614476591063`*^9, 
   3.7202614873657703`*^9}, {3.7219763958122663`*^9, 3.7219764301342535`*^9}, 
   3.722080693022769*^9, {3.722083120234756*^9, 3.722083120611249*^9}, {
   3.722772384788824*^9, 3.722772392318583*^9}, {3.7227724809177923`*^9, 
   3.722772489054254*^9}, {3.722772717828505*^9, 3.722772739484376*^9}, {
   3.724485577532063*^9, 3.7244855843560762`*^9}, 3.724648120766016*^9, {
   3.72475640337541*^9, 3.7247564123677073`*^9}, {3.742280647037857*^9, 
   3.742280650739451*^9}, {3.746342647041832*^9, 
   3.7463426510255003`*^9}},ExpressionUUID->"cf22e0cf-2771-4483-97bf-\
5a20449a2dc7"],

Cell[CellGroupData[{

Cell["\<\
<1>.Use built-in functions for numerical/symbolic computation\
\>", "Subsection",
 CellChangeTimes->{{3.724486115049395*^9, 3.7244861358491297`*^9}, {
  3.742288663783977*^9, 3.742288684697221*^9}, {3.746249295372116*^9, 
  3.746249332468742*^9}, {3.746249399109335*^9, 3.7462494038496017`*^9}, {
  3.746343108427581*^9, 3.746343138436387*^9}, {3.7463432479329042`*^9, 
  3.746343248436965*^9}},ExpressionUUID->"4615d8f3-9bb3-4712-83d3-\
5038f5d76c50"],

Cell["\<\
What we did previously for arithmetic operation can be expressed using \
Mathematica Built-in function. Built-in function syntax is Built-inName \
[expression]
**The Wolfram Language handles many different kinds of things: mathematical \
formulas, lists, and graphics, to name a few. Although they often look very \
different, the Wolfram Language represents all of these things in one uniform \
way. They are all expressions. \
\>", "Text",
 CellChangeTimes->{{3.749985609623178*^9, 3.749985727351664*^9}, {
  3.7499858951608353`*^9, 3.749985928712792*^9}, {3.749986189266533*^9, 
  3.7499862004910192`*^9}},ExpressionUUID->"dee202c4-3e5b-46a1-b1e3-\
110322efb5d9"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7203488672813597`*^9, 3.7203488705800457`*^9}, {
   3.720348907853869*^9, 3.720348920679768*^9}, {3.7221695231956453`*^9, 
   3.722169534410581*^9}, 3.724655515783902*^9, {3.730527099105585*^9, 
   3.730527115377821*^9}, {3.7305271582913857`*^9, 3.730527166882004*^9}, {
   3.7499857325140247`*^9, 3.7499857781922894`*^9}, {3.749986414149116*^9, 
   3.7499864365882273`*^9}, {3.749986483228405*^9, 3.74998657134903*^9}, 
   3.750417947085495*^9},ExpressionUUID->"670b18a2-f1fd-4172-b08a-\
89a823509a20"],

Cell[TextData[StyleBox["Question: what does Total [ ] do?",
 FontColor->RGBColor[1, 0, 1]]], "Text",
 CellChangeTimes->{{3.7499866312807713`*^9, 3.7499866500292377`*^9}, {
   3.7501428986899853`*^9, 3.7501429005941772`*^9}, 
   3.750417968651575*^9},ExpressionUUID->"6e65eb8a-4931-49a4-b6f8-\
3d4961159ad0"],

Cell["\<\
We can perform symbolic computation using built-in functions as well.\
\>", "Text",
 CellChangeTimes->{{3.7246557420700483`*^9, 3.7246559515571547`*^9}, {
  3.7259519548997107`*^9, 
  3.7259521098261423`*^9}},ExpressionUUID->"1a732a2d-ebd2-4123-8c3a-\
1ed520022d85"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.749986327187446*^9, 3.749986337587323*^9}, 
   3.750417982988243*^9},ExpressionUUID->"415927f6-50fe-4595-9607-\
26e47d1e95e0"],

Cell["\<\
Let\[CloseCurlyQuote]s try another example by using Solve[ ] function to find \
out the value of x in 2x-7==0. However, by default, we still get the answer \
in fraction.\
\>", "Text",
 CellChangeTimes->{{3.7246559751080914`*^9, 3.724656019683929*^9}, {
  3.7259521510257196`*^9, 3.725952245775585*^9}, {3.7259522989449787`*^9, 
  3.725952299569268*^9}, {3.74998638277983*^9, 
  3.749986390091502*^9}},ExpressionUUID->"cd3dd270-b284-48de-b1c7-\
d3810610f8bf"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.741505035159395*^9, 3.74150511203255*^9}, {
   3.741505146368153*^9, 3.741505160856833*^9}, 
   3.750417985325603*^9},ExpressionUUID->"acb8616d-fb64-4907-bb22-\
0155f19f4fac"],

Cell[TextData[StyleBox["Question: how do we receive the answer in numbers \
without using Suggestions Bar or other Assistant Tool?",
 FontColor->RGBColor[1, 0, 1]]], "Text",
 CellChangeTimes->{{3.724656036027776*^9, 3.7246563338818693`*^9}, {
  3.724758103260253*^9, 3.7247582448512897`*^9}, {3.724758297163739*^9, 
  3.7247583079711657`*^9}, {3.7259523192090187`*^9, 3.7259524017451477`*^9}, {
  3.725952452335483*^9, 3.725952457071677*^9}, {3.727158800057641*^9, 
  3.727158801585853*^9}},ExpressionUUID->"efaf54dd-e495-402c-aede-\
17f403a16b28"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.720248522523324*^9, 3.72024864551079*^9}, {
   3.720248812279809*^9, 3.7202488210502853`*^9}, {3.7202495076278906`*^9, 
   3.720249512671836*^9}, {3.7203491505588093`*^9, 3.720349180984185*^9}, 
   3.724656343898018*^9, 3.7499873283224983`*^9, 3.750142932820059*^9, 
   3.750417989581195*^9},ExpressionUUID->"f57d885a-0fe4-4b29-a6ce-\
2932ceb06927"],

Cell["\<\
There is no limit to how many built-in functions we can apply in one block or \
one set of code. The sequence the Wolfram Language evaluates multiple \
built-in functions is inner square brackets --> outer square brackets. \
Nevertheless, it does not necessary mean that all of the built-in functions \
thrown into one chunk will definitely work, we will have to \
\[OpenCurlyQuote]build\[CloseCurlyQuote] the code piece by piece to try how \
it behaves and works (much like using Lego to build a castle!).\
\>", "Text",
 CellChangeTimes->{{3.72595246556322*^9, 3.725952573599536*^9}, {
  3.7271589258429832`*^9, 
  3.7271589331783667`*^9}},ExpressionUUID->"f7987803-b1ae-4ee4-92bc-\
f0b0e0a33ac9"],

Cell[CellGroupData[{

Cell["\<\
<2>. Use built-in functions for data list creation/operation:\
\>", "Subsubsection",
 CellChangeTimes->{{3.746343267255434*^9, 
  3.746343327085403*^9}},ExpressionUUID->"fd7e195b-4962-489e-8752-\
ddd04fe74a51"],

Cell["\<\
There are several useful built-in functions for list creation. We will come \
back to this part later.\
\>", "Text",
 CellChangeTimes->{{3.746343485798245*^9, 3.746343518214596*^9}, {
  3.746344287283283*^9, 
  3.746344298850841*^9}},ExpressionUUID->"1b2f03d1-e223-4b3d-9d06-\
e69ab0734f27"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.749986941847026*^9, 3.7499869568548203`*^9}, 
   3.750418007781184*^9},ExpressionUUID->"a4816968-f4dd-4bfc-8412-\
9cbae4ade59b"],

Cell[TextData[{
 StyleBox["Question: What is the outcome of ",
  FontColor->RGBColor[1, 0, 1]],
 Cell[BoxData[
  FormBox[
   RowBox[{"Table", "  ", "[", " ", 
    SuperscriptBox["x", "2"]}], TraditionalForm]], "Text",
  FontColor->RGBColor[1, 0, 1],ExpressionUUID->
  "55c05bb2-a582-4cb9-a90f-29a5e384016b"],
 StyleBox[", {x, 1, 3} ]?",
  FontColor->RGBColor[1, 0, 1]]
}], "Text",
 CellChangeTimes->{{3.749987565194417*^9, 3.749987597354649*^9}, {
  3.749987698412283*^9, 
  3.7499877261002197`*^9}},ExpressionUUID->"2f07462c-075f-47a4-af67-\
413b95e7cb0d"],

Cell["\<\
Built-in functions can be \[OpenCurlyQuote]nested\[CloseCurlyQuote] within \
another built-in function. For examples, we can visualise the list by calling \
built-in functions such as ListPlot[ ] to create a 2D graphic. 
A 2D graphic usually takes one or two arguments. \
\>", "Text",
 CellChangeTimes->{{3.746344317714752*^9, 3.7463443574672613`*^9}, {
  3.7463444218036947`*^9, 3.746344436619647*^9}, {3.7463447600856657`*^9, 
  3.7463448440381536`*^9}, {3.746344930631301*^9, 3.7463449413586884`*^9}, {
  3.747480797313031*^9, 3.747480832769122*^9}, {3.747650671737253*^9, 
  3.7476507069617853`*^9}},ExpressionUUID->"a72cc23a-1932-40ae-b0d4-\
2be7f45b86d9"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.746249413673223*^9, 3.746249697544306*^9}, {
  3.7474027567146907`*^9, 3.747402761834203*^9}, {3.747649477137425*^9, 
  3.747649485907414*^9}, {3.7499877442050867`*^9, 3.749987746116206*^9}, {
  3.750418127342804*^9, 
  3.750418134916404*^9}},ExpressionUUID->"07b0fc2d-9a57-4280-ad95-\
7bcf8f979093"],

Cell["\<\
A large number of 2D Plot [ ] built-in functions have 3D counterparts.\
\>", "Text",
 CellChangeTimes->{{3.750418036627606*^9, 
  3.750418117300144*^9}},ExpressionUUID->"d3d44d6f-ab1d-4240-a7d4-\
37e780447629"],

Cell[BoxData[""], "Input",ExpressionUUID->"04d40053-7989-4fac-8283-ed6c4d13cd07"],

Cell[TextData[StyleBox["Question: How many different plotting-related \
built-in functions are available in Wolfram Mathematica? How do we find out \
the information?",
 FontColor->RGBColor[1, 0, 1]]], "Text",
 CellChangeTimes->{{3.722081083135373*^9, 3.722081120898704*^9}, {
  3.722081151289144*^9, 3.722081177899003*^9}, {3.72208165633468*^9, 
  3.7220816719509907`*^9}, {3.7220820357315598`*^9, 3.722082037123877*^9}, {
  3.724756460623413*^9, 3.724756468831236*^9}, {3.724759238148986*^9, 
  3.724759238972661*^9}, {3.727159322620338*^9, 3.727159326972209*^9}, {
  3.747650076701786*^9, 
  3.7476500784265757`*^9}},ExpressionUUID->"1f87ce9b-68b9-487a-839f-\
5643dace0c3e"],

Cell[TextData[{
 "1. Press F1 for Help (Alternatively, Help at the top menu as well):\n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsnQe4HVW5/rn3/u+9ihT1SlGwlyuKYgGUoqhgQUUpFiTgBRJClRp6770Z
CEV6DTV0AiFACL2F0EMNhPTk9N7Wf95vzpqz9uwpa9pu553n+SVnz56yZs3M
2t+7vm9968u77rft+H9fYYUVDvqY88+2uxz68wMP3OXw7T7pfPjzvgftufu+
u43bct8Ju+2+24E/3vU/nJUvO//s6PD/nL+bly5UhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIXmzwgorVL0M9VQuUr+Yz1Q9P1/1XHZeM+uolmikOmukayGE
kHoBba8f87ugvytZlrjzVqK81fx9yvs6ktRtvV4nuPnG69S63/62+q//+k/1
5S99SV048bxUZcmrXI898pD65Rabq5VXXln993//t9pgg/XV1VdeVtU6rfZz
XcTzWPR7XwvvjFlfn/70p9SWv/m1eumFZwqpo1qtg3XW+aZ66IH7vM+L53+o
PvnJVdWSBR966/D9t9ZZJ5cy18I1R5Uj6z0lhBBSLLZtb6X0Vl77UG/V1nVU
smwzH31IfeZ//kddd/WV6qO576gXn3tK7bD9X1OVJY9yPTXzUbXaZz6jzjr9
VPXGK7PUwo/mqgfuu0v9/ndb1k2d1kvZRsP7YpbrnTmvqf333Uf9+EcbFnJd
taq3jjnycDV+3Fjv87T775FyTZt6r7dut3G7qmOPPrKhngXqLUIIqU+i2t4w
u3P54vnqyMMPVV/4/OelT3HM37ZX8z94t9CyAPRhjt11Z/WpT31Srb7aaur4
Y48OLGORfeb4+5wzT1ef//za4qdYf/0fqicfe8T7/o7bblbf/c668h22Of/c
s6zrDcc++cTj1ec+91n1b//2bxXt+180/wO1x/jdpF4B/sa6sLLpdbieVVdd
Ra2++urqhmuvEjsI92ettT6n7r1rirf/c08/of7w+9/Jd/DxQGvAVizifm39
h63kHoV9b3MfbJ9JG7b54x/UiccfG3tv/PUbVWd6n+OOOUq0HLYZN3YXeUds
n1Xz2pYunKcOPugAtfbaa8n9NMsb9Uzn/SxCK3/pi19UTUsWeOvwN9Y9PmO6
VZ1EncNcl+aZNP+2eWei6j+vuvvwvbfUiiuuaHVd/v2j3oWgOgirl7h3Ku9n
aPaLz0qd47nFZzyv8GWfdMJx3vOM71+Z9XzgcxF1X+J+Z6Lu+1e+/GX17FOP
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
K71Ax+FYUbZomJ4KykkYpEH0eXQZzJwApr9A5wzwj2XB56j8H+bxUVf+a0Q5
zRgwnMNcUJ40eiWt3kpznfp88LPoz/7rjLsOXLvW5FGLaVPYXGecZkh7X/X5
zeclbPE/m7hWHYvnv7Y0Nrp+Zsx+Du1PztLnrf1mcX0kYc9e1LWE+bu13ei/
FyiDeTwzhjloCbrfKFvQscPaJP9zjfr132/TBgoqu/l+50U19RbGtsBeDfve
jD3UMVv4G+tsbDiMpYGm02PG9Ni8oLLFlTnKRjWPie30+fA/zm/aqvvvv7+s
09eD89poTn0tel8cG/uF1YN+V/E9ttNl0vURlMMB5dRlCsLcFrpA+3b814tr
DLrX+C7ouP56jbsXKCfGS+l9db3E+cbT1InNPcn6vpjlQf3r6wkbw2bGA+I+
6LFjYc9cmntgHlt/r8sXdm9Q//oe6GdD58vJWkeENDJF5oPXtqG/fdR2D/7X
2itoDJdegt57//gv3Z7oBTZZmO2mlyx6S++v7S/sa57TLJ/+Hpj2cpx/TWtR
8/imTYZ60cfzXz/WJ7HZ0uqttNdp+hi07W/uH3cdWKfrQ+fVA+a+Qb8xWfVW
lvuq7ycWXDOOj7Lpfc3n2HzmzWs1r0vvh/+Tai5dFq0LzJycWWx9s37CNEkQ
WpNE7aPrwNwG123Wn65TfTzTftTXGLb477d5v/S9Me9DkH0R9Fz785Hoc8W9
32nvQRDV1FuwM7FtkG2IdTq/m+l/0DZgmE2pwTZBtiFs2KA4xqx6C/Yyzoft
zGObcZM6d515Pfo6o7QC9sOxzevVORqwPuwe4Frxvd9u1zkAw643zr+F8mvd
678HOFfYPY2rR5t7ocvur2dsj2vFsaM0aNo6CXvGsuadQFlRHhzLLLfWvkHH
1/dH5+LwlzkuVtfmHoQ9l9DSWB+kqbGtrhPbPhFCSLF6S9ut/nde94Hr9kPb
S6bNaOYv9JfZjFX022c4hrZbwsZ96SVtPKFpg5n5BvzlwHX52zFzbq+48mHx
++r89r5fV5r1lmSMTFq9lfY6zfNp+9P8Pu46tO2Me+Cvf/18BdnuWfVW2us1
c1H4y6WvVfs0/ejr8d9r07epdZMt2FcvZrmzxswEaUObuRz0cx2WO8f0l5t1
EDVeDMcM0qH62YmyNc3nz3+/8Azpe+mvL/9z7d9X30u9f9T7nWdsYTX1Fgjz
h8COjMoJrjVI0Hew96LG1AStz6q3tP0bdo0g7Hqi/Hw4b1QuhiDtoK8nKicJ
ygLbOOwZj9P1cVo37Fqz6C2t88LqWWuXMA2UpU7C6j5rrnfURVhd6ev1l1ff
n6jnIso/FncPdJxk2LVpzRV0XN1HkqVOCBltFKm3wuwanZ9Mf9Y2iGnD6r7f
oN8D3U8cFrNk9nkH2Xp6yUNvpfEFRGlJ8/hh16evLUzrZY3pyuvZirpO83xh
ujDqOqL8Ifq8cTovrNxpxyBFXa/py4i6Vv/zavpQg+xvU8cltc/1ObHg77Bn
WY89sj2+X3PpdwX1GXYOU/8F2WBh7UGae2Wjt8L6ivzH8D+bcc+1+YzEvd95
5hSptt5CPfqvR+uPqP7xMJsQNmpSP4VNmW38W2H7RmlDs8z+cUQ244N0jFjQ
9QTp2Lj99LOYxY8adewsekv7B6P21WUPGpOVpU7SPDNx6Nz3cXkN/XpMX2PS
/Wzvgc09Qj353z3sF1b3hJBwitRbQbattjfM/njdp2vaH7rf2t8ehPVz+9H9
/kE2jV6y6q0s9lDUOeLOH2dj2tiTfiqde9/mfFHXYXuP0lxnlpwPYeWKuyf6
e/85o55j/zZJ5gT3j/mL2jfMlxNH0NglHCusXnWZgmyAoD4Zc58kfR9x98Km
jdHb+DW9zfMV9+wWkXOkFvWWbZwWtvH3pacdU5NVb0W1+Wk1ho39r7Va0vjI
KE2VVW9F7Z9Fb4XFsfmJ8vmlrZM0z0wcUZrIfAb8Wt2mnFH1HHcPgrRUUNn9
7yjzHhKSjiL1ltln7R/XZPolgsZwaZvD//um+7nD4o5stouzd7J+7wf1AHtW
jy8y+/4bSW8luc6seivKf6mfuyBfUp56K8n1xs1toPsX/P46fcwoPRSm1cIw
x8uZ47aCbAoduxv3vsU9W/6xkVG+R/99M9sRv6Yyfdn4H/UY54eLez/0NcfN
QxH0HFFvBROkVWzsPRCkR2xs2DRlrobegj1rozuD9q2k3tLz+urr1Dk38qyL
MB9gEGHPQK3pLdRTnH4MKlORekuPqYwbexV0DOotQtJRpN4Cun9b24u6n9pv
a/jnWQ3rU7fVElF2T5y9k/V7jc5jZy7mOPqwY2S1xyqtt9JcZ1a9FTVuSWub
oO/yzE+Y5Hqj8nXimdfvif+7JIuNfa61hKmvtNYLik8N6/dIA+rA1F1B5fW3
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
F2xPCCF5Qb1FCGkU2J4QQvKC7QkhJC+otwghjQLbE0JIXrA9IYTkBfUWIaRR
YHtCCMkLtieEkLyg3iKENApsTwghecH2hBCSF9RbhJBGge1JfnTddYoamPeK
aj7gS4Ucv/u+s9RQT0fdlJeMPtieEELyol71Vtvpv1J9s+9XQ53NaqivWw18
OFt13jhBLR+3UtXqsuPy3RSW5oO+WvX7SshoJGl7ot9ZWYaG1FBHk+p7/WHV
fsnfU52/ac/PyKFaT/pp5mvRZet59LLA76FXsHTeelQhddnz8MVqqG2pap7w
9UKOn1ZvhdVx0eUlow/qLUIaj6Y9/0c1H/BF1XzIN9Xy3Vau2HnrUW913nCQ
Uv29qvOWI1Xz/l9QTXt8SrVP2kENLnlPtRz27ardQ+otQqpLWr0l7+y4T4it
3nnTYWqo12m7nrgu8flxnFz11uCAaMCg34TBpXML1VtFk1Zv5VnHpLFpOer7
Yhu0nbOVWj5+1cT7U28RUmeM/bhq2nsN+Z1oOXI91Xr8j1Xrqb9QbWf9zmkH
/qDazv69fG45ZgPVPvHPsq7luA2d9mGVwstWb3oLdQcbpOOaf5R/79hL1bzP
1FuEVJdMestY33b+drIe3yc5XsvRP8xVbw0seksNti6W8pjftZ68mWjCgY9e
HXV6K886Jg3MuJVU+8U7ia8atByzfuJjUG8RUmOMX1U17/958U21HPUD1XrC
xhLv1nbuH109deZvVOuJm6iWI76rmg/+huuT2Ws1R4etWHYsbI/1zYf8r/wN
fZGmX8aWetNbvU9PVoPLPwysOz+tJ26q+l5/ROwS9BGjv9of24/ffGzTevxG
qn/ui862naKJZX/nPva98ajEKw62LHK2PTsyXtFGb+HY3dMnqYHF7yjV3yM+
uc5bjigrU/+bj8mz1PfaQ1Im9GV3XLVn+Tmv3kcNzH/d0aD9ylz6XnnQra9n
blEDC+eUlQELtH2SctmcL029EZIXeekt0P/uM06bMMv7HPeOdN97Ztl70T39
Iqt9w8o22LxA9ut95uaS77qnXaB6n73V0WNvl+itPNsXvx6S/ebMdHTOT+R/
eb+dtrjzpkNL9rNtc4L0VpY6Djqe7W+AbXtL6gBtP53x6xK9Bdsr6bGotwip
LE27f1I1H/hliVVrOXZD1XrKz13f1Hlbu76p0zYXf1TL4euq5glfU037fk72
SXMu0Vv689iPy/HgC4cNm/aYUdSb3hpsXaJ6Zl4dux1+Z/F7DbtEfIsTvi42
An6/m/ZZ09sOv7WDTR+pvpfukd/6pj0+LfWO+oY9gTHYuJ/wPQ4seFN13XN6
6Dlt9Bba/Z7HrpTfdomDdOwPp/JU+wV/KSnTUE+7lBfPFcYrdE+bKNs1H7rO
yPkc7YMy4jnENh1X7y3boO9bb2Nr+9iUy+Z8aeqNkLzIU2/hmcXzLW3Crnbv
SNtZvw30vdjsG1Q2jE9tPeVnogEQcy7fOfbkYMtCOQb6M0y9lWf7EqS38G5D
v+B3EMeX2O6hIWkb9HZZ9FaWOvYfL8lvgE19kNoDfdcSG4Tf7v3Wlmei/Z9/
cu2lfddy7vvq8qzKOI0Ux6feIqSyaD9V82HfEt3VtM8ahfmccK6g9c0HfcXV
Xc5viP79z4O60ltOnWOBLR+3bf/bT5X0TUsdOm0zfn9N21/GnA/2y9i5kv3f
ekL1vTy19N6cv537ex5y79PGE/a//aTYKGaZYNfA3vDK7jx3Et90xfiR/ea+
WLKfu26W6n7gfO+zre1jUy6b86WpN0LyIk+91Xnd/u53Ef3i/nckTAvY7BtU
NrQD6P8ZXPq+ar90Z/ccZ/5GDbUvlzFd0GNx8YRp25dAvdXbVear7nt1mvSp
6M9Z9FaWOvYfL8lvgE19kBpj/Cqq/aIxnv8KfeB6HGZe56DeIqSy4PcNvumW
w79T/LlC9JYGsRD4vcFvjdffmYG61Ft3nxq5XdM/Pit9rl23H1v2HeLckMtQ
fw76zUffp/TZXrF7ad0P/wa3HPm9wPPa6i30w3VOPlj1zb5PDS6fJ+fqf+fp
yDKhT1uu/dajvXX97z2nep+7vWQ7XFv31HO9z0n0Vly54s6Xtt5I7YO+prYz
txTtDP8m+n3kWXLaRG3vmCQ9fh7HAPnqrQPc74x8d3HvSJTeits3sGyONsDf
XXefJvvh755H/+XF0A11tZTprbzal0C9FaCPum4/TnxBOqdHVr2Vto7N42X9
DQiqD1JbIN7HbC+K8EVSbxFSWRA/CFuy9fRfyhisLMeSPIQYwxVik5fEE0aA
fjrYP4g1kbFgKctTV3rLYah9mep54trIbXCPpG/yyj3Kvut96kaJxdGfA8cQ
DO8ftqDOg85ro7fgoxzqbhP7AdvDjkVee/iOosoE5PffsW305/Z/7SJ5GmHD
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
vjr6Ct+hr0H8VI7Wknm3tLZy1kNb+TUYcmR4ektywm8hWhq/37C5Ze7joJz5
IZTEM1pSj3oL/R/io3XsJBmXibGp+64Vfw+de4IxoIhPxfbwqWMMP+bHQKyn
3q75oK9WRfdU67yEhJFVb6Fd88+9g76nqLjCSuuttO2JBv2j6LdBzIa/TzJv
mJOd1BNZ9VDR38dBvUWKhm16OeJzcvQS5n2T/x19hVhQ2OuIkRF9dfGOkocQ
vinJjeFoJ52LS8ZrnfQTt6/X8Hmhn1drMvkeOuyY9eU7N4/GerF+NQH5EZ3z
Jb2uetRbA/NfkzGd+BvxrZhfwMY+knneW5eUf+fTtLi/1dA91TovIWFk0Vva
n++fTxK+ZLSHYXkKK6230rYnGoz3xriI/jcfkziTIu8Hf5tJPVFtPUW9RWod
tunllMyVPqyNoLkQnwY/FWxk5EMR3YUxCsPboL9T582QnPDnbV0aQzjc/6t1
lvx90Rj5vYfPBTYL/Fxx82ohbidN32o96i3Mudv38lSpY8y9a87dHgXiUmWO
8oi5BbrvPVP6qc2le/pF3nuBOGPkOUH8LWJhoYeTzEco8Yyz7xP/MeIZMe4V
9z3qvLbHDysfvoMdiT58XL/U2X1nJ86tQkYfafWWq6n+5j6f41cp28/L3Row
D1el9Vba9kSuYziWEH1s8HMFxRTivYQWQ4xD32sPyXsJn7o/bhHvKsZMY4yB
nk+885Yjyo5l/jajTZM+JF+fEcYmSFu312oyBrrvpXskXhLtDuKp9Rw0QceM
254QW6qtp6i3SK1DvRUMbFbE/EEHQUNBT4nW0nkHHZ2lY2VEPzm/wS1HfX9E
Xzl6DNqp5LO5vTGeS+bjOmcrV9M59jhyD0blUYEPLM2cgvWotzBOTZb+Xhnr
Z73f6b+SvmvE/gTNTe1tFzF3BOZjgC0C20jGnzi2la0eQnsPWwu5XzA2HWCs
evOh60SeN4neCiofngvYXjgX+g2Qv2BgwZuq657Tq/5Okdomrd6S3BjwX4WN
CXKeS7Rp0g76cgZXWm+lbU+AaCxHO7nlXtd9fwPHOber/jkzpb8F4zS7p02U
XMP63Qe45p7HrpR2XvSq825jG/yulB7LyO914iZyTn8sOfpx9Fh99L1AM+Hd
x+9J150nl9yv8vzB0dsTYku19RT1FiF1ym4ru34r5L44+oeu3nI0FWIMxXdl
+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
FiEkL6i3CCGNAtsTQkheUG8RQvKCeosQ0iiwPSGE5AX1FiEkL6i3CCGNAtsT
QkheUG8RQvKCeosQkojdVlZN+6xZum7sx1XLYd9WzYd8s2z7liO/p9on7aDa
zvmDatr9k4WWrR7bk+77zlJDPR2FHq/rrlPUwLxXVPMBX6r69dY7rMvRA/UW
ISQvqLcIIUloO/1Xqv3inVTTvp/z1rWesLFqPf2Xqu3M36iWY9Yf2X7sio7W
+ptaPn5V1XLcj1TL0T8stGxp2pOW4zZUfS/dq4balqqh3i418OFs1XnrUapp
j09VpD4robd6Hr5Yrq95wtdTHxf3u/eZm9VQZ7MabF6gOq7a02q/jst3U1g6
bzqs/DvnGFiK1uF5kkddkvqAeouQ6jL/+rXV8sd2F5Y+8IfQ7Rbf/TNvu0VT
fhS63dJpf5Jtlj30l+DzXbeWWjD5a3LevK+FeosQ4qd5/8+rpj3/J/A7+LGg
q5aPX0X0VPMh/6vaL/ir2OPNB31VtZ37R/e74e3bzttatR7/Y1nfPOFrhZY7
aXvScsR3HW3SrrruOcMp/1pyzdCHg0vnqtZTflaRuq6E3sqDnievV31vPCr3
ue2s3yo1OCB1Fref1lvQaf7t61FvkdED9RYh1QfaSLTUozuHbzP9b57eWjJ1
q8Bt5l/3Oef78bLN4nt+UfLdgpu/OazFxg8fZ7x8XjD567ldB/UWIcSk9aSf
Suxf+8Q/O7rrC+76cZ8Q31TLUT9wNZajx7Bd+4Xbi+0N3xV0CuIGBWc9NBbs
6KY9Pi37tV80RmKwTL9Y3iRtT+CrGGxdUv6dc72Vqm9XH7XnfLz89dbA/NdU
502Hus/ICRs7AmrIWm8NLp+n+ufOkvou+Y56i9Qw1FuEVJ/Fd23qaakFN32j
7Pv513/e/X7GrsO6bJfA4yy85dsjx7l5nZH1t33fWbebs/9Y51w/VQtv/a5a
dMeP1bJH/q4W3blJbtdBvUUIMYEuEn11+Lqq/YK/iC8Lvinoq9ZTfi66qu38
bWVcVtOen5F9mg/+hmzXtPca4utqPnQdscmxbeuJm7jr//kn1X7J312cv/1j
wMQ/dti3ZHxY2rIn1luPXKqG+rrLx6P5thFN5tNgHdf8w913r9VE4/S/+Zjo
zv63n5T1A4veFt9e0z8+q3pmXqWGulpFd3Ref2DJcUQfdTY7+nQj1T9npuw7
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
Ouc62vihrhbV8+i/ZF/kK8lLb8m2x28kvjm067iu/nefkfwdUcfPoy5JMNIH
hDYn5N3Tz3YldWxSveX6oZaWfyf94SOf0U9fz1qgr/lN1fL8sfI38mg7gqvm
9Fa91zEJYiQv/OK7N1OL7ty0bDyXZtn07d1chFM29PxiZhyiH2g39B3oHIai
ve7/rfhJy449ivTWYPMC6Zfsfebm0t/BaReo3mdvFdvJ1FsyR6WzPWwE2DKI
00EfdllbHjFnpfzGti+TOCzMuYPfW/jS/OOk/b/F3pycR/1A9b32kPweB+0H
4ubfDKoLG70Vd1yb+oma+9Pm+rLUC/q5B+a/Ln3I5hIXD0QingnHFtTPNsYG
YTxWkH4K2lfGbJX5t3Zyx1ydt/VwDOC2EruId0r8B3utJv+LVpu0gzw78HVJ
3nhHT6FPG2OAYE/Bj4bzyBzKmPfL0Ya211X0eFDktMOzavqOCCEjoE8FbUfg
/GO7rezGF6Nvxml3vPWOxoafEO2QzHMWduwIvYU+AX3s0N/NcZ/wtjHzj4aR
WG/NuUoNDfSUzZtq0vbK+Y48Kf0t07qj7dV/qp6Fj6nF926h+pa95GzWJbmr
sX6ov3PkGNhu0ROOHbmp6lnwqGwHH1pQXF/z0xNUf8ubZefsnv+wfL/w9h+q
7nlTJTZwqK9dYiGD7FeTrrl3qu6PHpK5ZQe6Fqv21yYltj3j9BZ0HHxoqE85
x6sTHd36Wfc7xw6GxmuauefI9lO3kuvCGJ+oOib1zZKpvxueQ+uPMheX9nX5
t4Mek3FZU38/rKN2l1jf2HM4zxh8Yh9du0boNqNJb6EvEuP8S+wexPq0LJT+
T2gKU2+hfe557Eqx7aUPzdkG8Tsyzn94m7g5K905cjplrhXEmMN+7J42UY5j
/q4E6Qr0n2I/2J7opw3az2b+zaC6iNNbNse1qZ/ouT/jry9tvUBrofywu7FN
x9V7yzahY4tIPPBnwa5B7owjvuvmvnDqHO+U69faQQjKWQjkGfHlGtS56mBP
IV4RQCdB02Hsljt3146iwRC7hePjnuJ5FLsnwCcGn4Hki09wbUXrLYyn6pl5
dfXvISE1Cvyt0i5cNKasXwLtgcy7d+4fS2IGxa/ttA9x+ZQi/VvjV/XiosP8
4V5OVsQqW/SZJNVbmEcVOgBjtmD/h26HGLwA3wt01EDnfNE/0Fli912zeqDe
Qtxiz6InxYZEH3z7G5fIbyPmH9LbQWtBryyb/jfZpvmpg2QbzGWkt4Gug8ZC
bODC276n2mafGWtLQtNgGRrsVS0vHJfKbo7SW9BaKDfyhKBcsJ37W95ydNS5
3jadb18nY8e0/6F3ybOq+8P7Y+uY1DcLb/+B6396dBd37FbAfFwAOeNLtpM8
8t9Mdc4Fk78mPrJFd24i4zCXTd9h9Ogtx/5GWz249H0v3h5j8BEzAnsPeiwu
nhCxNsg77H2OmbNSxlj095bYoHq+lqgYFG9OTj22JWQ/m/k3g+oiTm+lOW5Q
/UTO/WlxfanrZe6LJeVw181S3Q+cX4it0OhIvgr4oBy7RGIFz99WxpvgO/it
9HghxPZJTvaAcRTom0BfNGwa2E/mM4E4LokBFL9UaW4UiWF07CyxmWBbRfll
x68imkzmnsLYsX3Xsrq+QvQWxvTv8WnJE49nGDGI1b6PhNQyiAl053wYiQ10
4wV3cMd6Gr4tyYXq6J9Af5iPuHhCnfcnLCfPyPdbWl1HmnwZsOsQUygxGMtn
q6bH9y6LJ4zSW/DL+PvrA/WWo0fMHByYr1Vic5/Y11sHLdX1/pSSY6FMnj/q
2s/K2KuW54+xtz0dm7Vv+Styrt7Fz5TZuq0vnFCi58KI0lu9i58W/5m5Dj4F
1AHmrZVyODpssKdJxsote2QnqQ/46uLqmNQ2mBsL46kw9jHw+xu+4I3NEj/X
g9sGHwu5NGaMG9nW0V36WcX4Lv1OSj/DreuVvEsmGJOJGEOcB35VPGs41mjR
W4h5w98YP4D4P/yNGP/u6RfJ34j59+st2Gydkw+W7QeXz5P5dXT+MZs5KwNj
+ceuKO+zmaM52I8TvZ/t/JuBdRGht5IcN6p+Qq+j4HoByMeGPNzmdsgF1j31
3MJshUZGcmDs/3k3jg/jt4ycM4jrM/uXJb7PmGdLnh3kd8cYGnOOHKOPQufg
wLPl+bz0vs553VzzPxGthuO4+QHL+zhkLBdyGjrHcmMQ/2Z1fUXoLdhmMmbp
g9nin6v2PSSk1sF4PLyz4kcazuWitY7ZLqDvRvvCpB8IYzcdZM6KgOPG6S34
7L38PeaYQAC/PvzsyM9qoe1A2nzwsN2anzpQ9TW7OWWge8w5WqP0lqmrwtYH
bnftGnLM1hdP8tb1Ln1Bdc29q2Q7+N7aX7vQ+9z1wT1yrNZZp5SUMQxoLOhJ
2LLQas1PH+x9t+TeX0kZ4AeIO06Y3kIspsQKPrlfyXqtJ81jY5uhgV7V3z5X
fGHm9tRb9YmeT2vRlA1Ct0FOi6UP/EGAvytsu8V3/8zbDj5SvR5xsHhWJb88
/F/D+Qmhrcz93bmTx0vcrl4Hvb/80Z1Hnd6SOVngc3La88HWJd74ZL/egh2J
MVnQD9gf/dMYJw3fiW7Dxa8SMWdlmN4QfWDMvWKlK3z72c6/GVgXEXrL9rhx
9RN1HUXWC2j/1y7uPLOObS7xhJiL1rn/YbnQSDSYs1by/WFslWnTIBYH/iQj
DzN8OjJf8bD/S+e8MH1Nbh7BHb2cDZK7EGPBYO8Mj8MSMD4DPi9j3i1oNunb
duwr7SNDrCGeW9F+juaSYzqaD/GJNtdXL/P5EdLoQNOIL+ms37rzRGBcJ+bM
NtoYmcPvmPXL0P0+QXl5wnL16GPifKLrfP2UMn87tnfap7A4Fj/Z599aXfQI
9EPnuzd56wvRWw7yuz7rVO9z0+N7Sswf+uQlntApC/RJqf24tuSrH+iYJ761
zncmh44/g92KBfFUI+Xo8MZ7db59vcT12dRNmN6CzRu1mHkeF9y8zvA4raEy
nyD1Vn1io7eyAr0FzQS/lqy7dg3RX5K/8MYve9vhPcF2fh/uaBq/pfUWgCZA
Hl5zfky/3kIO575XHihpY+HH0XrCZs7KInWF7fybgXURobdsjxtXP1HXUbTe
go8O48YG5r8mOUz633veOhaEBDwTjmbC+EM957Fej2fIi8ExYgjhh5L8gIev
KznT/bpH/FQXjSkdew4ddfovS7aV/XU+RB/IQSP5CDFe3hgXJmM8qjTfMSEk
OzK/Od5lR2eJrytkTGgY6As1aT31F66W8q0vifOHDx7ndNqtkmMNjx0z55GL
I7vecumZ/4jqb3vf+1wpvQXdhPFgyCeIucB6l70YEX+1hvTzI29G90cPBm6D
fBxYtE2Kvn7oq8HuJeIHwNgwjGGzqZNQ/9ZN35BzND25f+wxoA17lzznXOMC
yQ1pfke9VZ9USm9hjKC5DnNtub6sn3rr8OyM9nzwpt7qvHFCmY1eorfGryrf
d163f8lxkPPZ1BNxc1YWrSts5t8MrIsIvWV1XMv6qZbekpyTvvFbJH8Q6yM+
Q/i5Ltze07SS28L5LPOQIqbPch5SyXnoaCjEDomdA7+Y6e/yb4/zBPRbtxy7
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
G7M5pMaGojmz9m2O5r2KjZPj86nMMzUyEJxYtaDGH9eyfys87vCvPmn5Wegs
cqysLn68vaF2ZdtTx3pDnTQYnFj+K/ND0vZkPCZ+SfxjfCaXp0Y8J34p9znZ
ZvSW71bprXr7pn++YtcFpLdEJyO9JURnE82RdXbtfMXMlXXtC4Ij93+gZo5k
OHD9nwW9d7x2SqudZ34z1ktvCSG6DeLxrObgV144vT7ULwNf+aOq3CGfdLM9
MU0SaqZ2t0MIESG9JUTnQgwgsYTEBNbb5tDiV0T5YDf//dS6yB9GTXjm1uq5
9vlB39KPVPQWNTcO3vDiSnyhA/1VmyN2RrSt5t8SQrSZiuZqsc57VrrZntTz
AQkh2oP0lhCdi9Nb6CX8WTXvL/iDaG6uFZ+azs+64S/NHxbP6YrrrZlEeksI
MZPY3MaXnGnz4M70ubrZnkhvCdFZSG8J0dkQyxfNt/Ux+x8/1qFb/tHqYTAH
MsTn4cJHdXTFudE8yPOfE/Te9oqonrz0lhCiBJDPg+Y69t2XWl34RvXXW6Gb
7Yn0lhCdhfSWEJ3PwRv/Kjh8zzvNb0UuFhqLeMFDi19u8YHJ7albiM8LjUY9
+d7bXhUcvOmvZ7yd0ltCiNlg6P+92fQWtTTicyb7RPZECOEL6S0hhC+kt4QQ
swH14cnnYu6tmpp7npA9EUL4QnpLCOEL6S0hxGzAHE7UK2deY+ZqmolzyJ4I
IXwhvSWE8IX0lhCiLMieCCF8Ib0lhPCF9JYQoizIngghfCG9JYTwhfSWEKIs
yJ4IIXwhvSWE8IX0lhCiLMieCCF8Ib0lhPCF9JYQoizIngghfCG9JYTwhfSW
EKIsyJ4IIXwhvSWE8IX0lhCiLMieCCF8Ib0lhPCF9JYQoizIngghfCG9JYTw
hfSWEKIsyJ4IIXwhvSWE8IX0lhCiLMieCCF8Ib0lhPCF9JYQoizIngghfCG9
JYTwhfSWEKIsyJ4IIXwhvSWE8IX0lhCiLMieCCF8Ib0lhPCF9JYQoizInggh
fCG9JYTwhfSWEKIsyJ4IIXwhvSWE8IX0lhCiLMieCCF8Ib0lhPCF9JYQoizI
ngghfCG9JYTwRSfoLSGEEEIIIYSY68yU3mq35hRClAPZEyGEL2RPhBC+kN4S
QpQF2RMhhC9kT4QQvpDeEkKUBdkTIYQvZE+EEL6Q3hJClAXZEyGEL2RPhBC+
kN4SQpQF2RMhhC9kT4QQvpDeEkKUBdkTIYQvZE+EEL6Q3hJClAXZEyGEL2RP
hBC+kN4SQpQF2RMhhC9kT4QQvpDeEkKUBdkTIYQvZE+EEL6Q3hJClAXZEyGE
L2RPhBC+kN4SQpQF2RMhhC9kT4QQvpDeEkKUBdkTIYQvZE+EEL6Q3hJClAXZ
EyGEL2RPhBC+kN4SQpQF2RMhhC9kT4QQvpDeEkKUBdkTIYQvZE+EEL6Q3hJC
lAXZEyGEL2RPhBC+kN4SQpQF2RMhhC9kT4QQvpDeEkKUBdkTIYQvZE+EEL6Q
3hJClAXZEyGEL2RPhBC+kN4SQvji4A1/GRx98PyQT09xfnDw5r+dtfPLnggh
fCF7IoTwhfSWEMIXh26dF/Te8fq6r2ca2RMhhC9kT4QQvpDeEkL4QnpLCFEW
ZE+EKCf0Sw7e8OJZPaf0lhDCF9JbQoiyIHsiRPk4sOgvgqMPXhD0LfnQrJ5X
eksI4YsDi14UHF1x3nT+Vvj/wRv/z6ydX/ZECOEL2RMhykXPNc8N+h74RNg3
+VTUP7npr2ft3NJbQgivzH925X9qZRy86W9m7dyyJ0IIX8ieCNHZ0L84fPdb
w37HczJtz7aMBR++681B7+2vDvqWfmTW2iq9JYTwRc+1Lwj6ln2s8vrQLf9o
fvvDd70lsz1sBdkTIWaf6XqkEe1uj6/2yZ4I0dmQs8Az3bfsLIsTbLQtvixn
Aw4s/KOgZ8Fzg6Mrzp21GsrSW0IIX2C3Dt/z9srrQzf/fcW+9S37eHDg+j+d
0fPLnggx+8Q1DP+Ts9lJJNuX9XPJngjR2fTe9qrgyL3vtjFd5p/pveN14foz
arbrWfAHwdHln7Q4wiP3vz+2/yurxohnEuktIYQv8NEfuuUfKq/x9Tu9hV2c
aR+X7IkQs09SzzDm3ElIbwlRTg7f+aaQN9r/5r9afk7Qt/RM81/Ftzty73tC
nfUB01txfxb5XOiwQ7e8pObYPdc+P3z/97y1VXpLCOEL8lCxUe71wRv/Kui9
/TUWM83fmT6/7IkQs4/iCYUQ7eDwPe+IxnKnXvcs+P1QW73L4gQPLX65rUNL
oal6b3uF9VGS/i+2Ix6x59rnWUwO/RXicbAVrPPVVuktIYQPotyts+q89zwb
dyJeeibbIHsiRHuY7bkfZqN9sidCdDbEBvJsJ9ebxgo1V+TTIkfr78zv1XvH
ayvboM1MX93zzljew1nmL+u98w1T2sxfW6W3hBA+SOZuJTE/151vmtE2yJ4I
0R6kt4QQsw25V/VqIDMGfOS+903ldUV5nPiyyHvoW/rRaA6uB86y1xwjHpsT
5YW9y2tbpbeEED5I5m4lieKkz6myab6RPRGiPWTVMweu/zPLUac/c2DRn3dc
++LIngjRYcx/VtCz8A+Dgzf876j+8YpzU+sSorXQUNTPqJoTdPnZVluD8WG2
qXcedBp2ymfbpbdaY+iJXwSnT460vR1zCa75qYljbW+HiMBPb/74UEthAxtt
a2NLDXxgrZLXnvQ//PmAZTbnZBaijDTTM+SdU0csmUtFv4axmHa3L42i/RP8
+KN7bgtOjR0J+0bjweTxfcHx7b+d1blVfUK/lMXm9eiA9oi5i6t/Q90L5s4y
n9UtLwnXv9TGfI8s+WA0l/HUNqab7nyD+bKsbtedGZ7pUNPhE/M9HtSteqtT
7NlM6i1qZ4/uvjk4NT4YTI6G13rVlzLt5/qQg2u/U/Mex2AhbjVPWzrJ3kpv
dRbYpHj/KS2WusL855j//sB1fzIjbZHeEqI9NNMzaVqrorli9Znb1b40ivRP
+lddGPZJJoKhzT+NYpRCLckY+/jhNcHA6n9t+/dUBOxjp/z+iznO/GdbLQuL
CZyqaWFxgay7+23BocUvCw7e8OKqOBr60hZTePurp+areG3Dc0TbX2A15H22
vRv1VifZs5nUWyNPLwpOHHzIvnt+j4LTkxaL0fT6TPUh0WnJ7YvqrU6yt9Jb
nQXj1m7sKMv9QX7qkfveOyNtkd4Soj000jOMr9TTWpX5R2c4tnA29BYxkvRN
jq37Xu37YT+x3d9RUYir6pTffyH4vTYf1vJzLD6wWX+WuBrqZlCXkLrwzTSX
1dqgTxOeA5uRt79cj27TW51mzyK9dXxGjj0xsK3io6JeSii4MuutyeP7g4mj
G4Pj235T9V5RvdVJ9lZ6q/Og7g9++7R5BmuY/yzLcW02F3wRfOgt7q8Thx6O
xnB6VwenJ08EJ4eettgFxj5GdiwITk8M2TM2uObrVcdjbO34tl+H2+8K9xsP
Tg7vCQbXfbfmvAOPfjU4ObgtfKRPBvFlrGdZZRueecZbOP/kaG8w/MRFVfOX
Ecc5tu8eG1c5PTEc/n/v1FyP7b8fxNyjkZ4hr7OZ3mLsuV3tq0deezLy9PXB
qbHDmecZbPaM2zZ3vTnc5sFwm7Hg1Il+O0cybrsVm9WsHUObf15jp45vu3L6
vGHbiNGa6NsQbjYajO6+xeKOkv0xbB7HJ/em3feq6H6iOhifnhrnfXPjbe9/
f8W+0Pc1ndbA5tDP5Zj0txkbJkeMmLpWa8N3m97KY8/SbAH9oSx9osh+rYps
XfjX7NDxfTUxetb3P3HU5hka23uX+bomh/fWxP4V6RuN7lkcjO1fYjUpzQZu
+WWma0Qfks9K/RXspJuDAOrprSL2dnDNv4frT1XFhnEPs8TnOLFYxHD//oc+
E7ufM/6GpHx/aXqL2FKuu9Oj6ovOLuSt5pkXEH3Tt+RD3tvhS28xhnLiwAp7
drinuA+5lyaObg7v48/aPX1sw3/bvvG5P7jvR3ZcY/N8EIvAs8szwhic28b1
O+gLcZyBR75i2zDnh9uG55Fthjb+2PpL/C6cHHzKfPpuG54J7mveJ456aOOP
Oro+nCg3jfXWS5rrrdhzNNvtq0dee0LfhLiULNtmecb5naSPMvzkFTZ/K/E8
9Efos8R/d1uxWVnaYfE1KeOtnHdypMd+a/ltpj9Kv5Qlad8ZS6KP1O77VJQD
ngeLI1x6psUK0gdP287qdIXbcW+7ddzHjewOOQ/E4VTORYwZ8dArzrN9G9XZ
aES36a089izNFjD+nqVPZPYrtEHW37/9Nbad6YvgtPWXqrYLdYDTZozdDD95
uR0v/n0V6Rv1Lfmw2S3y0wbX/d/M18j1IfmsxFii2dx7aXqrqL3FrptdfWB6
ziWuq+mnHQtin+NDUZ/2hr+cutez/4akfX9JvYUGRufGxyrUF51Z0MbYuOn+
0vlVc7ZngbzWenVci+JNbzEOG3tGsA0sbO/W8T72YPCxbzU8B+PNjPm619yb
8de27ujGqvGU8d5Hq55bID6d+9zmMJv/HIsvHlz77bbfC0JA43jCP84QT/gi
723i94WxIPI5Zlpv0a9jGdr0P5m2b/qMs034+41tqPpMi/7Cfj/jv8+t2Kws
7WiktxhLdb/tjomBrVX9NPpF9GM6cS5s0b1Qp4t7lT46/fi0ujvosHjfnn45
uok+paurEa9DSF8/mue4to5ypLveZf0dcsXy+mq7SW/ltWf1bEEayT5RZL/G
avxoJ3oeMC1StV1oR+K/Fdj2yM59IVpXoG/E8RiXYqFtyTgt4inj4+FxXB+S
+wZtg311Y01peqsVezs5ciAY3nrZ9OvhveH38xPzBVau0eafhdds+/T5cvyG
pH1/cb3FvU98Kc9NZRv1RWecZN+lSF+GfA3iCn22y59/a6RqO2wrSzKv/9T4
QOQLrvpcL7L+zNj++yx+h+dv/PBjlffHj6wzf2x8n4n+J0K9dUm0/3V/Yvv0
r/pi1TbOrjh/9egzd1g7j63/zxmJzRQiD81swOF73lG/XobFIvtpB9rOcunD
/ldlDDts14zrrQXp/RN+19xisTlXZ3vG6duxDc938lzEomAz3OuiNiurrWmk
t9Ly1wcf+6bFlbh6A/RPTQ8W9AsIkYSxWsuxWn6OxYpYTkPKfFnER7mayFFt
r/Mt/onX6CX6IBzn0OJXRMcN9Vm9eY65f3km8DFUxpmb1GSO01V6K4c9g0a1
LJr1ierte2z9f5nvysVOpW43/1nWlmOP/0dlXd6+ERqLGGh0ONph4NGvVd5z
/vp4nGCcit6asm0ju26wXDDiqdGAcb3Vqr0d2bnQdCH/M26ARkUfcUw3FxP6
ysV7t/ob4tajt7jPiX0c2XltzTbqi84sPvSW3Vf3vqdxPcOczJjeCu/71L7L
if6KTgLGNehnYEs4NnFUY/vvN59W5ZwrP2tjNNhsiycMn21sGP726Fq+NGi0
0I9iO57hY49/38Y2GJcY2XndjNV9FKIZTW3A/OdYv6dGa9377lyxyPWwsWfL
6bigNlZxFvQWnBrrs+cw7T2eVdc/yfKMu22oD5Y8Fr/pk6OHKq+L2qystiav
3iKeMfJnnW+vR3ffFP4m39n2e1SUA/qn3FsWk3/Nc+3+dL4qfnPj27rYQLTV
0eWfNF9Y/H3b32poXGD93Wie43dX3kejYTdc7XmbJ3n52VW6LSvdpLcgqz2D
erYgS5+o7rjNmm9E/bMpTVtvO9NboTarfKc5+kZodBa+1+lzHK/kHxGrh4ap
d42Seot4OnQQcZDkUMX1Vqv21o43lcM18MiXLX6c9cQTcD5iAM3/NOXPbfU3
JH49LC84/B75zokbqXqG1BedUXzpLcaibSxp/rO8tKvdegt/71jP0qpcccZ0
4raF+5A4WcZAeC7H+x6vGt+PxiTSn5FUmCtkxbmWq8G52n1viLlJ5vmOw/uf
sTiI51QUBh1315tTddZs6y1iZHi20+xZvH+S5Rl328THbR3kOUz0b6m8Lmqz
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
n7Fa8CvOtfGXuseY/yzTZsQcWq6F5/ZJbwkxd2Dcp+k2Sz5odeHb3dYiyJ4I
IXwheyJEd0HNQeaQsVrvxA2Geovax8QYZo0RJMedemK+2ya9JcTcoW/pR6vy
QpOQT+XmsOhGZE+EEL6QPRGiWznD4gPJxWKcORprPqOtbZLeEmLuYDHKD3zC
bJCN35CjNf/ZNp5z+O63mR4jzrnd7SyK7IkQwheyJ0J0L9E8W5823xY+rna3
R3pLiLmFzStMLqnNd3x+NFfgkg9ajZ54bfhuRPZECOEL2RMhupvDd791RmID
iyC9JYQoC7InQghfyJ4IIXwhvSWEKAuyJ0IIX8ieCCF8Ib0lhCgLsidCCF/I
ngghfCG9JYQoC7InQghfyJ4IIXwhvSWEKAuyJ0IIX8ieCCF8Ib0lhCgLsidC
CF/IngghfCG9JYQoC7InQghfyJ4IIXwhvSWEKAuyJ0IIX8ieCCF8Ib0lhCgL
sidCCF/IngghfCG9JYQoC7InQghfyJ4IIXwhvSWEKAuyJ0IIX8ieCCF8Ib0l
hCgLsidCCF/IngghfCG9JYQoC7InQghfyJ4IIXwhvSWEKAuyJ0IIX8ieCCF8
Ib0lhCgLsidCCF/IngghfCG9JYQoC7InQghfyJ4IIXwhvSWEKAuyJ0IIX8ie
CCF8Ib0lhCgLsidCCF/IngghfCG9JYQoC7InQghfyJ4IIXzRCXpLCCGEEEII
IeY68m8JIToZ2RMhhC+wJz+//x+FEKJlpLeEEGVB9kQI4QvpLSGEL6S3hBBl
QfZECOEL6S0hhC+kt4QQZUH2RAjhC+ktIYQvpLeEEGVB9kQI4QvpLSGEL6S3
hBBlQfZECOEL6S0hhC+kt4QQZUH2RAjhC+ktIYQvpLeEEGVB9kQI4QvpLSGE
L6S3hBBlQfZECOEL6S0hhC+kt4QQZUH2RAjhC+ktIYQvpLeEEGVB9kQI4Qvp
LSGEL6S3hBBlQfZECOEL6S0hhC+kt4QQZUH2RAjhC+ktIYQvpLeEEGVB9kQI
4QvpLSGEL6S3hBBlQfZECOEL6S0hhC+kt4QQZUH2RAjhC+ktIYQvpLeEEGVB
9kQI4QvpLSGEL6S3hBBlQfZECOEL6S0hhC+kt4QQZUH2RAjhC+ktIYQvpLeE
EGVB9kQI4QvpLSGEL6S3hBCt0nPNc4Ojyz8ZHLz5b9vaDtkTIYQvpLeEEL6Q
3hJCtErPtc8Pjj746aD39le3tR2yJ0IIX0hvCSF8Ib0lhGiVnoUvjPTWHa9v
aztkT4QQvpDeEkL4QnpLCNEqB67/U9Nbh+96c1vbUWZ7MvTEL4LTJ0e8HS84
PRkMbfpJ2z+X8MvQxh8HEwNbg4M3/O+2t6XbmSm9tXrXlUHf8M7g1w++ve19
wJli7e6rg4nJ0ba3A06fPhWs2XVV29sh5jbSW0KIrBA3uH/+c2rWH1j0okhv
3fP2trYvrz3pf/jzAcvBG/9P1fqjK84N156299t9zR3dqrfcNXbL6VPjwcnh
PcHxbb+uue5zjZ5rX2DX5PBdb/G27/FtvwlOjfUFB2/6m7Z/vm4nj9569Olf
Bc2W3z38ftt2474bg9HxgeA3D7277X3AOPdt+V5VeydPTQSDo/uDDXsXBVc+
+M5cxyqqt3657DV27uvXnOvtc0lviU5AeksIkZWjK84Leu+sfWYP3vCXpreO
3PvutrbPh97qvf01oa4ZDYafvLzt1ztOt+std43R7OjyiaObgsnj+yIN3wHX
tx1wTYrqrVb2Fdloxb81fnI42Lj3hrb38fLg9JbTVmifRY+dHxwe2h4MjR20
11mPVVRvcW7pLVFGpLeEEFnoueb3Ih/W3W+reY++n+mt+97X1ja2qrfw06EB
Thx8MNWP1058663TpybaorccxJ6y4Ets97VtF723vbKwZmplX5GNua63HNet
/qStv2vTv2c+VlG9dc0jH/Wut06dPim9JdqO9JYQIguuBmGaD4vYJd7rW/Lh
traxFb2FnjxxaFUwObzX8tHi26F1Thx6OOzjviI4cWC5+b/YbmDVl2qOiY5A
r52eHAtOnegPRp6+viqXZnDNvxNUFxy47k8q67h2pj3Cv9PX+wXhdieD/oc+
U2lDmt46fOcbw/M9FJ7vRDA52hsMP3FRjVY8fM87gvHDa8JtxsN2PxP0r7ow
ODU+WKO3Bh79anBycJudN76M9SzLdb561zi+/sCiP7f1A6v/NfOxo+9hVXSN
w7+2XaiPB9d+p/b7Cr8DfLETfRvs+zq0+GWZznHw5r8LxvbdY9fn9MRw+P+9
Qe8dr8t1zbPcL0Obf15znY9vu9Leo63EW54c2mXfGfGXg+u+m2nftPuk2T2Z
9x6fK8yU3kpqEV7v7388uPbRs4IDAxuDyVPjwcDI3mDx+i8Fly9/Y7Cl57bw
eMeDobFDwfJtP6453sLV5wT7+tfafiPjfcHaPVcHFy15We4219NbV6x4i61/
YNuPMp8zTW9dvepDFps4MLKvEqu48qmLK+8/tvt3oTaarLqv49cwy+e84bEL
ggODm+z4x0Z7giVbfhCcODkkvSXCe+Xlwe8e/kCwaM15wa2PXxjcufHfgrs3
fdPgf543/Lm/e/iDwcVLX+H9/NJbQogsoA9Mb93/AXt96NZ5wdHlZ0f/3/z3
kd5a9rGa/dBp6LC4vpgpWtFbx7f/1v5P89FFfdjj1sfvveO1poWIN0Q38dnd
dvRr6R8PP3lFcGDhH5kOZR/6y+7zH1r8cjtP3wNnVfYb2XFN1A/esaCyrm/J
h6K23fCXsTaMVLWLfj99fmokoBGpx39y8KmwP/7T6W3ufpvlTNHHZhvmSBt+
Mso1iesttBbH6lv6Eft8A498xT7f4bvfmut8ja5xfL37fE6jZzm2XYNwG9NS
t78m6FnwB5F+DU5b++PbTY70mG5Cu/Rc+7xw/RmZzoE+Q2PZtbrpr8Ntf1RV
dzNzOzPcL0fuf3+qj4pniXsC7cNn7HvgE7ave94a7Zu8T7Lck3nanIn5z7Zx
maMPnm+fZfa5IHqOW/RRz6be4vXeo2uC+as+HFyx/M32PzqBWL57Nn/bYvke
efoK+87xAbl90SDoD2pwXL78TcGCRz4W9B/fU0hf1NNbtz7+RVvP36znTNNb
d2/+VvBEz+LgmlUfCS5Z+qrgjg3/YrF+d2z818o2N6/751T/VpZz0o9GZ209
cKdtc9XK95i+Y5HemrtctvwNoQ7/tPln0Vbcxwsf/URFe9209rP2P+MdvBdp
sG8EN679jD2LvtohvSWEyILL0aI/zmv6oM4fc+iWf4zeC/uFyf3wY/DeoVv+
YcbbWFRvoTtYGP8/vmN+zXaun0/fd/p6vNj26X/4C5V1+JAmjm5MfP6/sP5u
vD8+OXIgGN562fTr4b3WBnw1lXNu/lnYj99e3YaE3hrvfTQY27+kal3fso/b
dj0Lnju1zWrTA/vnP6tqu2T+FjpjdPctVdvwWYa3/DLX+epd40r+1sI/DI4s
+aD19+1ahX3zrMeOvoexmn70iZ4Hos8Yu1b4f5xWzdz+8Lhcl8G13657z2Rv
Z/P7pZ5mSj/v6qrvJ6veynpPZm1zFtD0R+59T809N3ucYeMEjG20cpzZ1Fto
iYuXvrKyDg3CggZy63ifsYUHt/+ssq5nYEOwp29V1fFv2/AVO37eMfqk3rp0
2WuDWx7/gvmheoe2Bb9Y8tLM58waT4g/b/uh+yuv6+mtLOfkWGgw106H8rfm
JtwX6Cn0E/cK9Wrizxjgy0J7Jff77cr3BYvXf9n2xWfK+ECr7ZHeEkJkgbH+
SFNFfhn8Jrzuuea51q+xceUVn6q7H/6ImW5jUb1lmmvzz62fzXg+4/vx7VJj
+cK+JMuxx//DXuProC90bP1/1pyH2LOJ/icqr0d2Lgz7wJvtf3wHaAi0Afs7
XUo/2cWIpbUB34TVUFz1xerrPdVH5jthXjS2wUeTbFNSb40fWReM7rmtahva
PLzlkszna3aN3UK/ns924Lo/znXsejGVx9b/l31vxITW2y7rOUafucP25XtE
lxQ5Rpb7BRrpLXIJBx/7Vqjt7gt1+H477/jhx5ruGz93nnsya5uzgO+73XPx
+WjDbPu34tvQT2RBf8TXn5gYsjg6/mfcnu/3/i3/UbUNdeZZ8JWhPfDz1CNe
IzFZn5AFHcjnuOyBN2Q+Z73PBFeseLPpxd1HVlp8JMci/s+9n6a3spzz0gde
Z9usfvrXNeeU3pp7cJ/hPyVO8M6NX7f7I227NL3lwKeMT4yxD2h1/gbpLSFE
FtABkaaK6hsQr2N669rnBb23vaoSx8N75M24OLFDt7xkam6umc/rL6q3xvbe
FTAmjnYkZ4aYqvh29fr51hcN+/r2OW99aeQLWHVhzXYju24IJkcPTZ/3oc9U
crgGHvlycOLAClvPvEnExXFNqWcRjx9LtsGdr96CHiYXiSUea1dpe0Jv9a/8
rMUdoqctnvDRr5kPhJi2rOdrdI2df+vYuu+Z7+nQ4lfk+iyNvofBNd+IzjGV
k5S2XdZz9Cz4/VBffN98jbRzZOd107GgLbaTxd0v9gzV0UzEWpI7hr7i+vEM
je2/33yQzfaNnzvPPZm1zZlshfRWy3oLvcGS1FtjE4PBuj0L7P+rH/5Qw/sR
zYZOarSgRdyxk/6tlTsutnyq+avOrGyT5Zz1PhOxWuOTI6avOBc+hN1HHg56
jz1Z2SZNb2U551Ur32v/L936w5rrLb01t/jNQ+8yncS9hF+K+xdfVdLv2Yzr
13wqWPDox83fRWwhMYbcs0XbJb0lhMgC/W6XH8G4N3GF/E9OiIstjPxdvxcc
ufddoVb4pO1HvzqqXfjeGW9j4fytm/+2ss5yZYKgyleXpS8a+RLSfQHkG030
b6m8jmpFnLZ8t9HdN4X7/MDWE2M4uudWu1bJmho1/q2p86X1pR3EhkVt+kFt
2xN6i3OR8zQxsM38beN9j1flsmU5X8Nr7OIJFzzXanZYDcicx673PeCDQ59W
xfMl/Vt52x/e44wtUDcDH5OPdsbvF6inmYg3HetZWom1BNqQV2/luSelt2rp
dL1FjhILNSHqtYN6EhyjHjet+1xl26Teop9JzQlyydw2Wc5Z7zMNnzgc7Ol7
pKrfi5+rmd7Kck761Syrdl5a85701twBHxS6KNL982wdvi3WkZ+V9Tjcoxxj
+l6dZzmExBcWnTdPeksIUY+DN/6V6Sb6sfisKpoq7Mez3vRW2KcjJx/flvN3
kZ9jvq6wz+q0mMv7mkl8zL8FJw6ttJwqfB28ztoXJSYP4tsQF4Z+4Rjx9cRy
Wc5WqHFcTQr01+ToQdNHyZyb1PytvvVVtQPTIAeMunPxdWjipN6inkIyfytJ
lvNlucZoWdO0U5o867HTY96ebblg5HA13K5g+8mjo5ZJy+1MuV9cTXzLdXLf
TfisscTrNto9iT6K6a20fdPOnfWelN6qpdP1FvQe22oaxkdfNa1eBrFYLMRl
5Tln8jOh3VjiNQ4BLRfXW/gUWKhhEN8uyzmPHt9tdR7j66hJJ701N0BXcb/i
i3Jay0F9FTRXq/Uv0GD4zqgbmndf6a3ZYbbmFhUiP2fU1IZ2UHvNNFXYP2OO
Wqe3olqFkb5iX8vlCvvQzt9F/YBIez2/kud1dPk50XEZs4+N2yfb0spn8aW3
qP+Nf8n5hTL3n0PdREwefqrpWnArLTYtWWMen8zJYzusJpyr/0AtCWLYqP3g
8qYctMV8OLH5gflOiPmjdjjnIl8Lrdv/0Gcr2/A9WTs3/NDaQFwodfusxl7M
Jh3f9hvrl/Nd17teWc6X9RqP9z4SzXc8VZ8hy7GtDkYQRNvc/Hd2H5ILx37U
DYxvl1o7v8k5yNvD50MsLFqbc5Bnhw8yzzXIer+wL9sd336VjVPg92T9xMCT
ll/Fd0FuGN/N6YmhKr1Vb9+a+oQZ78kieovrgw8wV+3AFedZnGPrdqsxc0Vv
Ub+amnzU4WPcnT4nNS6oaZi3zfXqE/YMrLf5jl3NgCznxM/EvFfxOZL7hnda
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
cLomxnOtf2N6K9QtaI2oxuF7Zu0zFLEnzPE7tn+J+bOZ63d4yy8z7Yf2OH1y
1Gp9hP+Y38+9l6a30JfHt/06ODm0qzKfMLHQ7v2hzT+348SX49uujNqYo44q
Pn20M3Nk0D62a3Zut68PvZX1XOS5MifBiQPLrZ2Tw3tTYzktXmBwW821Ie47
z7XJ0q4s5wPub3yixInbPfPERal5xWVneh6+vFxgMcUz2bZ26K1tB+8JhsYO
Zup/UQ9t39HHgpOnTgRjE8eCrQfurMljWrv76mB//+OWj39gYKPFJg6M7A0W
r/9ScPnyNwZbem4Lxk8eD895KFi+7cep+16/5lP2l31p20NP/bxqu+2H7g/6
R/ZUrbt61Yfsnr9jw7/Y68d2/y44dXqy6nnYuPeGyrYb9i4K27XP/Hr48VY+
dXHlWI32pY0Tk6OFr8s1qz4SPHN0dXByciw4NnogWLL1B23v/4vZ54bHLjBf
1Gyf96Z1nzOybi+9JYTIg8u9QnfR73Z9KPxizGEc+b5eHbg6G65GxmxQxJ6Q
a8ZC/O/guv+beT+nPficzK+OZnPvpektrsvIjmtMY1DLFC1A3inzQLttLJ4x
xb+VR29NjvRYzqj5D6993tT30PzcvvRW9nMdDzXXqqkamC8Ihp+83LZjXoHK
dQy1D5qGOQrYZuCRr9g25OfmvTZZ2pXlfGgty8fd+GOLQeVeZ477oc0/bfuz
OdvY8z81r0NmVpybmiPqm3bordHx/lAD3d50OzQF2mTD3uttzlTyl9APaBXm
b3XbOT2y9+iaYP6qD9ucrvx/4uRQcHhoe3DP5m9bvNMjT19h93t8jJ990Vho
lwWPftziGol1xH+/dOsPK9tl0Vtw87p/TvVREU/1RM9i0z6cg33w8VHrrdm+
Sb2V97o4Lco1WP/MdXZefA7t7v+L2YV4VfKoontknt2/3Iu+z0O9eO5zxlMu
XfZaO2ee+016SwiRB/qh1NYgXtDlaEU1CKdzu+jr8Jr+ThafmS/y2hNqlk4c
3Wx9gfHe1UG8TikcW/e9qr52HKc96LsTR0k/xsVOZo0n5JzoBffah97CL5PF
d5A890zGE6aeK9QsXDu3jtxalv6Hv1BZh48uvp+tO7qxygeZ9dpkaVeW85GL
G9fWQI4i1w4f72zd652MD63TCW3Io7foi7FQc6/ZtgcGNwW9Q9uq1pHrhdZY
s+uqyjqnmeI5++gYlvu2fC927lea/Xlw+8+q9sVHlKwj8Ezfo0H/8Wl91are
Sv18AxvtuM32TeqtvNcl3qfGB8Zy/5bvt73/L2abecFtG75iPq7F678c3Lj2
M5aD5fs8PGfU0Lh9w1fNr8XzkSdOWHpLCFEUamtEY9ZR7UJXA57ahO1oT157
Qn/71NiRsP3nWZ0M5k537x2+8032+x2PE4xT0Vuh/uQ1c6mTC8YcYmiGNL2F
vht87Fthf/0+y/2ijxSfx8KH3qqnmZqd26feKnSu+c+yY8fnTaQW7eie26q2
m+h/ItQ/l+S+Nlna1ex83O/s07/qi1XbOK1Y716Za8xlvbVm128abkccIPfQ
qp2X1ry3r3+t1TJ0r9Pi7ejvsaBh4uuphbh2z9UN94VVOy8zP9BFS15ur33o
LeoFoPV2H1lpsY2WAxtqp2b7xtvY6nWh38vy8I5fdkD/X8w2+ELxtWade7gV
3PxbVz/8oVz7SW8JIYpSmSd5KiaLWDCrVRj2a9vRnjz2hHmbrU++9KP22sW4
MRczr0d2LLA4wXr7J/UWGpNaqMSk9T/0mRq9he+Luqf079mXuiNj++83n0ql
TTOkt7Kc25feauVcprdi9V77V37W4jz7Hjgriu8L9TC5V8QE5r02WdrV7Hzk
LDZaZjN2tpOZi3oLRicGgq0H7mi4DX00liVbanONyP86fuJI5XWarkCzpOmt
sYnBYN2eBQ33hRXbf2L7u5yoVvUWPoXxyRHTV/jciK+iFn7vsSeb7htvY6vX
BVjQk+3u+4v2wH2G78mNJcwE+ItvW/+VQvli0ltCiKL0XPPcyvzGvHZzbjkN
MtvksSeVmL+pGonEgqGvmBvC5tE7faphrY+k3oKhjT8KJkcOhPufX6O3WD/W
s9T8X24dfpYsemtk142hpthZtS6P3spybl96q5VzJfUW/iTy0fAbomWZXyM5
Z1vWa5OlXc3OR74WS/+qC9tyf3cLc1Vv7ehdFgyf6G0YYxT5cdL9MORaHRne
UXk9E3qLbU6dPmn+OF6jZQZGnqnaJo/eGj5xONjT90jVZ8bPlVdvtXpdQHpr
bkMe350b/23q2Zg3A+eYZ7GKzHF86QOvy72/9JYQojhRLQbqC7jXzMPVrvbk
8m8t+WCNtqE/zdx+LPg+Gu2fpreoiW/9+n13V+kttBzLwOp/rToGtQTj/f0o
Dyyo0XnM2848X/H8MjRuFr2V9dw+9Far50rqreEnr6jJp0qS5dpkbVeW8433
ra+qVShqIWfTdGrK3BKzQnjew/e80/yRrRwnr95irlRi4tLqwf9qxdsquVQH
B58IDh3bUvU+MXnkW6El3DrfegtNRO0JcrjcuvXPLLT6G/H+KT6CpN6iziEL
czm7dS6G8oFtP6o6DzU94norbd+0NrZyXUB6S1yx4i3B3Zu+YbrIjQHw96a1
/5RrTuRon8/G9plnsbwc+8oH31GobdJbQohWIHcL7dLudkAuexL2yfBnTQxs
tXFw/Fx9S88MTg5ut99t8rmOP3V1VexanDS9ZetXfi5wS9y/NTHwZDSv8qIX
Wb4Pc3adnhiq6u/3LHyh6ZDj26+y2oLUI2F937KPRXrh0a/aeuoz0OfP6t/K
cu5jj/8gtOMTphnrXbMs/q0s58qqt9iXnKpG8alZr02WdmU5H3PLEWNIbXl0
Bd8Z93//Q59t+/3fMaB37nqL+XlbmaOrOOeH39M7qnyZRcirt4D+PvUdHnrq
ItMK5O3fvuFrltfk6lnQb2MbtI6rw7evf53Va798+Zsqx2pVb7FQq/2qle+1
2m1be+6w8y5cfU5lO2KjWKhZSFupO4C/Kqm3GM+nLZv23WTb0a9lfd/wTsuv
4rMSo7hx341Woz6ut+rtm/x8rVwXkN4SwNgG82K5+YrnrzrTasbnPQ7PCXPq
UZeF541jUguxaLukt4QQrUD/Nhnj1S5y1ye87k9MU50aH7C8HeZmGtr0E+tH
038n18fNhZyknt6y+vB962v0FvND05enLh8ajxodxzb8sKq/D6xnbii2G9l5
XeWYaBRiHU9NHAv12G/tvOQjZdFbWc5N/NXk8X1TdRrTr5f7zGkLdfWzniur
3iIukO+FvDq34MuyOcYqOjjbtcl0DTKdL5obHP8n2/H++JG1VXUVRTkooreA
+bGIgSOviTp6aBLmvYqPr+PzcfNMUeviyQN3pc4z1Yre4rj3PvEdy89Cx5Bj
hQ+uur3zbNuR8aOhThoONu+/2fqotD2ut4D+Jv4xPpPLU6PWPH4p9znZ5pGd
l1fprXr7pn++YtcFpLeE47IH3mBjB8T+ce9xT6dtR+0LNFXae+gs9iVGkWeB
+RhaaZP0lhCiFYjbIQ6u3e0A2ZNygT9qcM03YuvOsBzBiaObTAN1+/lEZ1NU
b3UCaBI0U7vbIUS7oG4GWop5stBLzE+XrBOfpreo+45PjLha9mVeOJfv2ArS
W0KIsiB7Uh6YW4Cl97ZX1rw3tu9e8yl18/lE59PteivNByTEXIO5idFM+KrQ
T8zRhZ+XubLJ87pl3eftf+JZb338QtuGbfEl4yfz1Q7pLSFEWZA9KQ/kkZ0a
67O5hYnlo+bFwZv/Nhh+4iKb09nVxOzW84nOR3pLiPJAPC/5V/iz0FjMHU79
C7QV/9/y+BeChavPtrzBmagpL70lhCgLsiflgvmDR/csDiZHe61GBXlto8/c
XlMvv1vPJzob6S0hhC+kt4QQZUH2RAjhi27WW0KIzkJ6SwhRFmRPhBC+kN4S
QvhCeksIURZkT4QQvpDeEkL4QnpLCFEWZE+EEL6Q3hJC+EJ6SwhRFmRPhBC+
kN4SQvhCeksIURZkT4QQvpDeEkL4QnpLCFEWZE+EEL6Q3hJC+EJ6SwhRFmRP
hBC+kN4SQvhCeksIURZkT4QQvpDeEkL4QnpLCFEWZE+EEL6Q3hJC+EJ6SwhR
FmRPhBC+kN4SQvhCeksIURZkT4QQvpDeEkL4QnpLCFEWZE+EEL6Q3hJC+EJ6
SwhRFmRPhBC+kN4SQvhCeksIURZkT4QQvpDeEkL4QnpLCFEWZE+EEL6Q3hJC
+EJ6SwhRFmRPhBC+kN4SQvhCeksIURZkT4QQvpDeEkL4QnpLCFEWZE+EEL6Q
3hJC+EJ6SwhRFmRPhBC+kN4SQviiE/SWEEIIIYQQQsx1ZkpvtVtzCiHKgeyJ
EMIXsidCCF9IbwkhyoLsiRDCF7InQghfSG8JIcqC7IkQwheyJ0IIX0hvCSHK
guyJEMIXsidCCF9IbwkhyoLsiRDCF7InQghfSG8JIcqC7IkQwheyJ0IIX0hv
CSHKguyJEMIXsidCCF9IbwkhyoLsiRDCF7InQghfSG8JIcqC7IkQwheyJ0II
X0hvCSHKguyJEMIXsidCCF9IbwkhyoLsiRDCF7InQghfSG8JIcqC7IkQwhey
J0IIX0hvCSHKguyJEMIXsidCCF9IbwkhyoLsiRDCF7InQghfSG8JIcqC7IkQ
wheyJ0IIX0hvCSHKguyJEMIXsidCCF9IbwkhyoLsiRDCF7InQghfSG8JIcqC
7IkQwheyJ0IIX0hvCSHKguyJEMIXsidCCF9IbwkhyoLsiRDCF7InQghfSG8J
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
89w7G87YZnz8A3614q32Oxy3K4zdbD90f9V27Pf4M9dWXmNTGBsht6VZ2w4M
bKw6numoUydqxpee6XvUbFx8O9p2xYrp/GF+71nu3/L9qu3i9g471z+yJ7M+
b2TDyJFjaZQLm/x89WxYln1F5xGPJ2QcGdtVb1vsU7wufJHx7qwUyQelTcQU
svBM3/fEd2uek2bPT/J5y2J73BhL3H6nPcs+9VZeO5BGmu3K8jnYD1uWPHeW
/C2OTz8OH9Q9m79t68l5HpsYtJwu9Fhcb2Wy/Rnb4+Mapl2zsuktrustj3+h
JhaQfMgi9xv3EPvn1UvJGoXoce6dIp/JV70MannFv/ssz0vWPkdS12Q5dpbn
I6sNS+vzFG1Xls9c75qrrzJ3wOajydG+9bahZhRjBHyfd278N/vrahMy5ss9
zN/F679ceZ+xAPard0zqAPEMFBkDgjLoLfSHW/B/sQ7fFOPW92/5j6pt3TM+
f9WHrZ4X26zaeWnNufChM+btXh86tsXqIca34f11e66pvG70G4o+enD7zywG
ZWjskJ0Xrdds31U7L7Pff5cnnrYdvy8sD+/4Zerx3LVY/fSvM1/rRjaM2KWk
DWv2+RrZsGb7is6Be417kTGJeJ8K25dmg9L6YC4PdSZypIrWO6UfsHTrf1oe
kOmu8Hefz8h7WZ6ftOetke1J7hO/vsln2ZfeKmIHoIjtSn4OfsPqnTub3pqw
/9mOdvA/fVgX6zN+criit7Jc/zztKXINi9r7bsPN70BsSNzn7eCedM9RXvCp
cIwrVrwl1358t2n5X5F9mme/+1nzEWbSvxVfl/bcF+lzZDl2luejFRtWtF1Z
P3Oea66+SjnhuyHOIO097AXfIeMsjAtjR+J9DZ593o/nDPE+23Ffo7/os9Sr
F4/GKxqj0016C6gxuvXAHanv8Xvr9Bbx240WfhvcNsTsJ4+17eA9FqviXt/7
xHfsN5/vkPG2ZU/+t72O6+t6tgcfJHH+PJfYBvznu488bH26Zvuu2P4Ta6P7
7uttx4I2Szsemtw+Z0qsdD0a2TDqTTOm5XKhs3y+ejYsy76iM+D75vviuaHf
wjhPvE9DXAX2DR89v0s8G5Wa8W6bDf8yVUPqXWbXfOWhOlqfL2eePdv8jrra
Vlmen/jzlsX2JPeJk3yWfemtInagFdsV/xzkL7PEY6MdefQWMUv8z28jPklX
eyWut7Jc/zztyXsNW7lm3YbzXyX1jQMdVvTYTm9xPfPUNMX2xNtgvvVN37S/
zu+FrcriN5stvQXJ575InyPLsfP0jYrasCLtyvqZ81xz9VXKB/eF60fE1/Oa
3wP6Fc3q1TTrd+Cv5fvmPk87D3YkS853km7TW/huiRdOGxuP6y1stf0upmgp
R+Tfqh5fcZBHdWR4R+U115bz9h1/2uL+GIeJ/JPT+9SzKcMnDluuZ7zNjI9k
+f1dt2eB1cuK++/z6i13LeLvN6ORDWO8KT6mk+Xz1bNhWfYV7Yf7j3pf1Bxz
vlbGDOv1s+pBf5l9GWPCr+9+V321s3W9FUEcLzmc/J/l+Ul73hrZnuQ+cZLn
8qW3itiBVmxX/Fz4D6PXl9Zsl0dvAefe2nOH1Sx06+J6K8v1z9OevNewlWvW
bViO1NTcoUl7wDznRY+bjAlEL5F30Ww/xrbRf/jb6XsB/i76V0n/G3nSzY7X
Tr1VpM+R5djZ+kat2bCieivLZ85zzdVXKR+MldX6HudZLjbrm8XNYPsZK26W
98NxqAPD/ZA8JnGHbj6vPHSb3iL3g99D/D7J9+J6C3qPba1b08ZxcPAJe6bj
6xgf41nHRrh11NNoFqebZlNcDGRyXjDm42v2+8t3TJ+Pvl+j7aCR3rJrMbRt
Kj4yWxx7PRvG7xSLq/2U9fPxu8cSr02XdV/RXlwOPFqr2u7U+rgaUTsmFcVS
Mx6VNb6nGXntCfdl2rkZb4n/Tjd7fmqetwy2J+uznPbspO2fJX8rjx1oxXal
fY6jx3db7lN8G7R7Xr21YvtPa44d11tZr3/W9uS5hq1es24DXRN/ftBd9Hnw
HzEPVtHjMhaatB/N6vKgx/hd4rxpsc02r9fUvOsurrlZO9qpt4r0ObIeO8vz
0YoNK9quLJ856zVXX6Wc/O7hD9TMD0HcQb0YP/oc+CLRSLwm75exF75T7Bc1
aomLrqfT2DZZg5m4wyzjNUm6TW8Bc9lFv4m/MZuJXsXGo53iY5705aLag4ts
O8a5iMt0+dbuWrLN+mcWVuoT7utfZ7XYGeNx2zFPD8eP16lIUs+mkBNCPhj7
8nvEscZPHq/5/WWhreh3xnkYw6VtjfpPjmZ6i74yfnWOyRggn5U5zLBJaZ8l
bQ5B/IC0hxraeT8f1572sC9jjS4mP8u+or0QJ41vK02XcK9m1Vsu5j+O03K+
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
jCgGOn/NsEYU1VvRctruacZX0YjJbVt5lrLuG0e2TrZOVINdwZ5gW2ZjDmD1
T/TMis4HWxDNB/pFGwNgvAOfcD0bwTwRaTHNbE+sDv0cF4Po09Z0m94qCzzz
2KR2t0OIvPD7xZgrY5nkZGGL0FWMMcXr/ri6q+gqtsFuYb/wcVEDeibaNlft
SScjWyd84PLcp+fT+nJLsT1ZmKv2RM+s6FbwhxK7TH6Xy82yuT1Xn12pPRjN
xfdK67fQP+H9KBbn68FN6z5n28xETR7prfZQb4xFiG6Afg5z5aC7GHskhxQf
FxqMcSbGcyvzkob2CzuGzpq/6sxMNaCLMlftSScjWyd8kFYXPlmDxzdz1Z7o
mRXlYJ75W/F1OT8nvivGbRgPxn7QX+H9qM6N33ibJNJb7UH2TJSDeRYzjX8e
XWU5XcxPGoK+Im6FmBFiDjsx/kfMPLJ1wgfkXCT1VpE5R/MwV+2JnllRZvBp
Zc318on0VnuQPRPCP3PVnnQysnXCB4zXUH/CaS18643mLfXBXLUnemaF8I/0
lhCiLMieCFFeiGMm/odc0JnWWiB7IoTwhfSWEKIsyJ4IIXwheyKE8IX0lhCi
LMieCCF8IXsihPCF9JYQoizIngghfCF7IoTwhfSWEKIsyJ4IIXwheyKE8IX0
lhCiLMieCCF8IXsihPCF9JYQoizIngghfCF7IoTwhfSWEKIsyJ4IIXwheyKE
8IX0lhCiLMieCCF8IXsihPCF9JYQoizIngghfCF7IoTwhfSWEKIsyJ4IIXwh
eyKE8IX0lhCiLMieCCF8IXsihPCF9JYQoizIngghfCF7IoTwhfSWEKIsyJ4I
IXwheyKE8IX0lhCiLMieCCF8IXsihPCF9JYQoizIngghfCF7IoTwhfSWEKIs
yJ4IIXwheyKE8IX0lhCiLMieCCF8IXsihPCF9JYQoizIngghfCF7IoTwhfSW
EKIsyJ4IIXwheyKE8EUn6C0hhBBCCCGEmOvIvyWE6GRkT4QQvpA9EUL4QnpL
CFEWZE+EEL6QPRFC+EJ6SwhRFmRPhBC+kD0RQvhCeksIURZkT4QQvpA9EUL4
QnpLCFEWZE+EEL6QPRFC+EJ6SwhRFmRPhBC+kD0RQvhCeksIURZkT4QQvpA9
EUL4QnpLCFEWZE+EEL6QPRFC+EJ6SwhRFmRPhBC+kD0RQvhCeksIURZkT4QQ
vpA9EUL4QnpLCFEWZE+EEL6QPRFC+EJ6SwhRFmRPhBC+kD0RQvhCeksIURZk
T4QQvpA9EUL4QnpLCFEWZE+EEL6QPRFC+EJ6SwhRFmRPhBC+kD0RQvhCeksI
URZkT4QQvpA9EUL4QnpLCFEWZE+EEL6QPRFC+EJ6SwhRFmRPhBC+kD0RQvhC
eksIURZkT4QQvpA9EUL4QnpLCFEWZE+EEL6QPRFC+EJ6SwhRFmRPhBC+kD0R
Yvb57cr3BTeu/Yxx1cr3BpcsfVWw6LHzg0VrzrN1P79/XtvbWATpLSFEWZA9
EUL4QvZEiNln8fovVf5fuPqc4JbHvxBcsuzV9vqaVR8JrnzwnW1vYxGkt4QQ
ZUH2RAjhC9kTIWYf9NWlD7w++OWy15g/6/o15wbzV304+MWSl9rry5e/se1t
LEIZ9dbqXVcGfcM7g18/+Pa2X1+fbVy7++pg4v9n762/7Tiude1/K+O79/5w
r5MTOE4cOsk5YXRO4jDHIUcOJyfomNmWbLFkgSVZzMzMzLjF2rL6W09p11at
3g3V3bWo19tjPGPvtVZDNdTs+VbNmnX7WsfLLkS30u3+Ua/W+24oQzeXR9ST
VtuTXrUH7aAO59kKX7QO1yUPdNZrqz4bjV7xyeixef/HfEdc4eurPl+xb6ts
HGKY+MVe01tzto2K0paFO/9s1tl0ZEJ07eaF6PklD3T8uUmjTBl96lnz9bkT
Xb91KTp8bnX05pafl37uWWhf6PQ1EyKPMv7RmJWfjvafWWLq4+DbN6IzA7uj
ZXv+ZWLGQ5evVfU+jYlrvxodOLMsunFrILr99k1zbot2/TX659z/r9B+ksrQ
SdvQDz6H6Dxl/ZMkn3Du9t+M+K3d9qAK9ty2HJ2cWi4WbGeR/abZkV6q42nn
0ApftJeuSzfB+3zs6i+U2pbxZCE0c6/qrV6N36xCEb3F9aHvlXq+ZPc/jB+5
/fiMwsdkP9Jb/cVLy/7D6PPXVn6m42UpSlF78vKyj5k6tebAi9HTC99t3psz
Nv0kunTtuBmb2+nzgbLv14U7/6ehsW5FS/c8Fj2z6L3mfTNz88PRxWtHG/f4
I5XL0EnbIJ9DtINW660ydFJv3bnztmnD/efc/zXid2xmGb2VZkd6qY630xb2
0nXpJiat+7p5v5fb/h0Vt7+L9FbvUFRvud+/sfF75nt+L3LMV1d8Qnqrz+gn
vXW3/fH8iO9pq+j0uVjKvF+5d/hG83f8Ici5JZWhk7ZBPodoB9Jbzed24eqh
6OrNc8afcH+jbYo2XWLniuqtNDvSS3W8nbawl65Lt0Cdu5vXsPl72iB5V05c
91A0ed03Gr7PR1P38cLSD1Zug62j3oo/j3w+en69yWty6NyqaPD2ddMWg/1z
t3t5+ceijYfHNWzKEdMuTDvw0t2Pjdi3z76AOKUDZ5ZGN29fNbbo4NkVpl4m
ldH32GX1Fpy4uCU6NbDT+5hrDrwUvX3ndlPM5qbD473LK3qT0HqrnfqtqD3Z
fGSiibN7cmH+dsSOHzm3xtRl2njpL06KMehEvY+z88SsaOD6iVxttevkW9H5
qwebvqNMLNM3/jC1DFm2ocg+uZ7E6Z+6tMPYUtZr1TURoiit1ltJz/G87b+P
zl3ZP6J+YUfsNtduXWjs5/5o7+mFZvs0H4TcbkfOrzU27urNs9Hagy83xRKn
1cG0c7ty44ypm7tOzmn6bePhsdHuk3MbdfZwk96q4mOEPk/8Nmzz8QubzHqU
lTx45F7YduyN6ObglYbNPDk8LiXUOcTvb9b7od9tn7X/vvjGaaKT8EPc73h3
k5fjsXn/2+Q+xEfJivtgnRmbflzp/PpFb/HZ1jf6BDccet20/xKXadfjem89
NtVoKXQvvgHrTN/0o8L7wrfEdu06MdvcV2DspF0nXsYixy57fVbvf8Hs0+bV
9DkmfahJ7TY+24repJ/0FuObGOfIuKbxa76Suh5ai/cffgV5k7Dz2ADeh65W
61S9j0Of3bZj03LXK6u3IM02FNnn5Runov2nl5jf79qld7TsmghRlHbrLbQW
WgAdgG8xb/vvzLPvtquzDTYG+4NdemL+/032QRoahH1hf55a+G8m98D5KweN
H+DuK6kOpp3bjcGBu31ZjePb2CradNBh0zb+wGgdV29V8TFCnyfXmbHs5Lkj
dpz/OZ/TA7uiWVt+Yc5nxb6nTVms/glxDu79zXs/9Lvt4/wtvJvtHFwWvpuy
/lvRm5t/ZtZBL/ns940N3zMx9fbzXe30k2G9hqZnf268IDpsRPk2/7RSTGG/
6C3qozv+neec5a1tj2Yej7YQ/Iei+8JG4HOktS/71JmkY1fRWwt2/sn8ltUm
ED9mmh3x2Vb0Jv2kt4CyoU9Y6P+ds/VXI+rt8Yubm/qGAfuNBnPf652q9y68
J1h4j+et22m9RbvwM4vel1vOqtdEiDKEzOdllyy9RR9T/B2K3Vl/aEzTNtid
pxe9e/i7JB/k2IWN0cGzy5v2RRwgx7O+ZJE6yLnh+6DHLl07ZjQK3xOLdf3W
RTOmC/2SF0/o62OEPk/KbnPdARqGxR1jwe+0vy3e9bdg5+De37z3g8+x6mz7
0PJWb9GfkbYe2pv7h47y2S/vHbS4/YwmZyyzvQ/k0XD7rvCR0XTx/bAO7a1s
hz9TNKdWr+qt+EKbQNrzmPR8cr1Ylu15vOl76jZ1jf5e+pape/haRfZFezfb
rdr3bOp5JO2nzLHTrk+S3qKfPK638o6ZpbfythW9Sb/pLcBuztv+WzP+wOiu
ht9j28OIN+HZXr73iRHbEcNC3xj/d7Leu1i9tXr/87nrdlpvpZ1X6GsiRBna
3b918tK2aM+peU3bYV/WHXw1dRtI80He2vbrpvWsXqGPJ21fWeeG/uF/2pio
m/y/5eik4fi5m4OXR+itsj5Gq88T356F47vfk8uVeMTQ5+DzfvA5Vp1tH+8u
dJTRXJt/2qSR4tAn6BtPNWX9t5ti/+kjs3Mq07fFftzngFjUkTm932E0mNVY
9LUVPb9e1Vtl4gnj67Es3/tk0z0gppZnm+NwP8mljO9VZF/4lyxJccZp+6ly
bN/rs+7gK6Yty7bx+BwzzY74bCt6k37UW/d4h8kxwTvO5vMkh6Gpz9tG1mfG
SRFLY8+zU/U+DuMeth+fnrteN+qtVl0TUW/wzYgDg1DzHbVbb83e+kujaYjN
I24JW8Rn4svStrG4Poi1WWmLjU8sq7eoz/zPNSc2wObZjuutKj5Gq8+T4yXp
Lfrq1h0cHfwcfN4Psn30LX1guI9r6obvRmnxrWgi+qh89kk86ivL/3P4M/vl
XcT1ZcwWeot8GfR72X3H9ZbpUxt6f6H70VuU1Y1tzUN6657eunzjtBm76Pb1
0sZQVG9hg+L7zitjlWP7Xh/aydx2Ep9jptkRn21Fb9JuvRXyeNX11l0OnV1p
xmbx/93+rZF94cBY8zOX9wyt17l6H2fPqflmXEZe3Ap6kZxj7ndV9VaVfbby
moh6Uwe9RR8I9fbslX0mlwL9XXE9UMQHSWoj8tlX2rlZvQXUx+3HpjfV9bje
quJjtPo8ffVWqHPweT/I9t1l/JoHveIKk8ZYJfH0ovc03WdsBO8i9BKf0Vsc
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
ngghQiG9JYSoC7InQohQyJ4IIUIhvSWEqAuyJ0KIUMieCCFCIb0lhKgLsidC
iFDIngghQiG9JYSoC7InQohQyJ4IIUIhvSWEqAuyJ0KIUMieCCFCIb0lhKgL
sidCiFDIngghQiG9JYSoC7InQohQyJ4IIUIhvSWEqAuyJ0KIUMieCCFCIb0l
hKgLsidCiFDIngghQiG9JYSoC7InQohQyJ4IIUIhvSWEqAuyJ0KIUMieCCFC
Ib0lhKgLsidCiFDIngghQiG9JYSoC7InQohQyJ4IIUIhvSWEqAuyJ0KIUMie
CCFCIb0lhKgLsidCiFDIngghQiG9JYSoC7InQohQyJ4IIUIhvSWEqAuyJ0KI
UMieCCFC0Q16SwghhBBCCCH6nVbprf/38utCCFEZ2RMhRChkT4QQoZDeEkLU
BdkTIUQoZE+EEKGQ3hJC1AXZEyFEKGRPhBChkN4SQtQF2RMhRChkT4QQoZDe
EkLUBdkTIUQoZE+EEKGQ3hJC1AXZEyFEKGRPhBChkN4SQtQF2RMhRChkT4QQ
oZDeEkLUBdkTIUQoZE+EEKGQ3hJC1AXZEyFEKGRPhBChkN4SQtQF2RMhRChk
T4QQoZDeEkLUBdkTIUQoZE+EEKGQ3hJC1AXZEyFEKGRPhBChkN4SQtQF2RMh
RChkT4QQoZDeEkLUBdkTIUQoZE+EEKGQ3hJC1AXZEyFEKGRPhBChkN4SQtQF
2RMhRChkT4QQoZDeEkLUBdkTIUQoZE+EEKGQ3hJC1AXZEyFEKGRPhBChkN4S
QtQF2RMhRChkT4QQoZDeEkLUBdkTIUQoZE+EEKGQ3hJC1AXZEyFEKGRPhBCh
kN4SQtQF2RMhRChkT4QQoZDeEqI/+cyUGdGvFy9vG1+ZPrvl5yR7IkTnabdt
aZX9kT0RQoRCeqs6r23dHl0fHOzIca/cutXx8xe9CT5ROzRQO49VB3vS7Yxq
+K4nLl+Jbt6+HY3Zsr3j5RHdh9Vb35k9P3rnK2Ojr7/5Vur/0luiW3h509Zo
/4WL0X+Mn9rxsoh71Kn9ppf01h+WrYpYnly7ccRvf16+2vz2ntHjC1+Hfx8z
wWz79ZlvFd62l/SWvX4sdxoM3LgZrTtx0jw/na5T3UKVZ6EXcG1Xv+utf61Z
b+71B16fOOI3a094Hjp1r2x9/fiENwpv24rn+IGxk6IbDZ31+tYd0f2vTYw+
NHZyx66N6F6sjfn+nAXRuxq66luz5qX+3+3+UdFtHpw+K1px5Fh04foNU1f2
nr8QPbN+U/TeEn5JGt32juL6bj19xvhBV28NRhtOnIoenr+44+Uqev2m7Nxj
7tt/Tixub0XraGfbcCvL06t66/LNWyPe9VX0Fv5MP+ktzpf2RewK2pX3wux9
Bzr+HHcDVZ6FXkB66x511luteI6/OWvu3X2+Wc+6IcJQp/boIut/tnHe1xq+
wOgt241/8r6G7Xhk0TLTH/yNN+cGu77d9I4av22n8R/+unJN9P7XJpo2mcdW
r48GGz7h8xs2d7x83X79RD7SW53TW6evXI12nztv2iLc36rorS++8WYlvXWt
B/WW+/1P5y823/N7p5/lTlPlWeglFE9Yb73Viuf4+28tMPv86ow5Hbsmovup
k39UZP27/SPXR+7nlbFBz6db3lHWHvxmyYoRv/191VoTQ9PpMnbz9RN+dMqe
8N792ISRsaX9pLduDN6OHp63OLp95070uakzh39L01tfmzknWn/ipGmDIX6O
fhw3PpcxCOzLXabs3D38O74F/eOMVzh37bqJpXmXYz/RPfS3/feM2dGmk6fN
eqcamvDxNRtGlD+vLEXWS9Jbiw4eNm1paXE+Wf7btjNnjY4tU14TQ3H0mIkl
YN3Vx04Ym8ZvCw4cig5fGmhan/vG8vMFS5rOZ2Pj+j3YeI63nDpjruPRgYHo
J/MWmTazmXv2N/Z/y+jtf65eN6IMPveJ/X+hUa61x0+Y54hrxXPj8yx8YtK0
aPmRY+Zec57EjDzYRT5FUaS3iustn2fA5zmkTmEvdp09b55D1465JNXXqs9x
2TK+snnbiH1y3Sj75Ma+jw5cjm7dfjs6fvly9NS6kfHeWTbCp0yid+hXvfXG
rr3m+X3g9UmZ66DJ4hqM/iG2vf+1CZl2JkTdrvKedVl25KixPYnXrnHM843z
nLv/YNOx8ZEeaugc11d6Yu1IX6msHc2zR1nXLylWydcXy7PJojztsCfcO3SF
jfulHo5atMz0RYQqTy/qLZb7Gv8TL7zq6PHh35L0FnWFOjdxxy7T1038HPWc
OujaRNtOE2/voM5T3xlH+cGGLfrStFnRoYuXotFbtg2vQ117u1F/1x0/GX25
8Tv3i/50avRfGja0aFl814vrLWwWtoIy5l2/JL3FOd1pnMd7x4wvVA6eO+zL
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
rLl39/lmd15T0To+On5K9M5Xxg7rLcZv/dfEaR0pi/SWEPXgXQ078unJM6Lv
zJ4X/Wz+kmjUomXRo4uXR79cuDT6wVsLoy9NmxW9b8yElpZBekuI7oXxWd+f
MN1opD/MXmB01gefeGn4d/q8fjX9LdNv5bM/YgpZl/399s35pj8sZHn7UW99
8Y03+1pvteL8v//WArPPr86Y0/HrJzqD1VudLIP0lhC9Dbl3vtB4R6GraL/7
2ISp0XvHjDff8/u7R4+LPjxuSvTg9FnD6/BdK8oivSVEd0K/lO2TQlPZ/iyX
H0+eGY2aMTd6dObc6KOx3Bhsn5QvAw33tTGTzX6JNczqGytK3fTWN96cG91p
/P6bJSuGv/vWrHlmG/KnMa7o9p07TXGIU3buHl4XvbDhxCkzBunctesmPu5d
Tr41tND6Eyej/54xO9p19nx0Y/B29LmpM833G0+eNu+JtcdPmO8Zy/Tn5aub
yse6kxvHOzpwObp1++3o+OXL0VPrNjatU1Zv+ZShFef/yuZtI/bJmB6fcwXe
myuOHouu3ho0MYmrj50wmtC3TJ+YNC1afuRYdPnmLbOPFY3/H+yw39+PSG8J
IarwntHjTd/Vt2fPM3Hveev/26vjoi9PmxX9oqG70GChyyO9JUT3gSayWou/
9GPF10EnEWNIXCD9XuQntL+htX7W2O4LL41LPQZ9W+TboN/sCy+H0Vx101sw
c8++6Oy1a8P2euvpM9HSw0eHf7d9MfH+Hfx6fPqXN22NPjh2kolXOHTxUjR6
y7bhddAbp69eNf49esK2u/H9tYZG2tTQO+gHjj1xx67oTkOHfHLS9OHtyd9G
+dBE7228W36+YIlZh/eFe4yyesunDK04/6T+LZ9zxT9Hs807cCj6j/FTDRzf
ltenTOg+NBa/f3ziG2bdTvv9/Yj0lhCiCOgl23bGO+Lh+YtNrtOi+yGmmb4u
/oYsn/SWEN0H+QTRWmim9ze0V/x3YgqJB7Q66ZPPvxb94o3Z5v8HhrQW23/l
1YmZx/lUYzv0FrqLvPJVy92reiu+TNu1d3gd/O5LN242fPLtxsfHX6cPxP6e
pje2nDoTrTp6vOm7nzbsP9rHxiugN+jLidt1vuc4vDPsd2gHlj82ypx1Thx3
QUNvuPsqq7d8ytCK8/eNJ4yfK9rw8KUBM/4nbf2sMvGufrtRnsfXbgjuC4hi
SG8JIbJAX9H+Rh/WrxYtix5paCQL7+rPldBaFvq3aMsLOaZLekuI7oI8gzaG
MKlfC+jLcsdsocnQTMQcorvIAf+DiTNMjsK845GLwx4vSdsVoVf1Vt64pT8t
XzUcw0Z/h/tbkt544PVJJg6R7dx1rV6x74E0LZT0PXkDWJ5dvyn2XpgcPb5m
g4mhO33lqjnuttNnM/flcx18y9CK80/TW1nnao8Zvz9Fy7T40BFTpuc2bI4+
0oKYEuEHY9uJM+1kGaS3hOhOaI+hD4p3BO8Ft40NHcZ3VY/x2cYxvjdnQbAy
S28J0T2gr4gRpM8prb+JdchRyBzH7vc/mjTTaC50EzGGzHtM/nif49qcHN/0
XD+Nuuot2rroh8FfT+uLcfUGdjprYVwY6xXRW8DyfEMH2M8/mrvQjDFCc3Au
n5o8PVp59LiJicvbV9518C1DK84/SW/lnetnho4ZH+NWtEzE/D/T0JOnGnqO
ez577wGj1drhQ/QyjEP/7pz5RreGaBP+dOP+djpfivSWEN0F8ebYavq0fMZk
VT0WcwDSJhdif9JbQnQP9Fuhe74zflrqOl9+dYKJJYz3RTGei/m4Pvzky8P7
ytqPy4eeeMloOPSa3b4MddVb+Nz4+WeuXoum7NzT9FuS3iAGMTJ9Kcm+v6Wq
3qI8q48db2rbo++n03qr6vkn6a28c7XHdMvm4lum4Xdt4zjEqJA3g+OEfpfX
DdqUGe/2UOM5oN354XmLzf2jj/C+hPXRZ1lj0svqLbQx2+GTsY8qPlmr9FYn
5yAnXvbVzds6cuxW0atzuovi8J4h/8V9KTHjoWEuiu/Mnh9kX9JbQnQHjLtC
84Cb8z0OcYTMcRz/nj4ttrWfiSVMWi+Nr46ZZLSeb59YEnXUW8wFRV4GfDjm
6+B/V1vgX7LEbfLOs+dMbrys41fRW4w3Yvl7bF7mdSdOtlVvteL843rL91x3
nzsf7T1/IdG/9y1THMbtMX4vxPu2X+D6o28ZW0EeT8ZT4COhf94zNB7Q5jz5
2sxkTVVWb1ndR17nRxp6mTwrD5Wcq6Cs3qIu0Pc6cPOmGQPJM/mvNeuHx/J3
u97i3s0/cMi0NZArKK3POI47HpZYgIFGvaGOcg9aeU79oLdaMa98r8G4aexJ
u7QWvGuo3Y06TXzz+1+bWHpf0ltCdAd23NZ3M/qkyG/BOkm54QEt9vFnXjX/
Exv4g4n+eguNR354+sjKnkPd9Ba2dv+Fi9Hc/QeHvyOX+L6G/2R9p/sb9pd3
/dRde0x+Pdtmj05jzBc5zGkjY70fzl3YlFu+av8WZaM8xKoT80Df29Vbt5o0
yLPrN0eDb7+dGeNVRW+14vyT+rd8zpV4NmIAZ+3db8rBu/HpdZuG/b28MpGH
kXvLOx1dwPt9z7kLJt9hO/2KXgLfh+tk5xEl935c77536Fpy/dFAXF+uNbGH
tGGQJzK+3yrxhDyHbGv1VpkcZVBGbz22er2pbzx39O1x7vhrjP3knLKe+3bg
o7fm7Dtg6hq6i7rINh8amz8exrUj9EP/Z0P3Prl2o5mXYXZjn606p37QW62Y
V76X4HkifwVzg7T72NQD6jJ2hDaisvODFNVbf527pCnmfbDx7jpxaSCatnl7
9NkXx3bcZ02DeYhYvpcTXxU/P3d5YtGKjpRJ9AeMv0JLfeK55HFb9F8RR8h6
afsg/ztzcX36+deNbiuit4AcG5QBXVfmHHpVbyUt5B4nTx2+Au3ldht8ROtP
2e9GDflTtGUTe2i/pz2Mdm7yqtNWvO3M2abcflX1FnOFbG/sk+OiRyjHCxu3
NGkQxjWdvHLF5ObLuw5l9FYrzj9Jb/mcKzA/2saTp0xe+AvXb5jc7m7/RlaZ
8NOZ0+vgxUvmHhPD+MauvR15x/cCDzT8EPqu0DRcd5/8IvhNaGHuJ/ma2RbN
9Z8Tm9s8yugtYgnRdMQzouHwjdDgZc+vqD0hnyLa5K8r1ySet/2/k/qA5zpP
bx1o1K8nhnJ0cg/oqyqqt9zvyQHK8oec3Kpl6Qe91Yp55XsJ2mvoI2/Vvolv
9lmX/nNyaNBeVPQ4ZfWW1Vb4gPh0e0+fjU4NXDafO+23JkF5i+itdmhH3zKJ
+nP/UH7BrL6lh6e8afK835+TQ5BxXPRTkaOw6LNl+9jK5s3oNb0lhCgP7b5o
JTQTbc9oHXwXfJK8bfHJ0UJsjz6Kj+Uqorfwlb7f8IHoXyOvIX3P5EehTO9x
5jMoSlF7Qj84eVby4p3S9AGxlcz/TRsPsXj0CcXH6jP/AXMeuN/RBsSCvnS/
534wXyB9usxVzthF2hjy9NbCg4fNvAnsjznBx2/b6XX+WfECtGsQ7+t+5zMf
OnM80F7CX9bj+j4Rm6+h7PWkLeXC9esj5o9AL3Os+1+bMDzvO30atFnx/dGB
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
3hJC1AXZEyFEKKS3hBChkN4SQtQF2RMhRCikt4QQoZDeEkLUBdkTIUQopLeE
EKGQ3hJC1AXZEyFEKKS3hBChkN4SQtQF2RMhRCikt4QQoZDeEkLUBdkTIUQo
pLeEEKGQ3hJC1AXZEyFEKKS3hBChkN4SQtQF2RMhRCikt4QQoZDeEkLUBdkT
IUQopLeEEKGQ3hJC1AXZEyFEKKS3hBChkN4SQtQF2RMhRCikt4QQoZDeEkLU
BdkTIUQopLeEEKGQ3hJC1AXZEyFEKKS3hBChkN4SQtQF2RMhRCikt4QQoZDe
EkLUBdkTIUQopLeEEKGQ3hJC1AXZEyFEKKS3hBChkN4SQtQF2RMhRCikt4QQ
oZDeEkLUBdkTIUQopLeEEKHoBr0lhBBCCCGEEP2O9JYQQgghhBBCtAbpLSGE
EEIIIYRoDdJbQgghhBBCCNEapLeEEEIIIYQQojVIbwkhhBBCCCFEa5DeEkII
IYQQQojWIL0lhBBCCCGEEK1BeksIIYQQQgghWoP0lhBCCCGEEEK0BuktIYQQ
QgghhGgN0ltCCCGEEEII0Rqkt4QQQgghhBCiNUhvCSGEEEIIIURrkN4SQggh
hBBCiNYgvSWEEEIIIYQQrUF6SwghhBBCCCFag/SWEEIIIYQQQrQG6S0hhBBC
CCGEaA3SW0IIIYQQQgjRGqS3hBBCCCGEEKI1tEJv/fSnPxVCiMp87nOf63gZ
hBD1QPZECBEK7In0lhCiDsg/EkKEQvZECBEK6S0hRF2QfySECIXsiRAiFNJb
Qoi6IP9ICBEK2RMhRCikt4QQdUH+kRAiFLInQohQSG8JIeqC/CMhRChkT4QQ
oZDeEkLUBflHQohQyJ4IIUIhvSWEqAvyj4QQoZA9EUKEQnpLCFEX5B8JIUIh
eyKECIX0lhCiLsg/EkKEQvZECBEK6S0hRF2QfySECIXsiRAiFNJbQoi6IP9I
CBEK2RMhRCikt4QQdUH+kRAiFLInQohQSG8JIepC3fyjWbNmRdOnT+94OYTo
R2RPRJlrp+sskpDeEkLUhRD+0a9+9atowYIF0fnz56Pbt29HZ8+ejebMmRP9
/Oc/b/v57NmzJ9qxY0fL9r98+fLILoODg9GpU6eiuXPnRo888kjH72Wv8NRT
T0UnTpyIbt68Ga1fvz762c9+1vEyiTDInhSnTH347W9/G61evTq6fPmysUPH
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
AIRC3gKQFdSPAITC+QRAKOQtAFlB/QhAKJxPAIRC3gKQFdSPAITC+QRAKOQt
AFlB/QhAKJxPAIRC3gKQFdSPAITC+QRAKOQtAFlB/QhAKJxPAIRC3gKQFdSP
AITC+QRAKOQtAFlB/QhAKJxPAIRC3gKQFdSPAISStfPJkiVLzDvvvFPzctRb
Wdh3VAN5C0BWZK1+BKB2yjmfrFq1yvz8889DHnvjjTfM6dOnzeTJk3OPPfzw
w0a3KVOmlF3eTz/91Hz00Ud5n//iiy/sMrU+rmnLouc//vjjol73xhtvNO++
+6499v39/ebUqVNm27Zt5s4776zKfqUpczXeh/Xr15vvvvuu5u8z/kDeApAV
5C0AoZRzPnn++edttlL93z22a9cu8/vvv5umpqbcY/PmzTMtLS1BypuUt+rZ
M888Y3799ddh+1NM3rrhhhvMt99+aw4fPmyeeOIJe3/atGlm9+7d5sUXX6zK
fpSSESuBvFV/yFsAsoK8BSCUcs4nd999t223evTRR3OPtba2mj179pjVq1fn
Hlu7dm2wto5GzlvKneXmLbVrqT3rlltuqdl+kLeQD3kLQFaQtwCEUu75pL29
3bz22mv273vuucdmgVdeecUcOHAgt8xXX31lli9fnrs/ceJEs2zZMnPixAnb
H+6HH34wTz311JDXVZ1+8eLFZs2aNaa7u9ssXLgw97ift9R/Udt0femiWUD3
tS1tX8t1dXWZDRs22DK4ZaZOnWqam5tNZ2en8W/ffPPNkDLpdfy8pLalvr4+
myfdY7NmzTK9vb3m+uuvH1IWbVPtfu6mZVz5tm7dat566y3bBhhXPp+O2YoV
KxLfl3zH77HHHrP72tHRYR9XNr711luHrKdjpbys91bL6Hj7bZhpyhyXyd5+
+217/AYGBsxPP/1k2/v0uP49cuSI/Syoj6Q+P2k+e9G85d5r9XPVeym6f/vt
t5tPPvnEHvOjR4+aRx55JLdO0vFI+mxon5cuXWqPg9bfv3+//R649Uvdt0ZF
3gKQFeQtAKGUez5R/VJ1bf2t3PXZZ5/Z+qb6Gd500032cdXbn3322dw6qp/q
saefftrWbXVf9dH77rsvt4zqzqrDqo6uur6yjXvc5a2HHnrI1vUff/zxIetF
85bq2cobN998s5k9e7bNPfrXLaNrjVRuXV+mvnnqq6fxHqL7qnY83VQH131l
xJMnT5off/wxt8zKlSvtMYkrSzSvuWVUT1fG0TVvceVz7rjjDrt9l1MKyXf8
dF/vk9rH1D6p3OPeP/94KUupPDq2arP02yvTlDm67xo7Q+/Vc889Z9fRvzNn
zrSfEW3v9ddft3/rmL788supPntxecuVXe+13nPdtI9z5syx+6z3+fvvv8+t
k3Q8kj4b+vvgwYPmwQcftPul+3qNSZMmlbVvjYq8BSAryFsAQin3fPLBBx/k
fuvfvn27zU76W3V01b+VTfyM4uqgapfyX0dtYGqDcPdVd47rg+jylurTv/zy
S65tzX8+mrd27NgxZBm1Myj7uPvKDroWzd3Xc6pnR7ettgy1g7z00kv2vrKV
Mof257bbbrOP6doqVx9Pm7fUflKofI7yqG5+vtS+uduhQ4cSj1+U3i/lg3zH
T9ROpnxcTJn913HvuWtj86ntSTfloWI/e3F5y3+vlTN1W7BgQe4xvc/K9vna
D6PHo9Bnw+2Xspb/GmpHVRtaOfvWqMhbALKCvAUglHLPJ2qnUAbR38oSGsNB
f2v8hvfff9+2xaj+6ZZX/y3d7r///iGvo2X9MTXyXSPk8payXU9PTy7n5Fsv
7nXUf1F9ztx9vZbapFQ/VhuG2qvy9dlTzti8ebP9W+0kyj7Km6qTq36vuvz0
6dNjt50vbyWVz3HtW37931E7TTRvxR0/5Qy1NWqf3fiG0SwVXU9jn+jmxpxM
U2Z/GfeeR3OJo2vSVA61I/ntoEni8la0XHpdl49F/T11c22vScej0GfD7Vfc
be7cuWXtW6MibzEXApAVWctb9XRuqqeyANVQ7vnkrrvuyuUnXcvk91v7/PPP
bdvIvn37cssrn+jm9x0UtROpTczdL5S3lN9+++03274VHTsjbd7y+8cpH6mO
rf5u+lf9ydx+RKmtRPVyta/pmh71G1NWVAZ78skn7WOu7aScvOWXz6djFJfF
0uYtjR+p46e2JvXH1PnO5eV8673wwgup8la0z6Fbxr3n0YztU18+HUeVxW/n
LKScvKX3L83xKPTZcPulshcqZyn71qgaPW/pfOL6A/t03Z3/uSikFnNShBzD
ppLzfETLqd+odM2k2ol1baque63VZ5fxdxDFfDmVU4n5cvQddjfVR9VXRXVL
//pzoFZC/H7T1tZm69rqS+ceU91V9RPNC+W3Fameq++B38dLvvzyS/v/rrtf
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
y8bYxzra28zo0aPtY2nKpfKTtwAAAADUG+UUZZburs5Eyltxj19xxRVm2bKl
ufv6+6qrrkr1/LnnnmtOtbaY1paT5rzzzrOPzZz5hPnb3/4nVZlE5SdvAQAA
AKg3yindXR2mq7M9kfJW3OP/cf755sfDB3P3Dx/6wVxwwQWpnh89apRZtnSx
NWbMGHP0yGFz0UUXmebdO1OVSVR+8hYAAACAeqOc0tXZYTo72hIpb8U9fvbZ
Z5vWlhO5+/r7nHPOSfX8+8vfzV2/tXLFcvOva681//uva3OPX3LJJWbVBysK
lkvlJ28BAAAAqDfKKZ0d7aaj/VQi5a24x88//3xz6OCB3P2DP3xv26/SPu/s
2rndtm2pLWzUqFFm0aJ3rMsuu6xguVR+8hYAAACAenMmb7WZjrbWRDZvxTx+
xV/+YpYsXpi7r7+vvPLK1M87f/3rf5uZTzxm/9Z1XSd/+9WcOH7MXtdVqFwq
P3kLAAAAQL1RTlEbUfuplkTKW3GPP/3Uk+byP//ZfP7ZXkt/N82elfp5eeuN
183o0aNMy4nj9v6oUf9pFi9aaGkMw0LlUvm1H/649QAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYGT6P4JpgFk=
     "], {{0, 978}, {860, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{860, 978},
   PlotRange->{{0, 860}, {0, 978}}]], "Input",ExpressionUUID->
  "26fedffc-8db8-4c13-b4e1-68a69632adf6"],
 "\[LineSeparator]\nAll of the examples in the Help section can be copied and \
pasted into the notebook. We can modify the example code directly in the \
documentation centre as well to evaluate the outcome. Try Table, for \
instance.\n2. Type the built - in function name, a drop - down box will pop \
up. Move up and down arrow to choose the one we need. The italic",
 StyleBox[" ",
  FontSize->24,
  FontSlant->"Italic"],
 StyleBox["i",
  FontSize->24,
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 " takes us to the documentation page about the particular built-in function \
we enquire. The double down arrow will give us more built-in functions to \
choose from.\n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
AlozHOzGYn7tkasi4Sm5RcjkxZp/Hr6ii3mr1cqZ54+xxLxW9TLPH2AbyPyV
Gzf/9ELfHj17uWO+W/fuLw4YeDPFevbipY6dOk2YNJnVv/XXuaac51cduCQS
Xnmn5kSSTazBU613zLPHWGLenTwwz1/asAdYpItgPr+0XJfFfP6VV0cn3Ehk
9ak2u5P5pXxPbG74disrz1uwENO7NSsHZca83uMaYjAvv7Nqngfz645dU83z
8q0hlGlpaQgTe4xlr27Y60piXiV3zIsvKhvIPOZ5bX16dq4k83PfWRAUFGQ4
z43O/M4Lt0XC80rK9iYkq/L5BjLPXt0Q8yrpZR6h0eXw8IgJk6a4/Kh9+w5j
x0+w5eRfvZmMzciuXfsPGJCYnHb6Qm1ug4/Ybmu/+tp5OWyzFzgSbiTp7YA/
Debld07KyhcJzywsUT3DXrflybemEPPS0jLP/orYD8xv3LotPKIz8hagjs2E
64mjXh0dEhLSNixs2owYa1Yu2y3HUfznadOeeuqpx4ODu0f1yMwvNJztRmEe
3n8pVftynr+r1NWU4p55l39yYzR3RsrXzDcr62U+t7jUJfa7E1JyikuJeR9J
L/MIk7wfbrB0Hc5wg3mjDq0Q89LyKfPNzcR8k5Be5nHPJbszmDfq0AoxLy3d
zBeVkt25lnmDDq0Q89Ii5hvRxHyTkF7ms4tKyO4M5o06tELMS4uYb0SnFxQZ
dWiFmJeWXubJgWmFmJeWXuar79wlB6AVYl5axLw5rBDz0iLmzWGFmJcWMW8O
K8S8tIh5c1gh5qVFzJvDCjEvLWLeHFaIeWnpZb7qzl1yAFoh5qVFzJvDCjEv
LWLeHFaIeWn5mvmIiM7sXzy1adNm+IgRFxMu27Ny+D+DWrZ8RWMFvci5ckLL
li17937um42bDIeQmA9Y+YH5qVNfQ8GakTny5ZfDwyNYfU5egSTz3373HUgW
ayqra7p16/bYY4+1b99+ZmwsaOfMZ9qz3/9gMQpr1603nENiPjDlN+bh7Tt3
gka9zK9c/ZmKeXjHrl0FRcWH44+hkRUrP+XMs0+HDhveuXNnwzkk5gNT/mR+
05YtHphPTk0bP2Hik871Kt+c8xaQRuXJ02fE9SrRGtsZU31WTt4/P/88KCho
z779KubZVJ9usxuOIjEfgPIb87dTUvv27derV293zEdFRQ0cNCgjM+vKteud
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
mJeWT5lv+HqVDQe+VevW/BdhJrZCzEvL9PN8M7FCzEuLmDeHFWJeWsS8OawQ
89Ii5s1hhZiXFjFvDivEvLSIeXNYIealRcybwwoxLy1i3hxWiHlpEfPmsELM
S4uYN4cVYl5axLw5rBDz0iLmzWGFmJeWbuarasgBaIWYlxYxbw4rxLy0iHlz
WCHmpUXMm8MKMS8tXzOvXrvv4j1r932ybLl3IcZ3s3LyZfYMCQmJjZtV725i
rwwHmJj3qfzAfO2/Aa+qSbXWrd3nrAexksxv2epcu8/HzIu9MhxgYt6n8hvz
8I9r9+lkfsWnqxrIfNysN4l5Yp7Ln8z/uHafG+ZvJaeOH1+3dt+bc/IKi1B5
7KRm7T73zH+77bu2bcMA+egx0ek2O2d+xMiRrVq17te//6Ur1/nRY2bGIt36
cZk+Yr45SS/zZVU1usyYRyHpduoLffv16tWb1duddH28bDnfs3tU1ICBg9Iy
7CCzU6fwyVOmsvq582rX7lM1i++iBVXlzj17s3ILcKCnu3R5fdp0Vgnm0XJK
Wka37t2f69OHVeIqGBM9FpcVyO/z/PO8BdYrvecYCFaIeWn5gXlxvcrEWynu
mGdr97HywkW1a/flFBTqYh7XS99+/UND2+K7HG8wPzNuFgp/e/8DfCu30IGL
QrU0ZXFZJTHffOS3eV7lXOd6lTLML1hYu15lvcyXVFQ/+2zkrr37rDZ79Nhx
mNtVzL+zcBHaKSqrxHWHr3+weIm7XhkOMDHvUxnFPLytbu0+pDTYBIp87b6Y
2Djgx3YrLq+aNr1uRb4ePQsRySr1yjls55WrVmM3NIK8SMU8fk6YOMmWlcsq
M7PzYuNmo8GoqB5r1/9b1SvepSZkhZiXlq+ZJ/vHCjEvLWLeHFaIeWn5lHlv
Vuu7V4az1FSsEPPSonneHFaIeWnpZ/4OOQCtEPPSIubNYYWYlxYxbw4rxLy0
iHlzWCHmpUXMm8MKMS8tYt4cVoh5aellnhyYVoh5aellvrrmLjkArRDz0iLm
zWGFmJcWMW8OK8S8tHQzf+cuOQCtEPPS0jJ/584dD8xX3blLDkAr7plHQIl5
Uc2N+Z2nLscs++ZaWpZYueHQOVTmF5cZ3j2vrRDz0tLPfE2TNpgf8vayP8V+
+MXu49i8lmaf+sFabOJnek6+4d3z2goxLy13zJeXl7tkvvJOTVO3NTcfszo4
f2/9bvyE1+w+bnivGmjFFfMIIjGvlQfmS0tLGfO5ublZWVk2W+3vPiqra5q0
84pKD19MRGHNruNser+WakfljpOXDe9bQ4xQWq1WhAnBYswjfAhiZWUlMa9S
vcwXFBSYiXk2t2Oet2bnI41HDWhn2Q67FpqoFYF5hIyY9yDPzBcXF3PmMzMz
TcB8Zd0MD86BPUtyRi/67OyNNMM71kDm09PTOfMIHDHvTi6Zr66u5sw7HI68
vLzs7GzkivEm+n/rIJ8Z/PayQxcTDe9JoxihxAMXwoRgIWTEvAe5Yx7PPuzV
DQaQP8aaiXmTGaFE8skeYBEy/tKGmNfqhzq5Y158jI2n/+dCoBqhRPLJH2A5
80hTReZ5uI3mzkipmOd/foDhEh9jWXoTT+seBKoRStyIESbxAZYxz4An5rlc
Mo+ZAfdEMaVn6U08/ZuRQDVCiRsxS2zEZJ6Y10pkXkxvMFxiesPe3hDzAWuE
EjdiNsmLybzLPzAj5t29ruTpDZ/qifmANUKJSUmc5FliQ8xr5ZJ5CMPF0htx
qje6syRPQjLPJ3me2Lh8adPMmVfcYM/+il7EHhMIpnoMLBJ7pI54YrLZbBkZ
Genp6WlpaalOpTiVXKfbpAaIDyMbVTbCGGqr1Yphx+AjBAgEwoGgiK8oOfAI
Ipgn4LXSMg+xN5Y8wxHf1WOEcRtF9sjIz8zMZORDVqfSSI0qNqpshEXaEQIE
ggOPSYkBz7MamuTd6QdBHHvOPHuYFRN7JDl8whfJh2x1yiA1kviQshG2O4Vh
59M7wsGA539IKU7yYF4FPDGvuGGe/3JKxJ5lOEgaRfLZnM/gZ7KTGlV8YNk4
q2hHOBjwmJS0wGsneWKeSYs9e5JVYY9bJwbWJfkMfqYcUqOKDywbZ5e0a9N4
FkHVa3kCnsvdVK/CvtwpkXwRfq58UqNKHFuHU2zkRdq1abzLX0UR81w/3Cvx
d7IukxxOvgg/45/kI/FBZqiraHc5w2uBJ+ZFSWLPydfCz1VCalSphldEndPu
Dnia5D1Lm+Fw8vlTLVO1U1V1qnSlClKD5XJg+bCzKPCgcNQ57QS8jLSzvUh+
TZ1U8HNVkXwm1VCLqGvndkppdMkd9lryRfhVqiY1ktyNsBgFz9M7AS+jerEX
Ex6SIVIFQowRAe+dfnCl/2h0l2SQtLHQ0k7M65XLAXRJPslYuYuU0QQ1Vbkb
T7oQDJFkOIymxjySHHCSITKaDhKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKR
SCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQS
iUQikUgkEolEIpHq0f8DqpIjUQ==
     "], {{0, 249}, {252, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{194.9999999999992, Automatic},
   ImageSizeRaw->{252, 249},
   PlotRange->{{0, 252}, {0, 249}}]], "Input",ExpressionUUID->
  "0d7beea6-ba56-4f9a-8352-972d741bc5c4"],
 "\n\n3. Use ?FunctionName* (Wild Card)"
}], "Text",
 CellChangeTimes->{{3.7220817211744137`*^9, 3.722081902468755*^9}, {
   3.722082388721002*^9, 3.722082425681056*^9}, {3.724756481007382*^9, 
   3.724756508079626*^9}, {3.72475682036121*^9, 3.724756935740282*^9}, {
   3.7247569682122717`*^9, 3.724756984107386*^9}, 3.724993110384295*^9, {
   3.72595384346968*^9, 3.725953861581582*^9}, {3.727159338956779*^9, 
   3.7271593428368683`*^9}, {3.727176625447558*^9, 3.727176659043347*^9}, {
   3.742289255475523*^9, 3.742289259564259*^9}, 3.7422896848703737`*^9, {
   3.74229089541745*^9, 3.742290920989094*^9}, {3.74229099064392*^9, 
   3.74229099711025*^9}, {3.742291068110691*^9, 3.7422911695191717`*^9}, 
   3.742540559240582*^9, {3.747650091350759*^9, 3.747650091352281*^9}, {
   3.747650142973662*^9, 3.7476501429745483`*^9}, {3.750143007142778*^9, 
   3.750143016172105*^9}, {3.7502297515608387`*^9, 
   3.750229757723076*^9}},ExpressionUUID->"82d2d26f-6a47-4d29-8407-\
f20ae4b8b47d"],

Cell[BoxData[
 RowBox[{"?", "*Plot*"}]], "Input",
 CellChangeTimes->{{3.722081196282596*^9, 3.722081200562652*^9}, {
  3.7220819084067373`*^9, 3.722081910597299*^9}, {3.7220820442206173`*^9, 
  3.722082046259996*^9}, {3.7259538795417843`*^9, 3.7259539360536747`*^9}, {
  3.747650225608561*^9, 3.747650231519291*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"0d726569-c95d-4583-8672-d8183fb38446"],

Cell[TextData[Cell[BoxData[{
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["System`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["System`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["AnatomyPlot3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"AnatomyPlot3D", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["GeoListPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"GeoListPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ListPlot3D",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info1183747653065-2322202", {"ListPlot3D", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["MaxPlotPoints",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"MaxPlotPoints", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["PlotRangeClipping",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"PlotRangeClipping", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["SliceDensityPlot3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"SliceDensityPlot3D", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["ArrayPlot",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info1183747653065-2322202", {"ArrayPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["GeoRegionValuePlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"GeoRegionValuePlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ListPointPlot3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"ListPointPlot3D", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["NicholsPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"NicholsPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["PlotRangeClipPlanesStyle",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {
            "PlotRangeClipPlanesStyle", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["SliceVectorPlot3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"SliceVectorPlot3D", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["AudioPlot",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info1183747653065-2322202", {"AudioPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["GraphPlot",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info1183747653065-2322202", {"GraphPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ListPolarPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"ListPolarPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["NumberLinePlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"NumberLinePlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["PlotRangePadding",
          BaseStyle->"InformationLink",
          ButtonData:>{
           "Info1183747653065-2322202", {"PlotRangePadding", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["SphericalPlot3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"SphericalPlot3D", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["BodePlot",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info1183747653065-2322202", {"BodePlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["GraphPlot3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"GraphPlot3D", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ListSliceContourPlot3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"ListSliceContourPlot3D", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["NyquistPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"NyquistPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["PlotRegion",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info1183747653065-2322202", {"PlotRegion", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["StackedDateListPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"StackedDateListPlot", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["ChromaticityPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"ChromaticityPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["JuliaSetPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"JuliaSetPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ListSliceDensityPlot3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"ListSliceDensityPlot3D", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ParametricPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"ParametricPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["PlotStyle",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info1183747653065-2322202", {"PlotStyle", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["StackedListPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"StackedListPlot", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["ChromaticityPlot3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"ChromaticityPlot3D", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LayeredGraphPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"LayeredGraphPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ListSliceVectorPlot3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"ListSliceVectorPlot3D", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ParametricPlot3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"ParametricPlot3D", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["PlotTheme",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info1183747653065-2322202", {"PlotTheme", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["StreamDensityPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"StreamDensityPlot", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["CommunityGraphPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"CommunityGraphPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LineIntegralConvolutionPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {
            "LineIntegralConvolutionPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ListStepPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"ListStepPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["Plot",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info1183747653065-2322202", {"Plot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["PolarPlot",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info1183747653065-2322202", {"PolarPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["StreamPlot",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info1183747653065-2322202", {"StreamPlot", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["ContourPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"ContourPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ListContourPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"ListContourPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ListStreamDensityPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"ListStreamDensityPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["Plot3D",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info1183747653065-2322202", {"Plot3D", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ProbabilityPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"ProbabilityPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["SystemModelPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"SystemModelPlot", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["ContourPlot3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"ContourPlot3D", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ListContourPlot3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"ListContourPlot3D", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ListStreamPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"ListStreamPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["Plot3Matrix",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"Plot3Matrix", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ProbabilityScalePlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"ProbabilityScalePlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["TimelinePlot",
          BaseStyle->"InformationLink",
          ButtonData:>{
           "Info1183747653065-2322202", {"TimelinePlot", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["DateListLogPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"DateListLogPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ListCurvePathPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"ListCurvePathPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ListSurfacePlot3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"ListSurfacePlot3D", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["PlotDivision",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"PlotDivision", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["QuantilePlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"QuantilePlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["TreePlot",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info1183747653065-2322202", {"TreePlot", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["DateListPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"DateListPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ListDensityPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"ListDensityPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ListVectorDensityPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"ListVectorDensityPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["PlotJoined",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info1183747653065-2322202", {"PlotJoined", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["RegionPlot",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info1183747653065-2322202", {"RegionPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["VectorDensityPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"VectorDensityPlot", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["DateListStepPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"DateListStepPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ListDensityPlot3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"ListDensityPlot3D", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ListVectorPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"ListVectorPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["PlotLabel",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info1183747653065-2322202", {"PlotLabel", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["RegionPlot3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"RegionPlot3D", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["VectorPlot",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info1183747653065-2322202", {"VectorPlot", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["DensityPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"DensityPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ListLineIntegralConvolutionPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {
            "ListLineIntegralConvolutionPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ListVectorPlot3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"ListVectorPlot3D", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["PlotLabels",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info1183747653065-2322202", {"PlotLabels", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ReliefPlot",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info1183747653065-2322202", {"ReliefPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["VectorPlot3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"VectorPlot3D", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["DensityPlot3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"DensityPlot3D", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ListLinePlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"ListLinePlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LogLinearPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"LogLinearPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["PlotLayout",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info1183747653065-2322202", {"PlotLayout", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["RevolutionPlot3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"RevolutionPlot3D", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["WaveletImagePlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"WaveletImagePlot", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["DiscretePlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"DiscretePlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ListLogLinearPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"ListLogLinearPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LogLogPlot",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info1183747653065-2322202", {"LogLogPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["PlotLegends",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"PlotLegends", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["RootLocusPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"RootLocusPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["WaveletListPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"WaveletListPlot", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["DiscretePlot3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"DiscretePlot3D", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ListLogLogPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"ListLogLogPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LogPlot",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info1183747653065-2322202", {"LogPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["PlotMarkers",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"PlotMarkers", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["RulePlot",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info1183747653065-2322202", {"RulePlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["WaveletMatrixPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"WaveletMatrixPlot", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["FeatureSpacePlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"FeatureSpacePlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ListLogPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"ListLogPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["MandelbrotSetPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"MandelbrotSetPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["PlotPoints",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info1183747653065-2322202", {"PlotPoints", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["SingularValuePlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"SingularValuePlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["$PlotTheme",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info1183747653065-2322202", {"$PlotTheme", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["FeatureSpacePlot3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"FeatureSpacePlot3D", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ListPlot",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info1183747653065-2322202", {"ListPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["MatrixPlot",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info1183747653065-2322202", {"MatrixPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["PlotRange",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info1183747653065-2322202", {"PlotRange", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["SliceContourPlot3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"SliceContourPlot3D", "System`"}},
          ButtonNote->"System`"], ""}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.15833333333333333`]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]], "\n", 
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["Global`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["Global`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["Plot3d",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info1183747653065-2322202", {"Plot3d", "Global`"}},
          ButtonNote->"Global`"]}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.95]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]], "\n", 
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["GeneralUtilities`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["GeneralUtilities`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["BenchmarkPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {
            "BenchmarkPlot", "GeneralUtilities`"}},
          ButtonNote->"GeneralUtilities`"], 
         ButtonBox["BytePlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"BytePlot", "GeneralUtilities`"}},
          ButtonNote->"GeneralUtilities`"], 
         ButtonBox["CallGraphPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {
            "CallGraphPlot", "GeneralUtilities`"}},
          ButtonNote->"GeneralUtilities`"], 
         ButtonBox["LayerPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {"LayerPlot", "GeneralUtilities`"}},
          ButtonNote->"GeneralUtilities`"], 
         ButtonBox["StaticCallGraphPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1183747653065-2322202", {
            "StaticCallGraphPlot", "GeneralUtilities`"}},
          ButtonNote->"GeneralUtilities`"]}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.19]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]}], "Print", "InfoCell",
 CellChangeTimes->{
  3.747649466047122*^9},ExpressionUUID->"b45c95b4-40f1-43e0-a9e7-\
f8cacc5af1af"]], "Text",
 CellChangeTimes->{
  3.7476502156882067`*^9},ExpressionUUID->"241415d4-bcdc-46a2-8f83-\
e7fd1ab5b9ef"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Part 4: Principles of the Wolfram Language:", "Chapter",
 CellChangeTimes->{3.7462486386026583`*^9},
 TextAlignment->Center,ExpressionUUID->"79434523-89ce-4d5f-ad58-260ea896bb74"],

Cell[CellGroupData[{

Cell["\<\
1. There are several underlying principles of the Wolfram Language:\
\>", "Subchapter",
 CellChangeTimes->{
  3.746248659483944*^9},ExpressionUUID->"f928e834-9c1e-4c4a-9135-\
250eb7e5b5cf"],

Cell[TextData[{
 StyleBox["i. All built-in function names are CamelCase: \n",
  FontColor->RGBColor[0.5, 0, 0.5]],
 StyleBox["Built-in functions drop-down box", "Text",
  FontVariations->{"Underline"->True},
  FontColor->GrayLevel[0]],
 StyleBox[", ", "Text",
  FontColor->GrayLevel[0]],
 StyleBox["auto-completion", "Text",
  FontVariations->{"Underline"->True},
  FontColor->GrayLevel[0]],
 StyleBox[", and ", "Text",
  FontColor->GrayLevel[0]],
 StyleBox["templates", "Text",
  FontVariations->{"Underline"->True},
  FontColor->GrayLevel[0]],
 StyleBox[" are useful. One click on the Italic [i] blue icon will take you \
to the documentation page regarding how to use the particular function.", 
  "Text",
  FontColor->GrayLevel[0]],
 StyleBox[" ",
  FontColor->GrayLevel[0]]
}], "Section",
 CellChangeTimes->{
  3.746248686853282*^9, {3.7499882239993258`*^9, 
   3.749988224926285*^9}},ExpressionUUID->"b4a2c973-9765-488a-be50-\
4a6a055445d5"],

Cell[TextData[StyleBox["ii. Expressions to be used inside a built-in function \
are enclosed by square bracket [ ], divided by \[OpenCurlyDoubleQuote] , \
\[OpenCurlyDoubleQuote] ",
 FontColor->RGBColor[0.5, 0, 0.5]]], "Section",
 CellChangeTimes->{
  3.7462487652120447`*^9, {3.7499881777579613`*^9, 3.749988180294086*^9}, {
   3.749988270478386*^9, 
   3.7499883094066467`*^9}},ExpressionUUID->"c031d126-5748-4203-a007-\
1f8b73f01340"],

Cell[TextData[StyleBox["iii. Lists (ranges or domains) to be used inside a \
built-in function are enclosed by curly braces { }, divided by \
\[OpenCurlyDoubleQuote] , \[OpenCurlyDoubleQuote]",
 FontColor->RGBColor[0.5, 0, 0.5]]], "Section",
 CellChangeTimes->{
  3.746248779275037*^9, {3.749988331502696*^9, 
   3.7499883402626677`*^9}},ExpressionUUID->"d6c4883b-ffc6-47de-b244-\
ee85cb89b514"],

Cell[TextData[StyleBox["iv. Options are linked using \
\[OpenCurlyDoubleQuote]->\[CloseCurlyDoubleQuote]",
 FontColor->RGBColor[0.5, 0, 0.5]]], "Section",
 CellChangeTimes->{
  3.74624879354883*^9, {3.746356530617859*^9, 3.746356531994022*^9}, 
   3.7493552656512833`*^9, 
   3.7502297837156754`*^9},ExpressionUUID->"be72851a-85e3-4fb0-bddf-\
c4210e5ad638"],

Cell[TextData[StyleBox["v. Shift+Enter to evaluate",
 FontColor->RGBColor[0.5, 0, 0.5]]], "Section",
 CellChangeTimes->{
  3.746248806702615*^9},ExpressionUUID->"8ddcec75-c94b-47bb-94a4-\
686853d6f440"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["2. More on the \[OpenCurlyQuote]building blocks\[CloseCurlyQuote] \
of the Wolfram Language: everything is an expression",
  FontColor->GrayLevel[0]],
 "\n",
 StyleBox["Previously we talked the major type of tokens the Wolfram Language \
recognises when they are input into the notebook for analysis and \
interpretation. Major type of tokens - symbols, numbers, and strings - are \
part of the Atomic Expression, which is a fundamental building block of the \
Wolfram Language. Object[expression] is the form Mathematica takes for \
various functions. An object is known as HEAD, which is useful to find out \
what kind of thing the expression is.    ", "Text",
  FontColor->GrayLevel[0]]
}], "Subchapter",
 CellChangeTimes->{
  3.746252269442521*^9, {3.7501433135813828`*^9, 
   3.750143336413052*^9}},ExpressionUUID->"76c794db-46cd-4a82-95e9-\
615073ea1d91"],

Cell[TextData[StyleBox["i. Atomic Expression: basic building blocks which \
cannot be further divided by using Part[ ]; use Head[ ] to identify what type \
of expressions it is.", "Section",
 FontColor->RGBColor[0.5, 0, 0.5]]], "Text",
 CellChangeTimes->{
  3.746252758387397*^9, {3.746255399753297*^9, 3.746255478473982*^9}, {
   3.7465141668649187`*^9, 
   3.746514174249763*^9}},ExpressionUUID->"21abb778-5611-4f56-8307-\
a2c155aca1ba"],

Cell[TextData[StyleBox["<1>.symbol: x31, built-in function", "Subsection"]], \
"Text",
 CellChangeTimes->{
  3.74625278386913*^9, 3.746356541714013*^9, {3.746514182281589*^9, 
   3.74651418257734*^9}, 
   3.750049821073224*^9},ExpressionUUID->"dfe4fd01-e212-4f84-a43b-\
379e4ae4e463"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.746252851770165*^9, 3.746252860626981*^9}, 
   3.750418430606744*^9},ExpressionUUID->"0c311e8b-b536-4bc6-a6b6-\
887c33b29608"],

Cell[TextData[StyleBox["<2>. numbers: 5, 3.1416", "Subsection"]], "Text",
 CellChangeTimes->{{3.746256179279976*^9, 3.7462562141421547`*^9}, {
  3.746514191721354*^9, 
  3.7465141920093517`*^9}},ExpressionUUID->"02bd7b5d-a5d6-4daa-a03f-\
686b9d1258ba"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.746256234894302*^9, 3.746256258663411*^9}, 
   3.750418433407112*^9},ExpressionUUID->"4dbe15ba-161d-4049-b65d-\
11b47a42467e"],

Cell[TextData[StyleBox["<3>. strings: \[OpenCurlyDoubleQuote]winter\
\[CloseCurlyDoubleQuote]", "Subsection"]], "Text",
 CellChangeTimes->{
  3.746256486569332*^9, {3.746256539800274*^9, 3.74625654331985*^9}, {
   3.746514194977428*^9, 
   3.746514195161371*^9}},ExpressionUUID->"8a4565c8-c852-41ef-a6b0-\
fee855552185"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.74625655095231*^9, 3.746256601153714*^9}, 
   3.7504184372807913`*^9},ExpressionUUID->"660607fe-eea0-441f-b091-\
72f363e70473"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["  ", "Text",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox["  ii. Normal Expressions: it takes the form of h[", "Section",
  FontColor->RGBColor[0.5, 0, 0.5]],
 StyleBox[Cell[BoxData[
  FormBox[
   SubscriptBox["e", "1"], TraditionalForm]], "Section",
  FontColor->RGBColor[0.5, 0, 0.5],ExpressionUUID->
  "3b26c771-9337-4008-9d31-197809c48e77"], "Section"],
 StyleBox[", ", "Section",
  FontColor->RGBColor[0.5, 0, 0.5]],
 StyleBox[Cell[BoxData[
  FormBox[
   SubscriptBox["e", "2"], TraditionalForm]], "Section",
  FontColor->RGBColor[0.5, 0, 0.5],ExpressionUUID->
  "b50eb998-5c96-4162-999f-d8f31a8f3da3"], "Section"],
 StyleBox[", ", "Section",
  FontColor->RGBColor[0.5, 0, 0.5]],
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{"...", ".", 
    SubscriptBox["e", "n"]}], TraditionalForm]], "Section",
  FontColor->RGBColor[0.5, 0, 0.5],ExpressionUUID->
  "a2cff87f-3df2-4ff8-87d2-5b3cb432700e"], "Section"],
 StyleBox["] (h is the head of the expression, the ", "Section",
  FontColor->RGBColor[0.5, 0, 0.5]],
 StyleBox[Cell[BoxData[
  FormBox[
   SubscriptBox["e", "i"], TraditionalForm]], "Section",
  FontColor->RGBColor[0.5, 0, 0.5],ExpressionUUID->
  "7907f36c-52ef-4996-ab96-a662ef47b58d"], "Section"],
 StyleBox[" are the elements), use Head and Part to explore more into the \
expression.", "Section",
  FontColor->RGBColor[0.5, 0, 0.5]]
}], "Subsection",
 CellChangeTimes->{{3.746258781928384*^9, 3.746258875166445*^9}, {
  3.7463506551273813`*^9, 3.746350657711359*^9}, {3.746514292921986*^9, 
  3.7465142949944477`*^9}},ExpressionUUID->"8e61a559-58e3-47b0-ba37-\
6ebdcb5b2234"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.746350161356954*^9, 3.7463502451418247`*^9}, 
   3.750418441967269*^9},ExpressionUUID->"6a7a3314-5173-47e0-9c8a-\
3457a71eb3bc"],

Cell[TextData[StyleBox["iii. Compound Expression and Nesting Expressions: \
built upon a number of/ a combination of atomic expression and normal \
expressions.", "Section",
 FontColor->RGBColor[0.5, 0, 0.5]]], "Text",
 CellChangeTimes->{
  3.746350275746464*^9, {3.746514300210305*^9, 
   3.746514302833869*^9}},ExpressionUUID->"c202e51a-267b-40f8-a835-\
91cb7aa6dc98"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.746350412432198*^9, {3.746350448841154*^9, 3.746350613471466*^9}, 
   3.750418445367919*^9},ExpressionUUID->"80f81723-124f-4e18-be25-\
a2a2b6dddc21"],

Cell[TextData[StyleBox["<1>. InputForm: show users what would be put in to \
create the expression. ", "Subsubsection",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{
  3.746350697915471*^9, {3.746514339578392*^9, 
   3.746514339682116*^9}},ExpressionUUID->"218ec346-30f6-40ed-9c79-\
4b056a02abc8"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7463507989921713`*^9, 3.746350864904812*^9}, 
   3.750418449751802*^9},ExpressionUUID->"cef91390-f39f-4b9c-a6a5-\
d2f1cec1bbe6"],

Cell[TextData[StyleBox["<2>. FullForm: show users the internal representation \
of an atomic or a normal expression.", "Subsubsection",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{
  3.746350757698162*^9, {3.746514349866159*^9, 
   3.746514350322152*^9}},ExpressionUUID->"7dcb6bfc-5dc5-4b39-8f4a-\
eabb88adf4ba"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.746350776636746*^9, {3.746350914233117*^9, 3.746350917173892*^9}, 
   3.75041846027969*^9},ExpressionUUID->"472f0481-c48a-4527-b0d2-\
a3bc2424bb94"],

Cell[TextData[StyleBox["<3>. TreeForm: show users the internal representation \
for more complicated expressions.", "Subsubsection",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{
  3.7463510401513977`*^9, {3.746514360610696*^9, 
   3.7465143612666063`*^9}},ExpressionUUID->"4a5c17ed-ac37-4c9c-b136-\
85d69ac4dfa4"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.746351066633738*^9, 3.746351082594112*^9}, 
   3.750418464335045*^9},ExpressionUUID->"69771af4-59f6-4839-8e31-\
b67365bacf09"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Exercises:\nfind out why the evaluation of the following set of \
codes is not successful?",
  FontColor->RGBColor[1, 0, 1]],
 " "
}], "Section",
 CellChangeTimes->{{3.746351482595911*^9, 3.746351535940422*^9}, {
  3.750418523510612*^9, 
  3.750418528095066*^9}},ExpressionUUID->"ee5cf99c-da92-481f-9b08-\
8ce1941ca7c3"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.749988798513426*^9, 3.749988807489667*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"42049df3-aa2e-4120-98c5-dcdb9032753a"],

Cell[BoxData[
 RowBox[{"Sin", "[", 
  RowBox[{"\[Pi]", ",", " ", "4"}], "]"}]], "Input",
 CellChangeTimes->{3.746351612065102*^9},
 CellLabel->"In[68]:=",ExpressionUUID->"b9b305fb-b8ac-407d-8966-a737606165c7"],

Cell[BoxData[
 RowBox[{"Mean", "[", 
  RowBox[{"1", ",", " ", "3", ",", " ", "5", ",", " ", "7"}], "]"}]], "Input",
 CellChangeTimes->{{3.7499886544564133`*^9, 3.749988686145143*^9}, {
  3.7499887201768703`*^9, 3.749988726897089*^9}, {3.749988832033699*^9, 
  3.7499888556896553`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"b5a9b23b-30e4-4e0a-aa0e-26eb66b40dcd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Total", "[", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", " ", "4", ",", " ", "8", ",", " ", "13", ",", " ", "19", 
     ","}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747386775225677*^9, 3.747386900330453*^9}, {
  3.747387048381369*^9, 3.747387136595868*^9}},
 EmphasizeSyntaxErrors->True,
 CellLabel->"In[70]:=",ExpressionUUID->"bea603cb-df46-4161-a5d8-dfa80c04ff21"],

Cell[BoxData[
 RowBox[{
  RowBox[{"InterPolation", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "2", ",", " ", "4", ",", " ", "6", ",", " ", "8", ",", " ", "10"}], 
     "}"}], ",", "3.5"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "find", " ", "an", " ", "interpolation", " ", "data", " ", "at", " ", 
    "the", " ", "point", " ", "of", " ", "x"}], "*)"}]}]], "Input",
 CellChangeTimes->{
  3.7463516349291277`*^9, {3.7499889435961437`*^9, 3.749988992986774*^9}, {
   3.749989594118808*^9, 3.749989687471261*^9}, {3.749989735407796*^9, 
   3.749989739151763*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"56695f44-f988-43d7-adc9-5f6f73d113ca"],

Cell[BoxData[
 RowBox[{"reverse", "[", 
  RowBox[{"{", 
   RowBox[{"3", ",", " ", "5", ",", " ", "7"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.746351649145761*^9, 3.746351664853449*^9}, {
   3.746356817939609*^9, 3.746356831315844*^9}, {3.746357000509411*^9, 
   3.7463570024609632`*^9}, 3.746357039577979*^9, {3.74635708071673*^9, 
   3.7463570828929863`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"09dfa62c-e115-418a-b435-5ade2ae5e78a"],

Cell[BoxData[
 RowBox[{"ToUppercase", "[", "\"\<Alice fell into a rabbit hole\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{3.746351684849118*^9},
 CellLabel->"In[72]:=",ExpressionUUID->"a2594845-2697-4c15-b781-e52a0184bbf4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Length", "[", "\"\<Alice fell into a rabbit hole\>\"", "]"}], 
  RowBox[{"(*", 
   RowBox[{"It", " ", "is", " ", "a", " ", 
    RowBox[{"string", "!"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.749989458128539*^9, 3.7499894723499737`*^9}, {
  3.749989771577745*^9, 3.749989781280401*^9}, {3.7499903772369003`*^9, 
  3.749990390803504*^9}, {3.750070790828393*^9, 3.750070795128867*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"f85383cd-708d-4830-8ecd-d981a3ff271d"],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"x", "-", "1"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "1", ",", " ", "5", ","}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.746351708537922*^9, 3.746351723837941*^9}, {
  3.746351896910852*^9, 3.746351915590856*^9}, {3.749988587312942*^9, 
  3.7499886005921917`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"2164a5e0-47d8-4e60-9690-4c57a40b4e1f"],

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"Range", "[", "30", "]"}]}]], "Input",
 CellChangeTimes->{
  3.7463517196505404`*^9, {3.7499885658322897`*^9, 3.749988567151898*^9}},
 EmphasizeSyntaxErrors->True,
 CellLabel->"In[75]:=",ExpressionUUID->"6057ea73-334d-4f0a-9305-23da2c5a0967"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot3d", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"Sin", "[", "xy", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "5"}], ",", " ", "5"}], "}"}]}], "]"}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.7463518728213778`*^9, 3.746351876046296*^9}, {
  3.746351919302442*^9, 3.746351942454836*^9}, {3.7463519767346354`*^9, 
  3.7463519778068027`*^9}, {3.749989506680529*^9, 3.7499895511824083`*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"45527699-269b-432c-ba03-04c83840222a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"StreanPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          RowBox[{"x", "^", "2"}], "+", "y"}], ",", 
         RowBox[{"1", "+", "x", "-", 
          RowBox[{"y", "^", "2"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"-", "7"}], ",", "7"}], "}"}], ",", 
       RowBox[{"mesh", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Range", "[", "10", "]"}]}]}]}]}], "]"}], ",", " ", 
    RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{
  3.746351982537032*^9, {3.747386723454365*^9, 3.7473867392186613`*^9}},
 EmphasizeSyntaxErrors->True,
 CellLabel->"In[76]:=",ExpressionUUID->"40736671-6e67-4bcb-9950-43bcba34bdc0"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Part 5: More on data manipulation and visualisation with Mathematica\
\>", "Chapter",
 CellChangeTimes->{{3.746356675834546*^9, 3.7463567003227863`*^9}, {
  3.746429813428019*^9, 3.746429815796109*^9}, {3.747394054532949*^9, 
  3.747394062436658*^9}},
 TextAlignment->Center,ExpressionUUID->"352ee97a-3778-45e5-ba7e-5980c835525b"],

Cell[CellGroupData[{

Cell[, "Subchapter",ExpressionUUID->"5da2e5ef-2eff-40b4-92c9-ead3640e3ade"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["i. Use the built-in functions to create, display, and \
operate on characters, strings and texts. ", "Section",
 FontColor->RGBColor[0.5, 0, 0.5]]], "Subsubsubsubsection",
 CellChangeTimes->{{3.746429927049637*^9, 3.746429957221364*^9}, {
   3.746431604606121*^9, 3.746431608102355*^9}, {3.746513249460491*^9, 
   3.746513257116458*^9}, 3.746514410426918*^9, {3.7465266896949873`*^9, 
   3.746526691663108*^9}, {3.746526900032037*^9, 
   3.746526963626788*^9}},ExpressionUUID->"5d0122e1-cf7a-4ba6-810a-\
da51ab1b1fa6"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.746431511338327*^9, 
  3.7504184732163*^9},ExpressionUUID->"39399072-44f3-4903-a696-ac7744c5816b"],

Cell["\<\
Now let\[CloseCurlyQuote]s try some string manipulation. There are a large \
number of string/text manipulation built-in functions in Mathematica.\
\>", "Text",
 CellChangeTimes->{{3.74651017280186*^9, 
  3.746510222130797*^9}},ExpressionUUID->"2811acaf-7ec8-4cf2-b19d-\
69b890b0c35b"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.749990145012726*^9, {3.750143495423884*^9, 3.750143515918013*^9}, 
   3.750418479392848*^9},ExpressionUUID->"819419f1-1d60-45ac-ba88-\
e31496d45b61"],

Cell["\<\
Let\[CloseCurlyQuote]s try a larger text by using a built-in function to \
import information of a selected entry from Wikipedia. The evaluated is too \
long to show everything in the notebook. Therefore we use \[OpenCurlyQuote];\
\[CloseCurlyQuote] to suppress the outcome.\
\>", "Text",
 CellChangeTimes->{
  3.746513036970187*^9},ExpressionUUID->"2c0b1c6b-b3b6-4899-9ac9-\
ecf2083ba12e"]
}, Open  ]],

Cell[TextData[StyleBox["Question: modify the previous code to make a word \
cloud of the first 1000 words from Wikipedia article on panda NOT including \
stopwords", "Text",
 FontColor->RGBColor[1, 0, 1]]], "Section",
 CellChangeTimes->{{3.750230081824998*^9, 3.750230158824398*^9}, {
  3.7504185356230288`*^9, 3.750418541654868*^9}, {3.750418607167316*^9, 
  3.750418612271426*^9}},ExpressionUUID->"031a17c9-aaf3-4df1-a557-\
c385961d4207"],

Cell[CellGroupData[{

Cell["Answer:", "Section",
 CellChangeTimes->{{3.750403541618113*^9, 
  3.750403551650765*^9}},ExpressionUUID->"2e06ee55-4ba4-4af6-a626-\
acb54d38ef1c"],

Cell[BoxData[""], "Input",ExpressionUUID->"6579f009-30b0-4a47-971a-9d7b77b17ffe"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. Lists (numerical data):", "Subchapter",
 CellChangeTimes->{{3.7465135039250097`*^9, 3.7465135237892838`*^9}, {
  3.7501445292994347`*^9, 
  3.7501445550353193`*^9}},ExpressionUUID->"fb7563a4-22e7-4b26-aaed-\
d8fd1874c84b"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["i.  Lists (for vectors): lists are a basic way to \
collect the input data (hereafter \[OpenCurlyDoubleQuote]elements\
\[CloseCurlyDoubleQuote])", "Section",
 FontColor->RGBColor[0.5, 0, 0.5]]], "Subsubsection",
 CellChangeTimes->{{3.721996345885935*^9, 3.721996349450308*^9}, {
   3.722056837070366*^9, 3.7220568395708714`*^9}, {3.7226632547698917`*^9, 
   3.722663256009859*^9}, {3.722756067500162*^9, 3.722756139635888*^9}, {
   3.72397613279583*^9, 3.723976137969936*^9}, {3.724065883784955*^9, 
   3.724065942112582*^9}, {3.724068520210312*^9, 3.7240685793906927`*^9}, {
   3.7244813236844797`*^9, 3.7244813271562853`*^9}, 3.7244818969760723`*^9, {
   3.724482497435994*^9, 3.724482520411251*^9}, {3.724482739745694*^9, 
   3.72448278279396*^9}, {3.7244847427545547`*^9, 3.724484788106304*^9}, 
   3.724486417982349*^9, {3.7244864827897167`*^9, 3.72448648699728*^9}, {
   3.724486575477528*^9, 3.724486577061583*^9}, {3.724486927115398*^9, 
   3.724486943153965*^9}, {3.730543680003187*^9, 3.730543707787533*^9}, {
   3.746513667302647*^9, 
   3.746513667958227*^9}},ExpressionUUID->"28d8ffce-f462-4590-9d8c-\
a44f506ef88a"],

Cell[TextData[StyleBox["<1>. In a list, the elements do not necessarily have \
to be of the same element type, it can be a set of numbers, a string , an \
image, even other lists. Unlike some other programming languages, the Wolfram \
Language does not automatically convert the elements in a list into the same \
type:", "Subsubsection"]], "Text",
 CellChangeTimes->{
  3.724484796979632*^9, {3.724648348220187*^9, 3.724648380548091*^9}, {
   3.72465153068511*^9, 3.724651532676805*^9}, {3.724666938500456*^9, 
   3.724666943436225*^9}, {3.7246671892742968`*^9, 3.7246671908584023`*^9}, {
   3.72475926998067*^9, 3.724759322316757*^9}, {3.7271594303412046`*^9, 
   3.727159452117275*^9}, 3.727783316730483*^9, {3.73054372128366*^9, 
   3.730543767675861*^9}, {3.746514505922942*^9, 
   3.7465145103314857`*^9}},ExpressionUUID->"cdbf0cdf-3914-4a49-91f0-\
5c5d4ca90002"],

Cell["\<\
The following list has a mixed dataset of numbers, a string, an image, and \
two Boolean expressions.  \
\>", "Text",
 CellChangeTimes->{{3.72803906544913*^9, 3.728039149329802*^9}, {
   3.730543525570455*^9, 3.730543574082883*^9}, 3.730543773603775*^9, {
   3.750144697068372*^9, 
   3.750144719308281*^9}},ExpressionUUID->"8bccdf12-be6f-4062-b3b8-\
584b501949da"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.742543879226694*^9, 3.74254388355267*^9}, 
   3.7504186318886766`*^9},ExpressionUUID->"bf0bc13a-6be9-4abc-aeaf-\
f31af622d497"],

Cell[TextData[StyleBox["<2>. However most of the time, we deal with a list (a \
vector) of the same element type. We can perform calculation and \
manipulation.", "Subsection"]], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQvTmuf8mj/a8dnUPz1oDoewYnt4LonjdGO0G0S9bD
8sdAOsfsXRWI7nfLXAqiK/oaloFoJYY9Ek+A9I2S22D6judd2adAmmvVDTkQ
bfUzt8P0wGvHjkLxThBtfvTCBBD96bHpRBD9K1FRJwtIT+WT0wXR3iyhmSD6
+rTDYPrd75X5INpt+q0yEB1VOnHpxkOvHVPu5a4A0cGvNXb/P/LaUeRiC5i+
k95bU3T6teOu/dWNIHr255YDIY+A8tO8DoLofS+8eZYB6emfcwRANI81D8eC
x68dZT7s5wTRUZOLL7x4+drx39dKML3pyXm+3g9AdSVLBUH0ebEgORDdMq9V
AUQL2LNogWgxFy0dEF136bYxiK56bGIGogHktMpy
  "],ExpressionUUID->"8e6e5539-b8ad-4138-bd1c-6fd202272819"],

Cell["\<\
Let\[CloseCurlyQuote]s re-visit what we just learned regarding using built-in \
functions to generate a list (a vector). Notice that we introduce a new \
function here called Array [ ].\
\>", "Text",
 CellChangeTimes->{{3.724652104960335*^9, 3.724652218528282*^9}, {
   3.7247597843850613`*^9, 3.72475986656857*^9}, {3.7247600289117403`*^9, 
   3.724760029767465*^9}, {3.727159511413666*^9, 3.727159550342214*^9}, {
   3.750000976457758*^9, 3.750001048715822*^9}, 
   3.750418686360034*^9},ExpressionUUID->"62d5dda2-aaa0-46e6-b9b2-\
0ebdced83d61"],

Cell[BoxData[""], "Input",ExpressionUUID->"d8d9d84e-46db-4fb9-a6bf-406f46dae9d4"],

Cell[TextData[StyleBox["Question: re-write vec1 using Table to generate the \
outcome of vec4",
 FontColor->RGBColor[1, 0, 1]]], "Text",
 CellChangeTimes->{{3.7500012178712034`*^9, 
  3.7500012410973945`*^9}},ExpressionUUID->"bf018b6e-95d5-4e98-bc0c-\
04edbb62d9db"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7500837770708647`*^9, 3.7500837893723736`*^9}, 
   3.750418712064742*^9},ExpressionUUID->"ce051b56-03c9-434c-9635-\
ee8b6a93c30e"],

Cell["We can perform vector calculation, such as:", "Text",
 CellChangeTimes->{{3.742544221361657*^9, 
  3.7425442424500237`*^9}},ExpressionUUID->"b1401342-cef9-4e17-bd5f-\
b778c774ff20"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.742544260692244*^9, 3.742544282514205*^9}, {
   3.742544608350026*^9, 3.742544654084242*^9}, {3.7427279614906607`*^9, 
   3.742728010569727*^9}, {3.742728091083742*^9, 3.742728131339911*^9}, {
   3.7427282136595182`*^9, 3.7427282158269167`*^9}, {3.742728331085207*^9, 
   3.742728333971471*^9}, {3.742729030560763*^9, 3.742729031479895*^9}, {
   3.742729078208872*^9, 3.742729209528686*^9}, {3.742729242003627*^9, 
   3.7427292444963627`*^9}, {3.749996819893303*^9, 3.74999683006697*^9}, {
   3.750001778514696*^9, 3.750001787923315*^9}, 
   3.7504187160338573`*^9},ExpressionUUID->"f074a50c-1a3c-4a39-81df-\
ff689ef23fe6"],

Cell[TextData[StyleBox["<3>. In addition to vector calculation, we can \
perform operations on lists, such as extracting various parts out of a \
list.", "Subsection"]], "Text",
 CellChangeTimes->{{3.724483950735835*^9, 3.7244839723367147`*^9}, {
   3.7244865116377974`*^9, 3.72448651994177*^9}, {3.725954617255369*^9, 
   3.725954660879628*^9}, {3.7271648769127502`*^9, 3.727164878592723*^9}, 
   3.727165555995782*^9, {3.7281311018725567`*^9, 3.72813115665661*^9}, {
   3.742291623720025*^9, 3.742291626607523*^9}, {3.742544524571494*^9, 
   3.742544566651783*^9}, {3.742547161265641*^9, 3.742547163873596*^9}, 
   3.742557145353301*^9, {3.7465145925318537`*^9, 
   3.746514597171908*^9}},ExpressionUUID->"19044e3e-b809-4b56-bac0-\
11e594252e4d"],

Cell["\<\
We can use different built-in functions to manipulate a vector:\
\>", "Text",
 CellChangeTimes->{{3.727172320193164*^9, 3.727172390782357*^9}, {
  3.730547071356337*^9, 3.7305470904042797`*^9}, {3.730612926496662*^9, 
  3.730613014138612*^9}, {3.742292462958124*^9, 3.742292527677972*^9}, {
  3.7427050353403378`*^9, 3.742705038596383*^9}, {3.7499970129659996`*^9, 
  3.749997044344006*^9}},ExpressionUUID->"40feff47-e7ce-4d9a-a746-\
de1b0c2aea35"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.749997116103079*^9, 3.749997240111603*^9}, {
   3.750072737085788*^9, 3.75007276190055*^9}, {3.750072802469664*^9, 
   3.750072812029663*^9}, 
   3.7504187228977337`*^9},ExpressionUUID->"d43a131d-dd4e-4818-a0b7-\
5c66330cea3c"],

Cell["\<\
Part is such a convenient and frequently used built-in function that it has \
its own shorthand [[ ]]. \
\>", "Text",
 CellChangeTimes->{
  3.749997424231385*^9},ExpressionUUID->"167ee3b7-9dd5-4f1a-b5aa-\
f39fa65922de"],

Cell[TextData[{
 StyleBox["Question: what is the outcome of vec1[[0]]? What does this tell us \
about the ",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["index",
  FontSize->18,
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[" in the Wolfram Language?",
  FontColor->RGBColor[1, 0, 1]]
}], "Text",
 CellChangeTimes->{
  3.742709195447014*^9, {3.7499973352676134`*^9, 
   3.7499973505265117`*^9}},ExpressionUUID->"bdbe59fa-0b55-4b72-ac39-\
c0fb6ec5704b"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7499973578429585`*^9, 3.7499973673298197`*^9}, 
   3.750418729209466*^9},ExpressionUUID->"5ac48bc7-06a0-47f9-be52-\
3a4766c52aed"],

Cell[TextData[StyleBox["<4>. We can visualise the data from the previous \
outcome. We will re-visit data visualisation later.", "Subsection"]], "Text",
 CellChangeTimes->{{3.742557550771019*^9, 3.7425575917631483`*^9}, {
  3.742708411959568*^9, 3.742708447143889*^9}, {3.742708929682184*^9, 
  3.74270896761086*^9}, {3.746514633891429*^9, 3.746514637467846*^9}, {
  3.746527287778038*^9, 
  3.7465273077700577`*^9}},ExpressionUUID->"b0264f01-cbd3-4d56-a9cb-\
7fa7f729b2c6"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.742702750546432*^9, 3.742702763904008*^9}, {
   3.742703398443905*^9, 3.742703448964218*^9}, {3.742703794608615*^9, 
   3.742703851773758*^9}, {3.7427042536587048`*^9, 3.742704273209055*^9}, {
   3.742704541348617*^9, 3.742704562026544*^9}, {3.742704950822974*^9, 
   3.74270498810045*^9}, {3.7475681186681643`*^9, 3.747568159064834*^9}, {
   3.7499976174798484`*^9, 3.7499976569098177`*^9}, {3.7499977557137623`*^9, 
   3.7499977588494425`*^9}, {3.7499978153308916`*^9, 3.749997828579632*^9}, {
   3.7500838633804364`*^9, 3.7500838660265694`*^9}, {3.750230348230096*^9, 
   3.7502303630667906`*^9}, 
   3.7504187384815598`*^9},ExpressionUUID->"dbbf1bd4-dc2e-4a0a-8794-\
fcc78cf4fc83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["ii. Lists of lists (for matrices and arrays):", \
"Section",
 FontColor->RGBColor[0.5, 0, 0.5]]], "Subsubsection",
 CellChangeTimes->{{3.7219963615333157`*^9, 3.721996365891714*^9}, {
   3.7220568428667927`*^9, 3.722056849810797*^9}, {3.7226632820099697`*^9, 
   3.722663283353653*^9}, {3.723976158223034*^9, 3.723976168340806*^9}, {
   3.7241377837339497`*^9, 3.724137785551943*^9}, {3.724486579605586*^9, 
   3.724486586893888*^9}, {3.724486951538035*^9, 3.724486961937977*^9}, 
   3.7246577153517714`*^9, {3.730627569653945*^9, 3.7306276105981903`*^9}, {
   3.7427096749422503`*^9, 3.7427096761507196`*^9}, {3.7465261871237164`*^9, 
   3.746526190315724*^9}, {3.749997864262747*^9, 3.7499978662595983`*^9}, {
   3.7499987344217105`*^9, 3.749998735957864*^9}, {3.750001282696262*^9, 
   3.750001284695075*^9}, {3.750002387865178*^9, 3.7500023893315783`*^9}, {
   3.750003793723301*^9, 
   3.7500038130821705`*^9}},ExpressionUUID->"c357d7e5-93d0-436c-934e-\
67beb116bb0d"],

Cell[TextData[StyleBox["<1>. Create lists of lists (nested lists: matrices \
and arrays) and display them:", "Subsection"]], "Text",
 CellChangeTimes->{{3.724487017722032*^9, 3.724487034258071*^9}, {
  3.724487077753167*^9, 3.724487083081296*^9}, {3.7474036375588017`*^9, 
  3.747403637808405*^9}, {3.749998750198288*^9, 
  3.7499987612543936`*^9}},ExpressionUUID->"c52b883c-8750-4a60-b522-\
f33ae6323f69"],

Cell["\<\
When we create lists of lists, we create lists at different levels to form \
matrices and arrays. Let\[CloseCurlyQuote]s create a list of list where the \
elements are not of the same data type.\
\>", "Text",
 CellChangeTimes->{{3.724652698300106*^9, 3.7246527666360197`*^9}, {
  3.72595520030742*^9, 3.725955220859359*^9}, {3.728043178294112*^9, 
  3.728043210262494*^9}, {3.742708560824711*^9, 3.742708570240788*^9}, {
  3.742709694054267*^9, 
  3.742709697238954*^9}},ExpressionUUID->"93f1d235-fbfd-4b43-933c-\
2aaa147ee00a"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7220672260746202`*^9, 3.722067312736732*^9}, {
   3.722067357631027*^9, 3.72206735940643*^9}, 3.7220682968533554`*^9, {
   3.7227564829454927`*^9, 3.722756512097625*^9}, {3.722756552330295*^9, 
   3.722756570305307*^9}, {3.722838223628504*^9, 3.722838272132286*^9}, {
   3.7228383765325937`*^9, 3.722838436467278*^9}, {3.722838488580282*^9, 
   3.7228384968829107`*^9}, {3.722838780578062*^9, 3.7228387871369667`*^9}, {
   3.742709741226371*^9, 3.7427097552552357`*^9}, {3.74322013573739*^9, 
   3.743220153416513*^9}, 
   3.7504187478892603`*^9},ExpressionUUID->"6ca248c8-6f82-4fe4-afc2-\
647439cd0b68"],

Cell["\<\
We can manually create a 2D matrix or use Table [ ] to create a matrix. \
Notice that we start using two different shorthands to represent [ ]. @ is a \
prefix whereas // is a postfix.\
\>", "Text",
 CellChangeTimes->{{3.7246543065522013`*^9, 3.724654411039819*^9}, {
   3.724654568966778*^9, 3.7246545759506187`*^9}, {3.7427940581907387`*^9, 
   3.742794062351041*^9}, {3.742796534444624*^9, 3.74279662846999*^9}, {
   3.7499985845597258`*^9, 3.7499985964969196`*^9}, {3.750002544646141*^9, 
   3.750002569441701*^9}, {3.750050764388362*^9, 3.750050774676464*^9}, 
   3.750050837220837*^9, {3.750051691313429*^9, 3.750051750353948*^9}, {
   3.7500845765187335`*^9, 
   3.7500845939622707`*^9}},ExpressionUUID->"451d34ab-afce-4e8f-9e9d-\
8ab10763eea0"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7202555890355988`*^9, 3.7202556017406764`*^9}, {
   3.7202558014556103`*^9, 3.720255814474165*^9}, {3.7202560198734303`*^9, 
   3.7202560296400394`*^9}, {3.7202566198562827`*^9, 3.72025663275765*^9}, {
   3.721995372804827*^9, 3.7219953733392057`*^9}, {3.722067807338934*^9, 
   3.722067807580145*^9}, {3.722067841294286*^9, 3.7220678446075096`*^9}, {
   3.7220679065490704`*^9, 3.722067907474565*^9}, {3.722068102633371*^9, 
   3.722068102834465*^9}, 3.722068319687103*^9, {3.7244888044689827`*^9, 
   3.7244888049407387`*^9}, {3.724497469607382*^9, 3.724497477838085*^9}, {
   3.742710400750523*^9, 3.742710409978635*^9}, 3.742715247663981*^9, {
   3.7427209134280367`*^9, 3.742720935620384*^9}, {3.742720981917756*^9, 
   3.742721017876615*^9}, {3.7427243503516483`*^9, 3.742724371613904*^9}, {
   3.742727501280786*^9, 3.742727537151215*^9}, {3.7427294075766687`*^9, 
   3.742729425953401*^9}, {3.742792780542036*^9, 3.742792781528099*^9}, {
   3.742796706413745*^9, 3.742796741413993*^9}, {3.750002459860795*^9, 
   3.750002475782898*^9}, {3.750051794597829*^9, 3.7500518028098793`*^9}, {
   3.750052075319111*^9, 3.750052100883965*^9}, {3.7500523885858927`*^9, 
   3.7500523982220716`*^9}, {3.7500573868004227`*^9, 3.750057411643793*^9}, {
   3.75023048114359*^9, 3.750230483483605*^9}, 
   3.750418753481992*^9},ExpressionUUID->"af2e80d4-a751-4665-8d55-\
eb4c39a0fd85"]
}, Open  ]],

Cell[CellGroupData[{

Cell["<2>. Matrix operation:", "Subsection",
 CellChangeTimes->{{3.7474037332262354`*^9, 
  3.747403751309269*^9}},ExpressionUUID->"aa1ff2fe-db25-4316-a145-\
71a8c6924739"],

Cell["\<\
We can perform  different matrix operation, such as element-wise calculation, \
dot product and matrix transpose: \
\>", "Text",
 CellChangeTimes->{{3.742724422134056*^9, 3.7427244394941673`*^9}, {
   3.742724482270418*^9, 3.742724487502529*^9}, {3.742724572703465*^9, 
   3.7427245833590803`*^9}, {3.7427248225843267`*^9, 
   3.7427248556564198`*^9}, {3.742729281208232*^9, 3.742729284168415*^9}, {
   3.742729446073346*^9, 3.7427294685852423`*^9}, {3.742729777403316*^9, 
   3.74272978728353*^9}, 
   3.742729829355421*^9},ExpressionUUID->"a50384b4-001d-4f80-a7ee-\
62eb9d3ef9fc"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7427245893352013`*^9, 3.742724596359186*^9}, {
   3.7427247438821497`*^9, 3.742724760599931*^9}, {3.742726801579815*^9, 
   3.742726825531191*^9}, {3.742727098591799*^9, 3.742727108998261*^9}, {
   3.742727325797798*^9, 3.742727344462016*^9}, {3.7427292884440737`*^9, 
   3.7427292937768707`*^9}, {3.7427297141903133`*^9, 3.742729760019292*^9}, {
   3.7427871368670797`*^9, 3.7427871585625763`*^9}, {3.742798484471178*^9, 
   3.742798513390818*^9}, {3.74279931112234*^9, 3.742799327226603*^9}, {
   3.750052138047928*^9, 3.750052202132556*^9}, {3.750069772103901*^9, 
   3.7500698349312677`*^9}, 
   3.7504187576266737`*^9},ExpressionUUID->"d041b5fa-5b9c-4ad3-aef7-\
7a281356ab85"]
}, Open  ]],

Cell[CellGroupData[{

Cell["<3>. Matrix extraction:", "Subsection",
 CellChangeTimes->{{3.7474037859049134`*^9, 
  3.747403796454649*^9}},ExpressionUUID->"7eb6305c-3d5c-48b8-a018-\
7669eb65935c"],

Cell["\<\
Like a vector, we can dice a matrix to extract the part we need. In Wolfram \
Mathematica, \[OpenCurlyQuote] n;;m \[OpenCurlyQuote] means from number \
\[OpenCurlyQuote]n\[CloseCurlyQuote] to number \[OpenCurlyQuote]m\
\[CloseCurlyQuote] in matrix operation. We use mat3 as the example.\
\>", "Text",
 CellChangeTimes->{{3.7271773597259073`*^9, 3.727177434310685*^9}, {
  3.727177478790254*^9, 3.727177488974366*^9}, {3.727177717247919*^9, 
  3.727177858456798*^9}, {3.742729967316368*^9, 3.742729985724769*^9}, {
  3.742793979038808*^9, 3.742793988950862*^9}, {3.74280692375432*^9, 
  3.742807021946537*^9}},ExpressionUUID->"0ddb8878-6787-4ef0-a357-\
995e09ec8bd4"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.742793916110256*^9, 3.742793939366507*^9}, {
   3.742793972393033*^9, 3.742793972614498*^9}, {3.742799864102624*^9, 
   3.74279989239739*^9}, {3.75005229907942*^9, 3.7500523006769657`*^9}, 
   3.7504187779128*^9},ExpressionUUID->"71befb3e-1c80-4886-9fa3-1fc7ee1b108b"],

Cell["\<\
It goes the same with vector manipulation that there are a large number of \
built-in functions we can use to manipulate matrices and arrays. Discuss with \
your neighbor what the outcome is.\
\>", "Text",
 CellChangeTimes->{{3.7500734082078*^9, 3.750073543416663*^9}, {
  3.750074809088277*^9, 
  3.750074827896089*^9}},ExpressionUUID->"da2d0743-abe4-4adb-9887-\
6ca5c40ef0ab"],

Cell[BoxData[""], "Input",ExpressionUUID->"28a5cd6d-b7ec-42fa-9cb1-7c3f988464c6"],

Cell["\<\
In the previous section we mentioned the difference between using Table [ ] \
function and Array [ ] function to generate a vector. Array [ ] can take the \
argument of [function, range/domain]. Whereas some Mathematica users argue \
that the same outcome could be achieved by using Table [ ] function, Array [ \
] function makes it easier if we would like to apply a function to a range or \
a domain repetitively. The evaluated outcome of Array [ ] usually takes Grid \
[ ] to present the evaluated outcome in a matrix form.\
\>", "Text",
 CellChangeTimes->{{3.727784704864698*^9, 3.727784815593478*^9}, {
  3.728039347562852*^9, 3.728039415123036*^9}, {3.72803944642776*^9, 
  3.728039503812097*^9}, {3.728040258719866*^9, 3.728040262511981*^9}, {
  3.728113398216117*^9, 3.728113472880414*^9}, {3.742807619430058*^9, 
  3.742807671294442*^9}, {3.742807900055718*^9, 
  3.742807933407546*^9}},ExpressionUUID->"2337a1f6-5ae4-42a1-ad94-\
8fd808427597"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.750055444198526*^9, 3.750055458926643*^9}, {
   3.750146081534*^9, 3.75014608962304*^9}, 
   3.750418790761587*^9},ExpressionUUID->"3f087702-8175-4ebe-a4f2-\
f3ffffcbe7a2"],

Cell[TextData[StyleBox["Question: Try to use Table [ ] to create the same \
outcome of imat1.",
 FontColor->RGBColor[1, 0, 1]]], "Text",
 CellChangeTimes->{
  3.750055575994028*^9, {3.7500604843412647`*^9, 
   3.7500604875091887`*^9}},ExpressionUUID->"352ea8f9-c452-4030-9cee-\
416e6d7d8f9d"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.750055595337214*^9, 
  3.750418796673931*^9},ExpressionUUID->"e78ae9a3-1611-49e7-8bb2-\
7466f14a8bd4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3. Data import and visualisation: Serial killers ", "Subchapter",
 CellChangeTimes->{{3.746526325796007*^9, 3.746526329915928*^9}, {
  3.7465263650927467`*^9, 3.746526370852252*^9}, {3.746528004022503*^9, 
  3.746528042798277*^9}, {3.7474787440209217`*^9, 
  3.747478744348668*^9}},ExpressionUUID->"e61604f7-6ff8-40ce-a340-\
5b3b8706219a"],

Cell["\<\
Apart from data generation using built-in functions or relying on user to \
perform direct input, we also import data to perform various tasks. \
\>", "Text",
 CellChangeTimes->{{3.7474038410804033`*^9, 
  3.74740396493209*^9}},ExpressionUUID->"bc04615e-8e5d-4095-8978-\
dead2a77d2b7"],

Cell[TextData[StyleBox["i. Set the directory where the data is.", "Section",
 FontColor->RGBColor[0.5, 0, 0.5]]], "Text",
 CellChangeTimes->{{3.74652794384555*^9, 
  3.74652799364631*^9}},ExpressionUUID->"d60d3fd9-6438-4e7b-a3fb-\
296754fc8bb3"],

Cell[BoxData[""], "Input",ExpressionUUID->"a6c2026d-b8a6-4167-b211-8ccd85506776"],

Cell[CellGroupData[{

Cell[TextData[{
 "    ",
 StyleBox[" ii. Serial killers across the globe, 1900 - 2018:",
  FontColor->RGBColor[0.5, 0, 0.5]]
}], "Section",
 CellChangeTimes->{{3.746528645617873*^9, 3.746528685714484*^9}, {
   3.747388078209414*^9, 3.747388082473419*^9}, 
   3.7473921141135817`*^9},ExpressionUUID->"ebbc380c-abe2-4a3f-b276-\
29bd80bfab3d"],

Cell[CellGroupData[{

Cell["<1>. Data manipulation:", "Subsection",
 CellChangeTimes->{{3.746528747282549*^9, 
  3.7465287754348097`*^9}},ExpressionUUID->"fdd6a862-7d7c-4bcb-ab7d-\
20ade04b9f57"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.746528790751384*^9, {3.750052941691841*^9, 3.750052942376946*^9}, 
   3.750418816633177*^9},ExpressionUUID->"2c7b4dc0-a003-422e-a17b-\
02b5cc9aaaa0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["<2>. Data visualisation:", "Subsection",
 CellChangeTimes->{{3.746528835475039*^9, 
  3.746528851627087*^9}},ExpressionUUID->"2dc320eb-f54f-4e63-b9ce-\
4532214f82e5"],

Cell["\<\
When we visualise data, various plot built-in functions are available. It is \
convenient to use Option[ ] to make query of what options are available. \
\>", "Text",
 CellChangeTimes->{{3.747370178083366*^9, 3.74737020509941*^9}, {
  3.747381606509729*^9, 
  3.7473816363898697`*^9}},ExpressionUUID->"baddb54b-71c4-4e3b-8cc7-\
675bc11060f4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["    iii. Heat map of serial killer countries, \
1900-2018:",
 FontColor->RGBColor[0.5, 0, 0.5]]], "Section",
 CellChangeTimes->{{3.7465290622762938`*^9, 3.746529136308961*^9}, {
  3.747392170185741*^9, 
  3.747392173177567*^9}},ExpressionUUID->"f1c6d2ff-4f4c-4f80-a5de-\
c0ab6c776ce3"],

Cell[CellGroupData[{

Cell["<1>. Data manipulation:", "Subsection",
 CellChangeTimes->{
  3.746529180325403*^9},ExpressionUUID->"a4fcba84-f742-45a6-9e4b-\
96ab42b1acf0"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.746529236628724*^9, {3.749810397812125*^9, 3.749810407658004*^9}, 
   3.750418830482226*^9},ExpressionUUID->"b92e7660-1d75-43b1-bcc1-\
dbcd424847f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["<2>. Data visualisation:", "Subsection",
 CellChangeTimes->{{3.7465291901601686`*^9, 
  3.746529198541089*^9}},ExpressionUUID->"f46db5c8-9751-4873-9d88-\
1da851b019d7"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.746529297752846*^9, 3.7465292992301207`*^9}, {
   3.747391065365705*^9, 3.747391082195676*^9}, {3.750053297606045*^9, 
   3.750053300107065*^9}, 
   3.750418840257862*^9},ExpressionUUID->"c70f32ae-1d66-41c9-9076-\
5cb9938a894d"],

Cell[TextData[StyleBox["Question: add the option of \
\[OpenCurlyQuote]ImageSize->All\[CloseCurlyQuote] to the code to see what \
happens after the re-evaluation?",
 FontColor->RGBColor[1, 0, 1]]], "Text",
 CellChangeTimes->{{3.747390990450902*^9, 
  3.747391052186912*^9}},ExpressionUUID->"afd0e035-fb05-4cd1-8a2e-\
e0138efc2dc7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["   iv. Number and age of victims by serial killing in \
the US, 1900 - 2014:",
 FontColor->RGBColor[0.5, 0, 0.5]]], "Section",
 CellChangeTimes->{{3.747387933688459*^9, 3.74738800122473*^9}, {
   3.747388035401143*^9, 3.7473880577293577`*^9}, 
   3.74738809692942*^9},ExpressionUUID->"ad3d06ff-2131-415c-ba96-\
47c14655e1e7"],

Cell[CellGroupData[{

Cell["<1>. Data Manipulation:", "Subsection",
 CellChangeTimes->{{3.74738847632343*^9, 
  3.747388484491479*^9}},ExpressionUUID->"bd7f1006-190f-4feb-9ad4-\
ef0b81230079"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.747388708845834*^9, 3.747388723980102*^9}, {
   3.749811057737447*^9, 3.749811079583766*^9}, {3.7501477974170218`*^9, 
   3.750147863461965*^9}, 
   3.7504188454976254`*^9},ExpressionUUID->"a88d8399-9707-49e7-b1c0-\
aa4f754afcb1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["<2>. Data Visualisation:", "Subsection",
 CellChangeTimes->{{3.747389920700129*^9, 
  3.7473899303401527`*^9}},ExpressionUUID->"2373414c-d762-4824-a2ba-\
da73542e9ffa"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.749811349959093*^9, 3.749811438000012*^9}, {
   3.7498114746591473`*^9, 3.749811495724245*^9}, {3.749811537891622*^9, 
   3.749811585554796*^9}, {3.7500585867818747`*^9, 3.750058599867223*^9}, {
   3.7500587019413967`*^9, 3.750058708772882*^9}, {3.750416055899755*^9, 
   3.75041607930626*^9}, 
   3.7504188608248034`*^9},ExpressionUUID->"0baf1874-0ee0-49d2-92ca-\
1a9d02aea4dd"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7498112090492268`*^9, 3.749811213473404*^9}, {
  3.750147971246817*^9, 3.7501479725667543`*^9}, {3.750148021906665*^9, 
  3.750148056263731*^9}},
 CellLabel->
  "In[185]:=",ExpressionUUID->"2b1321d8-e8a1-4c84-becd-5ce346614284"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Exercise: plot the SerialKiller_byYear data showing \
stacked data and the corresponding date.",
 FontColor->RGBColor[1, 0, 1]]], "Section",
 CellChangeTimes->{{3.750148684333349*^9, 3.750148767098056*^9}, {
  3.7502321471141205`*^9, 3.7502321527009926`*^9}, {3.7502330991207156`*^9, 
  3.750233105407717*^9}},ExpressionUUID->"d61afeaf-b87a-4c2c-bd7f-\
211ff24a5e4f"],

Cell["\<\
1. Import the dataset (use Directory [] to double check your current \
directory) and remember to remove the headerline
2. Please use StackedListDatePlot [] to plot the data.
3. Go to Help page to see work out which column of data from the imported csv \
would need to be extracted.
4. Copy and paste the example from the help page to the notebook and modify \
the data to make sure the example works
5. Use StackedListDatePlot to plot the two sets of data of \[OpenCurlyQuote]2 \
or more victims\[CloseCurlyQuote] and \[OpenCurlyQuote]3 or more victims\
\[CloseCurlyQuote] over the year from 1920 to 2014.
6. Check what options StackedListDatePlot [] takes to provide more \
information to the plot.\
\>", "Subsubsection",
 CellChangeTimes->{{3.750233151419592*^9, 3.750233207109778*^9}, {
  3.7502333115643773`*^9, 3.750233314232063*^9}, {3.7502343273113127`*^9, 
  3.750234377228313*^9}, {3.750234416476181*^9, 3.750234448124346*^9}, {
  3.750403897436801*^9, 3.7504039014841213`*^9}, {3.750404003204855*^9, 
  3.7504040153329906`*^9}, {3.750405526492652*^9, 3.750405748270666*^9}, {
  3.7504058148390903`*^9, 3.750405908640276*^9}, {3.750406410162149*^9, 
  3.7504064334867973`*^9}},ExpressionUUID->"c202b6b8-bd40-4256-b7dd-\
1b6357d456f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Answer:", "Section",
 CellChangeTimes->{{3.7504040808446913`*^9, 
  3.750404109317095*^9}},ExpressionUUID->"a74aa755-6be3-419f-822b-\
22c1c090eb89"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.750232124725834*^9, 3.750232125755447*^9}, {
  3.7502330851436415`*^9, 3.750233087561719*^9}},
 CellLabel->
  "In[189]:=",ExpressionUUID->"6220b93b-65f1-47a5-89fb-0931450e9609"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["vi. For Your Reference: a summary of keyboard \
shortcuts, shorthands, and operators which have been introduced so far.", \
"Section",
 FontColor->RGBColor[0.5, 0, 0.5]]], "Subsection",
 CellChangeTimes->{{3.7474789028744583`*^9, 
  3.7474789248378696`*^9}},ExpressionUUID->"17976179-f065-4e3f-b9c6-\
03f8c432abc0"],

Cell[TextData[{
 "\n",
 StyleBox["<1>. ", "Text"],
 Cell[BoxData[GridBox[{
    {
     RowBox[{"Free", " ", "Form", " ", "Query"}], 
     RowBox[{"Press", " ", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"equal", " ", "sign"}], ")"}], " ", "once", " "}]}]},
    {
     RowBox[{"Wolfram", " ", "Alpha", " ", "Qurey", " "}], 
     RowBox[{" ", 
      RowBox[{"Press", " ", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"equal", " ", "sign"}], ")"}], " ", "twice"}]}]}]}
   },
   GridBoxDividers->{
    "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
     "RowsIndexed" -> {}}]], "Text",ExpressionUUID->
  "2a8b8f5c-6b93-4f36-b519-afe6ca559577"],
 " ",
 StyleBox["\n\n<2>. ", "Text"],
 Cell[BoxData[GridBox[{
    {
     StyleBox[
      RowBox[{"Pi", " ", 
       RowBox[{"(", "\[Pi]", ")"}]}], "Text"], 
     StyleBox[
      RowBox[{
       RowBox[{"[", "Esc", "]"}], "->", " ", 
       RowBox[{"p", "->", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"[", "Esc", "]"}], " ", "in", " ", "sequence", " ", 
          RowBox[{"or", " ", "[", 
           RowBox[{"Esc", " ", "p"}], "]"}], " ", "together", " ", "to", " ", 
          "bring", " ", "out", " ", "the", " ", "drop"}], "-", 
         RowBox[{
         "down", " ", "list", " ", "to", " ", "choose", " ", "from", 
          " "}]}]}]}], "Text"]}
   },
   GridBoxDividers->{
    "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
     "RowsIndexed" -> {}}]],ExpressionUUID->
  "92bc8a0d-b594-410d-bca8-b4bfe7aea7c4"],
 "  \n",
 StyleBox["\n<3>. ", "Text"],
 Cell[BoxData[GridBox[{
    {
     StyleBox[
      RowBox[{"Exponentiation", " "}], "Text"], 
     StyleBox[
      SuperscriptBox["x", "y"], "Text"], 
     StyleBox[
      RowBox[{"x", "\[Rule]", 
       RowBox[{
        RowBox[{"[", 
         RowBox[{"Ctrl", "+", 
          RowBox[{
           RowBox[{"^", " ", "or"}], " ", "Ctrl"}], " ", "+", "6"}], "]"}], 
        "\[Rule]", " ", "y"}]}], "Text"]},
    {
     StyleBox["Root", "Text"], 
     RadicalBox[
      StyleBox["x",
       FontSize->24], "y"], 
     StyleBox[
      RowBox[{
       RowBox[{
        RowBox[{"[", 
         RowBox[{"Ctrl", " ", "+", "2"}], "]"}], " ", "\[Rule]", "x"}], ",", 
       "  ", 
       RowBox[{
        RowBox[{"[", 
         RowBox[{"Ctrl", " ", "+", "5"}], "]"}], "\[Rule]", "y"}]}], "Text"]},
    {
     StyleBox[
      RowBox[{"Fraction", " "}], "Text"], 
     StyleBox[
      FractionBox["x", "y"], "Text"], 
     StyleBox[
      RowBox[{"x", "\[Rule]", " ", 
       RowBox[{
        RowBox[{"[", 
         RowBox[{"Ctrl", "+", "/"}], "]"}], "\[Rule]", "y"}]}], "Text"]}
   },
   GridBoxDividers->{
    "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
     "RowsIndexed" -> {}}]],ExpressionUUID->
  "3dfafc6e-82d0-49f9-bb22-8e5dfb003acf"],
 "  \n",
 StyleBox["\n<4>. ", "Text"],
 StyleBox[Cell[BoxData[GridBox[{
    {"%", 
     RowBox[{"The", " ", "last", " ", "output", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
        "it", " ", "is", " ", "the", " ", "last", " ", "cell", " ", "you", 
         " ", "evaluate"}], ",", 
        RowBox[{
        "not", " ", "necessarily", " ", "the", " ", "cell", " ", 
         "immediately", " ", "preceding", " ", "the", " ", "cell", " ", "you",
          " ", "are", " ", "about", " ", "to", " ", "evaluate", " ", 
         RowBox[{"next", "."}]}]}]}]}]},
    {"%37", 
     RowBox[{
      RowBox[{"The", " ", "result", " ", "of", " ", "the", " ", 
       SuperscriptBox["37", "th"], "output"}], ",", " ", 
      RowBox[{
      "but", " ", "once", " ", "the", " ", "cell", " ", "number", " ", 
       "changes"}], ",", " ", 
      RowBox[{
      "the", " ", "notebook", " ", "does", " ", "not", " ", "update", " ", 
       "automatically"}]}]},
    {
     RowBox[{"Out", "[", "37", "]"}], 
     RowBox[{
      RowBox[{"The", " ", "result", " ", "of", " ", "the", " ", 
       SuperscriptBox["37", 
        RowBox[{"th", " "}]], "output"}], ",", 
      RowBox[{
       StyleBox[
        RowBox[{"y", 
         StyleBox["ou", "Text"]}]], 
       StyleBox[" ", "Text"], 
       StyleBox["can", "Text"], 
       StyleBox[" ", "Text"], 
       StyleBox["see", "Text"], 
       StyleBox[" ", "Text"], 
       StyleBox["which", "Text"], 
       StyleBox[" ", "Text"], 
       StyleBox["input", "Text"], 
       StyleBox[" ", "Text"], 
       StyleBox["and", "Text"], 
       StyleBox[" ", "Text"], 
       StyleBox["output", "Text"], 
       StyleBox[" ", "Text"], 
       StyleBox["are", "Text"], 
       StyleBox[" ", "Text"], 
       StyleBox["which", "Text"], 
       StyleBox[" ", "Text"], 
       StyleBox["as", "Text"], 
       StyleBox[" ", "Text"], 
       StyleBox["it", "Text"], 
       StyleBox[" ", "Text"], 
       StyleBox["is", "Text"], 
       StyleBox[" ", "Text"], 
       StyleBox["shown", "Text"], 
       StyleBox[" ", "Text"], 
       StyleBox["on", "Text"], 
       StyleBox[" ", "Text"], 
       StyleBox["the", "Text"], 
       StyleBox[" ", "Text"], 
       StyleBox["far", "Text"], 
       StyleBox[" ", "Text"], 
       StyleBox["left", "Text"], 
       StyleBox[" ", "Text"], 
       StyleBox["side", "Text"], 
       StyleBox[" ", "Text"], 
       StyleBox["of", "Text"], 
       StyleBox[" ", "Text"], 
       StyleBox["each", "Text"], 
       StyleBox[" ", "Text"], 
       StyleBox[
        RowBox[{"cell", "."}], "Text"]}]}]},
    {
     RowBox[{"In", "[", "37", "]"}], 
     RowBox[{"The", " ", 
      SuperscriptBox["37", "th"], " ", "input"}]}
   },
   GridBoxDividers->{
    "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
     "RowsIndexed" -> {}}]], "Text",ExpressionUUID->
  "5399bd79-ed64-41ef-9951-4b64c02cbfd8"], "Text"],
 "  \n",
 StyleBox["  \n<5>. ", "Text"],
 Cell[BoxData[GridBox[{
    {
     RowBox[{"[", 
      RowBox[{"[", " ", "]"}], "]"}], 
     RowBox[{
      RowBox[{"Shorthand", " ", "for", " ", 
       RowBox[{"Part", "[", 
        RowBox[{"[", " ", "]"}], "]"}]}], ",", " ", 
      RowBox[{"very", " ", "useful"}]}]},
    {"//", 
     RowBox[{"Postfix", " ", "Shorthand", " ", 
      RowBox[{"for", " ", "[", " ", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"i", ".", "e", ".", " ", 
          RowBox[{"Total", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}], "]"}]}], " ", 
         "can", " ", "be", " ", "written", " ", "as", " ", 
         RowBox[{"{", 
          RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}]}], "//", 
        "Total"}], ")"}]}]},
    {"@", 
     RowBox[{"Pretfix", " ", "Shorthand", " ", 
      RowBox[{"for", " ", "[", " ", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"i", ".", "e", ".", " ", 
         RowBox[{"Total", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}], "]"}]}], " ", 
        "can", " ", "be", " ", "written", " ", "as", " ", 
        RowBox[{"Total", "@", 
         RowBox[{"{", 
          RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}]}]}], ")"}]}]},
    {"<>", 
     RowBox[{"Shorthand", " ", "for", " ", 
      RowBox[{
       RowBox[{"StringJoin", "[", " ", "]"}], "."}]}]},
    {"/@", 
     RowBox[{"Shorthand", " ", "for", " ", 
      RowBox[{
       RowBox[{"Map", " ", "[", "]"}], "."}]}]}
   },
   GridBoxDividers->{
    "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
     "RowsIndexed" -> {}}]], "Text",ExpressionUUID->
  "22a08c42-fe80-4fe6-9f83-aefe66a88488"],
 "\n          ",
 StyleBox["          \n<6>. ", "Text"],
 Cell[BoxData[GridBox[{
    {";", 
     RowBox[{
     "Put", " ", "it", " ", "at", " ", "the", " ", "end", " ", "of", " ", "a",
       " ", "set", " ", "of", " ", "code", " ", "to", " ", "suppress", " ", 
      "the", " ", "evaluation", " ", 
      RowBox[{"outcome", "."}]}]},
    {";;", 
     RowBox[{
     "Used", " ", "to", " ", "specify", " ", "the", " ", "relevant", " ", 
      "rows", " ", "and", " ", "columns", " ", "to", " ", "extract", " ", 
      "part", " ", "of", " ", "a", " ", "list", " ", "or", " ", "of", " ", 
      "a", " ", 
      RowBox[{"matrix", "."}]}]},
    {"&&", 
     RowBox[{"Relational", " ", "operator", " ", 
      RowBox[{"of", " ", "'"}], 
      RowBox[{"and", "'"}]}]},
    {"?", 
     RowBox[{
      RowBox[{
       RowBox[{"Enquire", " ", "any", " ", "built"}], "-", 
       RowBox[{"in", " ", "function"}]}], ",", " ", 
      RowBox[{"self", "-", 
       RowBox[{"defined", " ", "function"}]}], ",", " ", 
      RowBox[{
      "variables", " ", "and", " ", "their", " ", "assigned", " ", "value"}]}]}
   },
   GridBoxDividers->{
    "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
     "RowsIndexed" -> {}}]], "Text",ExpressionUUID->
  "cd3da2d5-f0e2-4a5e-a584-f97bcaf8c17f"]
}], "Text",
 CellChangeTimes->{{3.7202608370010743`*^9, 3.72026084422958*^9}, {
   3.7202619376654067`*^9, 3.720261966819416*^9}, {3.720262012592389*^9, 
   3.7202620159810605`*^9}, {3.7202620544761314`*^9, 
   3.7202620548443956`*^9}, {3.7202628718706365`*^9, 3.720262910783722*^9}, {
   3.720263539983696*^9, 3.7202636199985113`*^9}, {3.720263654419219*^9, 
   3.720263859762601*^9}, {3.7202644279141636`*^9, 3.720264469486577*^9}, {
   3.7202672758557167`*^9, 3.720267379362361*^9}, {3.7202704765454187`*^9, 
   3.7202704774638815`*^9}, {3.7208746802794847`*^9, 3.720874683488101*^9}, {
   3.7217179344878964`*^9, 3.7217179400102577`*^9}, {3.7217332421636066`*^9, 
   3.721733265372591*^9}, {3.721990705726143*^9, 3.721990708164692*^9}, 
   3.7219910601986403`*^9, {3.7219911138614597`*^9, 3.7219912749852924`*^9}, 
   3.7219915759943647`*^9, {3.72199176772642*^9, 3.7219919393676777`*^9}, {
   3.721991973860701*^9, 3.721991973860701*^9}, {3.7219920097415605`*^9, 
   3.7219924054949217`*^9}, {3.7220618772278047`*^9, 3.722061975855858*^9}, {
   3.722066802241213*^9, 3.7220669088024654`*^9}, {3.7220764377844677`*^9, 
   3.722076442306053*^9}, {3.722076490352577*^9, 3.722076496593231*^9}, {
   3.722077291753954*^9, 3.722077334337884*^9}, {3.722767922054057*^9, 
   3.72276796785378*^9}, {3.7227728194688663`*^9, 3.7227728709644203`*^9}, {
   3.723974726849197*^9, 3.72397472900712*^9}, {3.7239762719372883`*^9, 
   3.723976274776801*^9}, {3.724488120450288*^9, 3.724488167098031*^9}, {
   3.7244984380728817`*^9, 3.72449844597611*^9}, {3.7246673243295918`*^9, 
   3.724667433393105*^9}, {3.7247571245922117`*^9, 3.724757133519259*^9}, {
   3.724757217149254*^9, 3.7247572200924063`*^9}, {3.724757269778802*^9, 
   3.724757290363472*^9}, {3.725016379142066*^9, 3.725016382468981*^9}, {
   3.725016441422022*^9, 3.725016776413041*^9}, {3.725017324439485*^9, 
   3.725017491046386*^9}, {3.7250175401655483`*^9, 3.725017586927063*^9}, {
   3.725017648014045*^9, 3.725018090217244*^9}, {3.725018128226448*^9, 
   3.725018146985033*^9}, {3.725018283384684*^9, 3.725018329624592*^9}, {
   3.725018467089758*^9, 3.725018489776353*^9}, {3.725018610765777*^9, 
   3.725018693304028*^9}, 3.7250205617623777`*^9, {3.725022093210083*^9, 
   3.725022116166985*^9}, {3.725709956617366*^9, 3.725709956817766*^9}, {
   3.725966439378581*^9, 3.725966440099072*^9}, {3.72596649553563*^9, 
   3.725966495536422*^9}, {3.7259665460752497`*^9, 3.725966642265321*^9}, {
   3.727178522839026*^9, 3.7271785240714912`*^9}, 3.7474788904318523`*^9, {
   3.747479030840317*^9, 3.7474790308411903`*^9}, {3.747479525275923*^9, 
   3.7474795355828447`*^9}, {3.747479569007203*^9, 3.747479634318614*^9}, {
   3.7474796647642527`*^9, 3.747479711372592*^9}, {3.747479748264057*^9, 
   3.747479763253166*^9}, {3.750075335390136*^9, 3.750075355641738*^9}, {
   3.7500754034085484`*^9, 
   3.750075414800231*^9}},ExpressionUUID->"7c015c58-9214-4e32-93a2-\
64dffb7523f2"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1687, 914},
WindowMargins->{{54, Automatic}, {0, Automatic}},
WindowStatusArea->None,
Visible->True,
ShowCellTags->True,
Magnification:>1.5 Inherited,
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]]}, Visible -> False, 
  FrontEndVersion -> "11.3 for Linux x86 (64-bit) (March 6, 2018)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 317, 5, 147, "Title",ExpressionUUID->"f3b14f4e-23b5-4c29-b96b-6a8aab961d06"],
Cell[CellGroupData[{
Cell[922, 31, 270, 4, 103, "Chapter",ExpressionUUID->"68e26b18-7bc5-4be6-a4f6-2853e43ab424"],
Cell[1195, 37, 878, 18, 722, "Subchapter",ExpressionUUID->"549c1dc4-1f28-4beb-a1bb-22ac8a9a80ef"],
Cell[2076, 57, 85840, 1415, 2436, "Subchapter",ExpressionUUID->"74867c12-3854-4938-b25f-b3e99e40e5c3"],
Cell[CellGroupData[{
Cell[87941, 1476, 569, 10, 533, "Subchapter",ExpressionUUID->"612563a9-e924-4d93-a6a2-d6357b5f5dd2"],
Cell[CellGroupData[{
Cell[88535, 1490, 447, 7, 227, "Section",ExpressionUUID->"3463b99d-daea-4e19-8628-80b40bdc1226"],
Cell[88985, 1499, 13045, 219, 1320, "Subsection",ExpressionUUID->"3a797820-a97a-4046-93ee-79176dcc6618"],
Cell[102033, 1720, 522, 10, 216, "Subsection",ExpressionUUID->"463e0814-37a8-44fd-9ebb-44b49999178e"],
Cell[102558, 1732, 449, 9, 123, "Subsection",ExpressionUUID->"1c848a0e-2600-4a8e-98f2-b11a0304bae1"],
Cell[103010, 1743, 245, 8, 123, "Subsection",ExpressionUUID->"043c048d-48af-47d9-8277-d1988c24583d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103292, 1756, 720, 15, 355, "Section",ExpressionUUID->"7a601d88-02de-4d0d-b46e-46fe071c3f24"],
Cell[104015, 1773, 429, 9, 274, "Subsection",ExpressionUUID->"b7b8d228-fe7b-4c3e-87e5-90fd20fd8c7c"],
Cell[104447, 1784, 376, 7, 123, "Subsection",ExpressionUUID->"56d52d8c-3793-4602-93fe-731ba5b73b82"],
Cell[104826, 1793, 453, 9, 123, "Subsection",ExpressionUUID->"4fdf7665-730f-4b96-8179-801a4159a477"]
}, Open  ]]
}, Open  ]],
Cell[105306, 1806, 869, 15, 398, "Subchapter",ExpressionUUID->"7a6e2176-aba6-4f21-adc8-a0e363abf711"]
}, Closed]],
Cell[CellGroupData[{
Cell[106212, 1826, 570, 9, 84, "Chapter",ExpressionUUID->"4ea4ae31-52f1-4163-900b-17b8149da533"],
Cell[106785, 1837, 323, 5, 344, "Subchapter",ExpressionUUID->"53a96dbc-325e-48d0-9ea5-2e3e774edeaf"],
Cell[107111, 1844, 1704, 24, 1440, "Subchapter",ExpressionUUID->"bf3a49f6-f950-4eea-b63e-7598a2212ce6"],
Cell[108818, 1870, 956, 18, 1568, "Subchapter",ExpressionUUID->"6023bb8d-c842-493f-91e0-fe0827583110"],
Cell[109777, 1890, 1184, 23, 1055, "Subchapter",ExpressionUUID->"cf4ccedb-79e4-4c68-b937-e5882a80a0a0"]
}, Closed]],
Cell[CellGroupData[{
Cell[110998, 1918, 549, 8, 155, "Chapter",ExpressionUUID->"e7ffba44-80a1-4db8-b8d1-c07639b62cb1"],
Cell[CellGroupData[{
Cell[111572, 1930, 1208, 16, 600, "Subchapter",ExpressionUUID->"02e7fcca-28f9-426f-b332-3f4d1babcaaf"],
Cell[112783, 1948, 81, 0, 105, "Input",ExpressionUUID->"ae1ebe42-5f64-444a-91e7-4e5c2f938e16"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112901, 1953, 975, 14, 472, "Subchapter",ExpressionUUID->"587c1502-8b72-4861-9e60-7f1df21d0c10"],
Cell[113879, 1969, 409, 8, 202, "Text",ExpressionUUID->"200caa2a-8a2d-42f2-bc13-ca5c991ec317"],
Cell[114291, 1979, 81, 0, 105, "Input",ExpressionUUID->"da833ee3-3ede-4380-8a7f-e36fa6ee75da"],
Cell[114375, 1981, 473, 9, 121, "Text",ExpressionUUID->"0f98e4e3-811f-48e5-b3cc-c8f73199b1aa"],
Cell[114851, 1992, 81, 0, 105, "Input",ExpressionUUID->"41e3dbb2-8629-4591-966f-6a578642b695"],
Cell[114935, 1994, 759, 11, 702, "Subsubsection",ExpressionUUID->"d6b960ea-6b33-4844-bd1d-5a6287d29bba"],
Cell[CellGroupData[{
Cell[115719, 2009, 197, 3, 123, "Subsubsection",ExpressionUUID->"d2a56fcb-f41f-420c-ad3b-7decf126626b"],
Cell[115919, 2014, 81, 0, 105, "Input",ExpressionUUID->"677b3d60-1017-4ff9-8f08-0d0526d13e05"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[116049, 2020, 1434, 23, 216, "Subchapter",ExpressionUUID->"3d82e4dc-4717-4a54-be80-18e92af2d3bf"],
Cell[CellGroupData[{
Cell[117508, 2047, 897, 19, 288, "Section",ExpressionUUID->"a109d6c4-e055-4c9f-b257-ac95c081d1a4"],
Cell[CellGroupData[{
Cell[118430, 2070, 559, 9, 166, "Subsection",ExpressionUUID->"675d60f3-2613-4ea1-a049-314a983bd81a"],
Cell[118992, 2081, 613, 14, 123, "Text",ExpressionUUID->"bedfdb9f-2c67-4bd2-85ed-909a90f7d8ac"],
Cell[119608, 2097, 7573, 220, 724, "Text",ExpressionUUID->"c66b0c46-88ed-43a9-9385-638986f9afcf"],
Cell[127184, 2319, 510, 9, 202, "Text",ExpressionUUID->"2ce8aa28-8b88-4973-901c-77c1dc254a37"],
Cell[127697, 2330, 157, 3, 121, "Text",ExpressionUUID->"b1182e54-0a78-4234-bb6c-3af0eaeed0be"],
Cell[127857, 2335, 1405, 39, 477, "Text",ExpressionUUID->"c86d3c28-9788-4abd-801b-7663fbfcf8c9"],
Cell[129265, 2376, 425, 7, 105, "Input",ExpressionUUID->"8a75fdaa-c45f-46ec-a299-dcf3e28af7f4"],
Cell[129693, 2385, 702, 15, 281, "Text",ExpressionUUID->"af05bb88-ff72-4ef0-806a-0f215816484c"],
Cell[130398, 2402, 377, 7, 105, "Input",ExpressionUUID->"b4152716-ca52-4937-bee3-f630e1d5a197"],
Cell[130778, 2411, 624, 13, 121, "Text",ExpressionUUID->"0ef14a83-2c14-4740-a747-81a2adda787e"],
Cell[131405, 2426, 625, 15, 121, "Text",ExpressionUUID->"00c41a15-0d1b-4cb8-ad53-f210ae57d40f"],
Cell[132033, 2443, 345, 9, 105, "Input",ExpressionUUID->"4786ea2a-4370-4a02-9a77-e92748ef7081"],
Cell[132381, 2454, 704, 16, 121, "Text",ExpressionUUID->"a1087864-f676-4a1a-a8cd-5880c9d388f8"],
Cell[133088, 2472, 739, 15, 281, "Text",ExpressionUUID->"32fdd800-cd7b-48a6-bd30-2896fdca12ac"],
Cell[133830, 2489, 436, 17, 285, "Input",ExpressionUUID->"819cbc97-8a9d-4ab1-804a-5e8cc1f487c4"],
Cell[134269, 2508, 320, 8, 200, "Input",ExpressionUUID->"febe72b9-0250-4f21-ba0f-7e2ddc08a74f"],
Cell[CellGroupData[{
Cell[134614, 2520, 892, 13, 139, "Subsubsection",ExpressionUUID->"b2a9dda9-ae50-420c-a88d-9a2cd7a393ba"],
Cell[135509, 2535, 806, 13, 121, "Text",ExpressionUUID->"34144df4-a78e-4c43-9192-833693121d0d"],
Cell[136318, 2550, 432, 7, 105, "Input",ExpressionUUID->"74ba2712-a41d-4a29-8751-c8ef94448985"],
Cell[136753, 2559, 392, 6, 121, "Text",ExpressionUUID->"566f4c47-bf95-438e-8873-53733d7a7afe"],
Cell[137148, 2567, 252, 5, 105, "Input",ExpressionUUID->"ea6b8ff3-87f2-4614-ba66-6c5b3f2d18d7"],
Cell[137403, 2574, 819, 14, 202, "Text",ExpressionUUID->"2b6db2cd-3662-47ab-8f7e-27489efacd56"],
Cell[138225, 2590, 525, 8, 105, "Input",ExpressionUUID->"09d3014a-4cdc-4eff-9fc3-27de3ebb6fbe"],
Cell[138753, 2600, 496, 9, 121, "Text",ExpressionUUID->"8b8ae612-ae4d-453e-b134-cb8ee1a24840"],
Cell[139252, 2611, 149, 3, 105, "Input",ExpressionUUID->"76b0a81c-b069-4385-b85e-4cf8a805b171"],
Cell[139404, 2616, 478, 8, 121, "Text",ExpressionUUID->"e8343bbe-c641-437e-82ca-295808eab6ad"],
Cell[139885, 2626, 177, 3, 105, "Input",ExpressionUUID->"885a8015-c049-4ee9-a32e-1f7ddf7160e9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140099, 2634, 213, 4, 139, "Subsubsection",ExpressionUUID->"90b90267-16fe-46d7-b607-e9d887f5648d"],
Cell[140315, 2640, 1138, 17, 281, "Text",ExpressionUUID->"797fefb1-2869-421a-bfa8-109cda022e39"],
Cell[141456, 2659, 322, 5, 105, "Input",ExpressionUUID->"ae278ed8-7bd3-450d-ac37-0c3202cba0a6"],
Cell[141781, 2666, 327, 5, 105, "Input",ExpressionUUID->"f9002fb5-1ad9-47c1-be15-254c3be59673"],
Cell[142111, 2673, 1392, 31, 600, "Text",ExpressionUUID->"45f96e3f-ff3b-46f8-b241-8db0ac98d6c8"],
Cell[143506, 2706, 424, 8, 202, "Text",ExpressionUUID->"a4677b47-3fee-4115-b484-6f32faf8a4c1"],
Cell[143933, 2716, 249, 5, 105, "Input",ExpressionUUID->"76f3c2b0-20b9-45d9-9dd8-60f9f9f2889b"],
Cell[144185, 2723, 175, 3, 105, "Input",ExpressionUUID->"a6e23cb7-06be-4d5b-8b74-57b5faa25a4a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144397, 2731, 711, 11, 216, "Subsubsection",ExpressionUUID->"65f42f22-1ff2-445d-9afc-79cea85f87d3"],
Cell[145111, 2744, 2198, 59, 720, "Text",ExpressionUUID->"52618a17-4c7a-46a2-853a-962281275cf3"],
Cell[147312, 2805, 1767, 37, 690, "Text",ExpressionUUID->"c1c84e57-17af-4f80-b45a-68506c46ffc0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149116, 2847, 242, 4, 155, "Subsubsection",ExpressionUUID->"00baefce-22e3-477d-9ced-6dd8aa3ebfab"],
Cell[149361, 2853, 226, 4, 105, "Input",ExpressionUUID->"fccfce03-ea33-4f72-a655-664a927d758e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[149648, 2864, 1000, 15, 355, "Section",ExpressionUUID->"cf22e0cf-2771-4483-97bf-5a20449a2dc7"],
Cell[CellGroupData[{
Cell[150673, 2883, 462, 8, 182, "Subsection",ExpressionUUID->"4615d8f3-9bb3-4712-83d3-5038f5d76c50"],
Cell[151138, 2893, 676, 12, 362, "Text",ExpressionUUID->"dee202c4-3e5b-46a1-b1e3-110322efb5d9"],
Cell[151817, 2907, 552, 8, 105, "Input",ExpressionUUID->"670b18a2-f1fd-4172-b08a-89a823509a20"],
Cell[152372, 2917, 307, 5, 121, "Text",ExpressionUUID->"6e65eb8a-4931-49a4-b6f8-3d4961159ad0"],
Cell[152682, 2924, 276, 6, 121, "Text",ExpressionUUID->"1a732a2d-ebd2-4123-8c3a-1ed520022d85"],
Cell[152961, 2932, 175, 3, 105, "Input",ExpressionUUID->"415927f6-50fe-4595-9607-26e47d1e95e0"],
Cell[153139, 2937, 469, 9, 121, "Text",ExpressionUUID->"cd3dd270-b284-48de-b1c7-d3810610f8bf"],
Cell[153611, 2948, 224, 4, 105, "Input",ExpressionUUID->"acb8616d-fb64-4907-bb22-0155f19f4fac"],
Cell[153838, 2954, 548, 8, 121, "Text",ExpressionUUID->"efaf54dd-e495-402c-aede-17f403a16b28"],
Cell[154389, 2964, 398, 6, 105, "Input",ExpressionUUID->"f57d885a-0fe4-4b29-a6ce-2932ceb06927"],
Cell[154790, 2972, 708, 12, 362, "Text",ExpressionUUID->"f7987803-b1ae-4ee4-92bc-f0b0e0a33ac9"],
Cell[CellGroupData[{
Cell[155523, 2988, 220, 5, 153, "Subsubsection",ExpressionUUID->"fd7e195b-4962-489e-8752-ddd04fe74a51"],
Cell[155746, 2995, 301, 7, 121, "Text",ExpressionUUID->"1b2f03d1-e223-4b3d-9d06-e69ab0734f27"],
Cell[156050, 3004, 177, 3, 105, "Input",ExpressionUUID->"a4816968-f4dd-4bfc-8412-9cbae4ade59b"],
Cell[156230, 3009, 557, 15, 128, "Text",ExpressionUUID->"2f07462c-075f-47a4-af67-413b95e7cb0d"],
Cell[156790, 3026, 671, 11, 281, "Text",ExpressionUUID->"a72cc23a-1932-40ae-b0d4-2be7f45b86d9"],
Cell[157464, 3039, 349, 6, 105, "Input",ExpressionUUID->"07b0fc2d-9a57-4280-ad95-7bcf8f979093"],
Cell[157816, 3047, 220, 5, 121, "Text",ExpressionUUID->"d3d44d6f-ab1d-4240-a7d4-37e780447629"],
Cell[158039, 3054, 81, 0, 105, "Input",ExpressionUUID->"04d40053-7989-4fac-8283-ed6c4d13cd07"],
Cell[158123, 3056, 677, 11, 121, "Text",ExpressionUUID->"1f87ce9b-68b9-487a-839f-5643dace0c3e"],
Cell[158803, 3069, 137649, 2269, 4905, "Text",ExpressionUUID->"82d2d26f-6a47-4d29-8407-f20ae4b8b47d"],
Cell[296455, 5340, 395, 6, 105, "Input",ExpressionUUID->"0d726569-c95d-4583-8672-d8183fb38446"],
Cell[296853, 5348, 26515, 710, 2612, "Text",ExpressionUUID->"241415d4-bcdc-46a2-8f83-e7fd1ab5b9ef"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[323453, 6067, 185, 2, 84, "Chapter",ExpressionUUID->"79434523-89ce-4d5f-ad58-260ea896bb74"],
Cell[CellGroupData[{
Cell[323663, 6073, 199, 5, 216, "Subchapter",ExpressionUUID->"f928e834-9c1e-4c4a-9135-250eb7e5b5cf"],
Cell[323865, 6080, 947, 26, 438, "Section",ExpressionUUID->"b4a2c973-9765-488a-be50-4a6a055445d5"],
Cell[324815, 6108, 437, 8, 303, "Section",ExpressionUUID->"c031d126-5748-4203-a007-1f8b73f01340"],
Cell[325255, 6118, 395, 7, 303, "Section",ExpressionUUID->"d6c4883b-ffc6-47de-b244-ee85cb89b514"],
Cell[325653, 6127, 357, 7, 175, "Section",ExpressionUUID->"be72851a-85e3-4fb0-bddf-c4210e5ad638"],
Cell[326013, 6136, 202, 4, 175, "Section",ExpressionUUID->"8ddcec75-c94b-47bb-94a4-686853d6f440"]
}, Open  ]],
Cell[CellGroupData[{
Cell[326252, 6145, 888, 17, 535, "Subchapter",ExpressionUUID->"76c794db-46cd-4a82-95e9-615073ea1d91"],
Cell[327143, 6164, 439, 8, 301, "Text",ExpressionUUID->"21abb778-5611-4f56-8307-a2c155aca1ba"],
Cell[327585, 6174, 284, 6, 139, "Text",ExpressionUUID->"dfe4fd01-e212-4f84-a43b-379e4ae4e463"],
Cell[327872, 6182, 175, 3, 105, "Input",ExpressionUUID->"0c311e8b-b536-4bc6-a6b6-887c33b29608"],
Cell[328050, 6187, 252, 4, 139, "Text",ExpressionUUID->"02bd7b5d-a5d6-4daa-a03f-686b9d1258ba"],
Cell[328305, 6193, 175, 3, 105, "Input",ExpressionUUID->"4dbe15ba-161d-4049-b65d-11b47a42467e"],
Cell[328483, 6198, 320, 6, 139, "Text",ExpressionUUID->"8a4565c8-c852-41ef-a6b0-fee855552185"],
Cell[328806, 6206, 176, 3, 105, "Input",ExpressionUUID->"660607fe-eea0-441f-b091-72f363e70473"],
Cell[CellGroupData[{
Cell[329007, 6213, 1618, 39, 508, "Subsection",ExpressionUUID->"8e61a559-58e3-47b0-ba37-6ebdcb5b2234"],
Cell[330628, 6254, 177, 3, 105, "Input",ExpressionUUID->"6a7a3314-5173-47e0-9c8a-3457a71eb3bc"],
Cell[330808, 6259, 370, 7, 301, "Text",ExpressionUUID->"c202e51a-267b-40f8-a835-91cb7aa6dc98"],
Cell[331181, 6268, 200, 4, 105, "Input",ExpressionUUID->"80f81723-124f-4e18-be25-a2a2b6dddc21"],
Cell[331384, 6274, 314, 6, 137, "Text",ExpressionUUID->"218ec346-30f6-40ed-9c79-4b056a02abc8"],
Cell[331701, 6282, 177, 3, 105, "Input",ExpressionUUID->"cef91390-f39f-4b9c-a6a5-d2f1cec1bbe6"],
Cell[331881, 6287, 330, 6, 137, "Text",ExpressionUUID->"7dcb6bfc-5dc5-4b39-8f4a-eabb88adf4ba"],
Cell[332214, 6295, 199, 4, 105, "Input",ExpressionUUID->"472f0481-c48a-4527-b0d2-a3bc2424bb94"],
Cell[332416, 6301, 331, 6, 137, "Text",ExpressionUUID->"4a5c17ed-ac37-4c9c-b136-85d69ac4dfa4"],
Cell[332750, 6309, 175, 3, 105, "Input",ExpressionUUID->"69771af4-59f6-4839-8e31-b67365bacf09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[332962, 6317, 347, 9, 355, "Section",ExpressionUUID->"ee5cf99c-da92-481f-9b08-8ce1941ca7c3"],
Cell[333312, 6328, 171, 2, 105, "Input",ExpressionUUID->"42049df3-aa2e-4120-98c5-dcdb9032753a"],
Cell[333486, 6332, 209, 4, 105, "Input",ExpressionUUID->"b9b305fb-b8ac-407d-8966-a737606165c7"],
Cell[333698, 6338, 364, 6, 105, "Input",ExpressionUUID->"b5a9b23b-30e4-4e0a-aa0e-26eb66b40dcd"],
Cell[334065, 6346, 407, 10, 105, "Input",ExpressionUUID->"bea603cb-df46-4161-a5d8-dfa80c04ff21"],
Cell[334475, 6358, 653, 16, 105, "Input",ExpressionUUID->"56695f44-f988-43d7-adc9-5f6f73d113ca"],
Cell[335131, 6376, 447, 8, 105, "Input",ExpressionUUID->"09dfa62c-e115-418a-b435-5ade2ae5e78a"],
Cell[335581, 6386, 224, 4, 105, "Input",ExpressionUUID->"a2594845-2697-4c15-b781-e52a0184bbf4"],
Cell[335808, 6392, 502, 9, 105, "Input",ExpressionUUID->"f85383cd-708d-4830-8ecd-d981a3ff271d"],
Cell[336313, 6403, 429, 9, 105, "Input",ExpressionUUID->"2164a5e0-47d8-4e60-9690-4c57a40b4e1f"],
Cell[336745, 6414, 297, 6, 105, "Input",ExpressionUUID->"6057ea73-334d-4f0a-9305-23da2c5a0967"],
Cell[337045, 6422, 649, 16, 105, "Input",ExpressionUUID->"45527699-269b-432c-ba03-04c83840222a"],
Cell[337697, 6440, 947, 27, 105, "Input",ExpressionUUID->"40736671-6e67-4bcb-9950-43bcba34bdc0"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[338705, 6474, 340, 6, 84, "Chapter",ExpressionUUID->"352ee97a-3778-45e5-ba7e-5980c835525b"],
Cell[CellGroupData[{
Cell[339070, 6484, 75, 0, 216, "Subchapter",ExpressionUUID->"5da2e5ef-2eff-40b4-92c9-ead3640e3ade"],
Cell[CellGroupData[{
Cell[339170, 6488, 542, 8, 290, "Subsubsubsubsection",ExpressionUUID->"5d0122e1-cf7a-4ba6-810a-da51ab1b1fa6"],
Cell[339715, 6498, 146, 2, 105, "Input",ExpressionUUID->"39399072-44f3-4903-a696-ac7744c5816b"],
Cell[339864, 6502, 295, 6, 121, "Text",ExpressionUUID->"2811acaf-7ec8-4cf2-b19d-69b890b0c35b"],
Cell[340162, 6510, 200, 4, 105, "Input",ExpressionUUID->"819419f1-1d60-45ac-ba88-e31496d45b61"],
Cell[340365, 6516, 400, 8, 202, "Text",ExpressionUUID->"2c0b1c6b-b3b6-4899-9ac9-ecf2083ba12e"]
}, Open  ]],
Cell[340780, 6527, 440, 7, 175, "Section",ExpressionUUID->"031a17c9-aaf3-4df1-a557-c385961d4207"],
Cell[CellGroupData[{
Cell[341245, 6538, 152, 3, 175, "Section",ExpressionUUID->"2e06ee55-4ba4-4af6-a626-acb54d38ef1c"],
Cell[341400, 6543, 81, 0, 105, "Input",ExpressionUUID->"6579f009-30b0-4a47-971a-9d7b77b17ffe"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[341530, 6549, 231, 4, 216, "Subchapter",ExpressionUUID->"fb7563a4-22e7-4b26-aaed-d8fd1874c84b"],
Cell[CellGroupData[{
Cell[341786, 6557, 1153, 17, 317, "Subsubsection",ExpressionUUID->"28d8ffce-f462-4590-9d8c-a44f506ef88a"],
Cell[342942, 6576, 869, 13, 328, "Text",ExpressionUUID->"cdbf0cdf-3914-4a49-91f0-5c5d4ca90002"],
Cell[343814, 6591, 375, 8, 121, "Text",ExpressionUUID->"8bccdf12-be6f-4062-b3b8-584b501949da"],
Cell[344192, 6601, 176, 3, 105, "Input",ExpressionUUID->"bf0bc13a-6be9-4abc-aeaf-f31af622d497"],
Cell[344371, 6606, 691, 11, 238, "Text",ExpressionUUID->"8e6e5539-b8ad-4138-bd1c-6fd202272819"],
Cell[345065, 6619, 557, 10, 202, "Text",ExpressionUUID->"62d5dda2-aaa0-46e6-b9b2-0ebdced83d61"],
Cell[345625, 6631, 81, 0, 105, "Input",ExpressionUUID->"d8d9d84e-46db-4fb9-a6bf-406f46dae9d4"],
Cell[345709, 6633, 266, 5, 121, "Text",ExpressionUUID->"bf018b6e-95d5-4e98-bc0c-04edbb62d9db"],
Cell[345978, 6640, 179, 3, 105, "Input",ExpressionUUID->"ce051b56-03c9-434c-9635-ee8b6a93c30e"],
Cell[346160, 6645, 187, 3, 121, "Text",ExpressionUUID->"b1401342-cef9-4e17-bd5f-b778c774ff20"],
Cell[346350, 6650, 672, 10, 105, "Input",ExpressionUUID->"f074a50c-1a3c-4a39-81df-ff689ef23fe6"],
Cell[347025, 6662, 748, 11, 139, "Text",ExpressionUUID->"19044e3e-b809-4b56-bac0-11e594252e4d"],
Cell[347776, 6675, 458, 8, 121, "Text",ExpressionUUID->"40feff47-e7ce-4d9a-a746-de1b0c2aea35"],
Cell[348237, 6685, 276, 5, 105, "Input",ExpressionUUID->"d43a131d-dd4e-4818-a0b7-5c66330cea3c"],
Cell[348516, 6692, 229, 6, 121, "Text",ExpressionUUID->"167ee3b7-9dd5-4f1a-b5aa-f39fa65922de"],
Cell[348748, 6700, 470, 14, 132, "Text",ExpressionUUID->"bdbe59fa-0b55-4b72-ac39-c0fb6ec5704b"],
Cell[349221, 6716, 179, 3, 105, "Input",ExpressionUUID->"5ac48bc7-06a0-47f9-be52-3a4766c52aed"],
Cell[349403, 6721, 474, 7, 139, "Text",ExpressionUUID->"b0264f01-cbd3-4d56-a9cb-7fa7f729b2c6"],
Cell[349880, 6730, 734, 11, 105, "Input",ExpressionUUID->"dbbf1bd4-dc2e-4a0a-8794-fcc78cf4fc83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[350651, 6746, 997, 15, 189, "Subsubsection",ExpressionUUID->"c357d7e5-93d0-436c-934e-67beb116bb0d"],
Cell[351651, 6763, 406, 6, 139, "Text",ExpressionUUID->"c52b883c-8750-4a60-b522-f33ae6323f69"],
Cell[352060, 6771, 538, 10, 202, "Text",ExpressionUUID->"93f1d235-fbfd-4b43-933c-2aaa147ee00a"],
Cell[352601, 6783, 653, 10, 105, "Input",ExpressionUUID->"6ca248c8-6f82-4fe4-afc2-647439cd0b68"],
Cell[353257, 6795, 762, 13, 202, "Text",ExpressionUUID->"451d34ab-afce-4e8f-9e9d-8ab10763eea0"],
Cell[354022, 6810, 1425, 20, 105, "Input",ExpressionUUID->"af2e80d4-a751-4665-8d55-eb4c39a0fd85"]
}, Open  ]],
Cell[CellGroupData[{
Cell[355484, 6835, 172, 3, 182, "Subsection",ExpressionUUID->"aa1ff2fe-db25-4316-a145-71a8c6924739"],
Cell[355659, 6840, 592, 11, 121, "Text",ExpressionUUID->"a50384b4-001d-4f80-a7ee-62eb9d3ef9fc"],
Cell[356254, 6853, 730, 11, 105, "Input",ExpressionUUID->"d041b5fa-5b9c-4ad3-aef7-7a281356ab85"]
}, Open  ]],
Cell[CellGroupData[{
Cell[357021, 6869, 173, 3, 182, "Subsection",ExpressionUUID->"7eb6305c-3d5c-48b8-a018-7669eb65935c"],
Cell[357197, 6874, 676, 11, 202, "Text",ExpressionUUID->"0ddb8878-6787-4ef0-a357-995e09ec8bd4"],
Cell[357876, 6887, 317, 4, 105, "Input",ExpressionUUID->"71befb3e-1c80-4886-9fa3-1fc7ee1b108b"],
Cell[358196, 6893, 388, 8, 202, "Text",ExpressionUUID->"da2d0743-abe4-4adb-9887-6ca5c40ef0ab"],
Cell[358587, 6903, 81, 0, 105, "Input",ExpressionUUID->"28a5cd6d-b7ec-42fa-9cb1-7c3f988464c6"],
Cell[358671, 6905, 963, 15, 362, "Text",ExpressionUUID->"2337a1f6-5ae4-42a1-ad94-8fd808427597"],
Cell[359637, 6922, 221, 4, 105, "Input",ExpressionUUID->"3f087702-8175-4ebe-a4f2-f3ffffcbe7a2"],
Cell[359861, 6928, 292, 6, 121, "Text",ExpressionUUID->"352ea8f9-c452-4030-9cee-416e6d7d8f9d"],
Cell[360156, 6936, 150, 3, 105, "Input",ExpressionUUID->"e78ae9a3-1611-49e7-8bb2-7466f14a8bd4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[360355, 6945, 345, 5, 216, "Subchapter",ExpressionUUID->"e61604f7-6ff8-40ce-a340-5b3b8706219a"],
Cell[360703, 6952, 295, 6, 121, "Text",ExpressionUUID->"bc04615e-8e5d-4095-8978-dead2a77d2b7"],
Cell[361001, 6960, 245, 4, 173, "Text",ExpressionUUID->"d60d3fd9-6438-4e7b-a3fb-296754fc8bb3"],
Cell[361249, 6966, 81, 0, 105, "Input",ExpressionUUID->"a6c2026d-b8a6-4167-b211-8ccd85506776"],
Cell[CellGroupData[{
Cell[361355, 6970, 340, 8, 227, "Section",ExpressionUUID->"ebbc380c-abe2-4a3f-b276-29bd80bfab3d"],
Cell[CellGroupData[{
Cell[361720, 6982, 173, 3, 182, "Subsection",ExpressionUUID->"fdd6a862-7d7c-4bcb-ab7d-20ade04b9f57"],
Cell[361896, 6987, 200, 4, 105, "Input",ExpressionUUID->"2c7b4dc0-a003-422e-a17b-02b5cc9aaaa0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[362133, 6996, 172, 3, 182, "Subsection",ExpressionUUID->"2dc320eb-f54f-4e63-b9ce-4532214f82e5"],
Cell[362308, 7001, 352, 7, 121, "Text",ExpressionUUID->"baddb54b-71c4-4e3b-8cc7-675bc11060f4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[362709, 7014, 309, 6, 227, "Section",ExpressionUUID->"f1c6d2ff-4f4c-4f80-a5de-c0ab6c776ce3"],
Cell[CellGroupData[{
Cell[363043, 7024, 147, 3, 182, "Subsection",ExpressionUUID->"a4fcba84-f742-45a6-9e4b-96ab42b1acf0"],
Cell[363193, 7029, 200, 4, 105, "Input",ExpressionUUID->"b92e7660-1d75-43b1-bcc1-dbcd424847f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[363430, 7038, 174, 3, 182, "Subsection",ExpressionUUID->"f46db5c8-9751-4873-9d88-1da851b019d7"],
Cell[363607, 7043, 277, 5, 105, "Input",ExpressionUUID->"c70f32ae-1d66-41c9-9076-5cb9938a894d"],
Cell[363887, 7050, 331, 6, 121, "Text",ExpressionUUID->"afd0e035-fb05-4cd1-8a2e-e0138efc2dc7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[364267, 7062, 349, 6, 227, "Section",ExpressionUUID->"ad3d06ff-2131-415c-ba96-47c14655e1e7"],
Cell[CellGroupData[{
Cell[364641, 7072, 170, 3, 182, "Subsection",ExpressionUUID->"bd7f1006-190f-4feb-9ad4-ef0b81230079"],
Cell[364814, 7077, 279, 5, 105, "Input",ExpressionUUID->"a88d8399-9707-49e7-b1c0-aa4f754afcb1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[365130, 7087, 174, 3, 182, "Subsection",ExpressionUUID->"2373414c-d762-4824-a2ba-da73542e9ffa"],
Cell[365307, 7092, 428, 7, 105, "Input",ExpressionUUID->"0baf1874-0ee0-49d2-92ca-1a9d02aea4dd"],
Cell[365738, 7101, 277, 5, 105, "Input",ExpressionUUID->"2b1321d8-e8a1-4c84-becd-5ce346614284"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[366064, 7112, 391, 6, 355, "Section",ExpressionUUID->"d61afeaf-b87a-4c2c-bd7f-211ff24a5e4f"],
Cell[366458, 7120, 1254, 21, 686, "Subsubsection",ExpressionUUID->"c202b6b8-bd40-4256-b7dd-1b6357d456f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[367749, 7146, 154, 3, 227, "Section",ExpressionUUID->"a74aa755-6be3-419f-822b-22c1c090eb89"],
Cell[367906, 7151, 226, 4, 105, "Input",ExpressionUUID->"6220b93b-65f1-47a5-89fb-0931450e9609"],
Cell[CellGroupData[{
Cell[368157, 7159, 339, 6, 344, "Subsection",ExpressionUUID->"17976179-f065-4e3f-b9c6-03f8c432abc0"],
Cell[368499, 7167, 11757, 303, 2283, "Text",ExpressionUUID->"7c015c58-9214-4e32-93a2-64dffb7523f2"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

